<span class="hl slc">;;   The Computer Language Benchmarks Game</span>
<span class="hl slc">;;   http://benchmarksgame.alioth.debian.org/</span>

<span class="hl slc">;; contributed by Johannes Friestad</span>
<span class="hl slc">;; modified by Marko Kocic</span>
<span class="hl slc">;; modified slightly by Andy Fingerhut so it would compile and run on</span>
<span class="hl slc">;; Clojure 1.2 and 1.3</span>

<span class="hl opt">(</span><span class="hl kwa">ns</span> nbody
  <span class="hl opt">(:</span>gen-class<span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">set</span><span class="hl opt">! *</span>warn-on-reflection<span class="hl opt">*</span> true<span class="hl opt">)</span>

<span class="hl slc">;; Handle slight difference in function name between Clojure 1.2 and</span>
<span class="hl slc">;; 1.3.</span>
<span class="hl opt">(</span><span class="hl kwa">defmacro</span> my-unchecked-inc-int <span class="hl opt">[&amp;</span> args<span class="hl opt">]</span>
  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(== (*</span>clojure-version<span class="hl opt">* :</span>major<span class="hl opt">)</span> <span class="hl num">1</span><span class="hl opt">)</span>
           <span class="hl opt">(== (*</span>clojure-version<span class="hl opt">* :</span>minor<span class="hl opt">)</span> <span class="hl num">2</span><span class="hl opt">))</span>
    <span class="hl opt">`(</span><span class="hl kwa">unchecked-inc</span> ~<span class="hl opt">&#64;</span>args<span class="hl opt">)</span>
    <span class="hl opt">`(</span><span class="hl kwa">unchecked-inc-int</span> ~<span class="hl opt">&#64;</span>args<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">definterface</span> IBody
  <span class="hl opt">(</span>^String name <span class="hl opt">[])</span>
  <span class="hl opt">(</span>^double mass <span class="hl opt">[])</span>
  <span class="hl opt">(</span>^double x <span class="hl opt">[])</span>
  <span class="hl opt">(</span>^double y <span class="hl opt">[])</span>
  <span class="hl opt">(</span>^double z <span class="hl opt">[])</span>
  <span class="hl opt">(</span>^double vx <span class="hl opt">[])</span>
  <span class="hl opt">(</span>^double vy <span class="hl opt">[])</span>
  <span class="hl opt">(</span>^double vz <span class="hl opt">[])</span>
  <span class="hl opt">(</span><span class="hl kwa">clone</span> <span class="hl opt">[]</span> <span class="hl str">&quot;returns copy of self&quot;</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">p_BANG_</span> <span class="hl opt">[</span>^double x ^double y ^double z<span class="hl opt">]</span> <span class="hl str">&quot;set position&quot;</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">p_dt_BANG_</span> <span class="hl opt">[</span>^double dt<span class="hl opt">]</span> <span class="hl str">&quot;update position&quot;</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">v_dt_BANG_</span> <span class="hl opt">[</span>^double dt other<span class="hl opt">]</span> <span class="hl str">&quot;update velocity&quot;</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">v_BANG_</span> <span class="hl opt">[</span>^double vx ^double vy ^double vz<span class="hl opt">]</span> <span class="hl str">&quot;set velocity&quot;</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">v_PLUS__BANG_</span> <span class="hl opt">[</span>^double vx ^double vy ^double vz<span class="hl opt">]</span> <span class="hl str">&quot;add to velocity&quot;</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">energy</span> <span class="hl opt">[</span>nbodies<span class="hl opt">]</span> <span class="hl str">&quot;energy relative to nbodies&quot;</span><span class="hl opt">))</span>


<span class="hl opt">(</span><span class="hl kwa">deftype</span> Body <span class="hl opt">[</span>^String name
               ^double mass
               ^<span class="hl opt">{:</span>unsynchronized-mutable true <span class="hl opt">:</span>tag double<span class="hl opt">}</span> x
               ^<span class="hl opt">{:</span>unsynchronized-mutable true <span class="hl opt">:</span>tag double<span class="hl opt">}</span> y
               ^<span class="hl opt">{:</span>unsynchronized-mutable true <span class="hl opt">:</span>tag double<span class="hl opt">}</span> z
               ^<span class="hl opt">{:</span>unsynchronized-mutable true <span class="hl opt">:</span>tag double<span class="hl opt">}</span> vx
               ^<span class="hl opt">{:</span>unsynchronized-mutable true <span class="hl opt">:</span>tag double<span class="hl opt">}</span> vy
               ^<span class="hl opt">{:</span>unsynchronized-mutable true <span class="hl opt">:</span>tag double<span class="hl opt">}</span> vz <span class="hl opt">]</span>
  IBody
  <span class="hl opt">(</span><span class="hl kwa">name</span> <span class="hl opt">[</span>this<span class="hl opt">]</span> name<span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">x</span> <span class="hl opt">[</span>this<span class="hl opt">]</span> x<span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">y</span> <span class="hl opt">[</span>this<span class="hl opt">]</span> y<span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">z</span> <span class="hl opt">[</span>this<span class="hl opt">]</span> z<span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">vx</span> <span class="hl opt">[</span>this<span class="hl opt">]</span> vx<span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">vy</span> <span class="hl opt">[</span>this<span class="hl opt">]</span> vy<span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">vz</span> <span class="hl opt">[</span>this<span class="hl opt">]</span> vz<span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">mass</span> <span class="hl opt">[</span>this<span class="hl opt">]</span> mass<span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">clone</span> <span class="hl opt">[</span>this<span class="hl opt">] (</span><span class="hl kwa">Body</span>. name mass x y z vx vy vz<span class="hl opt">))</span>

  <span class="hl opt">(</span><span class="hl kwa">p</span><span class="hl opt">! [</span>this nx ny nz<span class="hl opt">]</span>
    <span class="hl opt">(</span><span class="hl kwa">set</span><span class="hl opt">!</span> x nx<span class="hl opt">) (</span><span class="hl kwa">set</span><span class="hl opt">!</span> y ny<span class="hl opt">) (</span><span class="hl kwa">set</span><span class="hl opt">!</span> z nz<span class="hl opt">)</span>
    this<span class="hl opt">)</span>

  <span class="hl opt">(</span><span class="hl kwa">v</span><span class="hl opt">! [</span>this nvx nvy nvz<span class="hl opt">]</span>
    <span class="hl opt">(</span><span class="hl kwa">set</span><span class="hl opt">!</span> vx nvx<span class="hl opt">) (</span><span class="hl kwa">set</span><span class="hl opt">!</span> vy nvy<span class="hl opt">) (</span><span class="hl kwa">set</span><span class="hl opt">!</span> vz nvz<span class="hl opt">)</span>
    this<span class="hl opt">)</span>

  <span class="hl opt">(</span><span class="hl kwa">v</span><span class="hl opt">+! [</span>this dvx dvy dvz<span class="hl opt">]</span>
    <span class="hl opt">(</span><span class="hl kwa">set</span><span class="hl opt">!</span> vx <span class="hl opt">(+</span> vx dvx<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">set</span><span class="hl opt">!</span> vy <span class="hl opt">(+</span> vy dvy<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">set</span><span class="hl opt">!</span> vz <span class="hl opt">(+</span> vz dvz<span class="hl opt">)))</span>

  <span class="hl opt">(</span><span class="hl kwa">p-dt</span><span class="hl opt">! [</span>this dt<span class="hl opt">]</span>
    <span class="hl opt">(</span><span class="hl kwa">set</span><span class="hl opt">!</span> x <span class="hl opt">(+</span> x <span class="hl opt">(*</span> dt vx<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">set</span><span class="hl opt">!</span> y <span class="hl opt">(+</span> y <span class="hl opt">(*</span> dt vy<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">set</span><span class="hl opt">!</span> z <span class="hl opt">(+</span> z <span class="hl opt">(*</span> dt vz<span class="hl opt">)))</span>
    this <span class="hl opt">)</span>

  <span class="hl opt">(</span><span class="hl kwa">v-dt</span><span class="hl opt">! [</span>this dt other<span class="hl opt">]</span>
    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">[</span>^Body b other
          dx <span class="hl opt">(</span><span class="hl kwa">-</span> x <span class="hl opt">(</span>.x b<span class="hl opt">))</span>
          dy <span class="hl opt">(</span><span class="hl kwa">-</span> y <span class="hl opt">(</span>.y b<span class="hl opt">))</span>
          dz <span class="hl opt">(</span><span class="hl kwa">-</span> z <span class="hl opt">(</span>.z b<span class="hl opt">))</span>
          dsq <span class="hl opt">(+ (*</span> dx dx<span class="hl opt">)</span>
                <span class="hl opt">(+ (*</span> dy dy<span class="hl opt">)</span>
                  <span class="hl opt">(*</span> dz dz<span class="hl opt">)))</span>
          mag <span class="hl opt">(/</span> dt <span class="hl opt">(*</span> dsq <span class="hl opt">(</span><span class="hl kwa">Math</span><span class="hl opt">/</span>sqrt dsq<span class="hl opt">)))</span>
          m1 <span class="hl opt">(</span><span class="hl kwa">-</span> <span class="hl opt">(* (</span>.mass b<span class="hl opt">)</span> mag<span class="hl opt">))</span>
          m2 <span class="hl opt">(*</span> mass mag<span class="hl opt">) ]</span>
      <span class="hl slc">; own velocity</span>
      <span class="hl opt">(</span><span class="hl kwa">set</span><span class="hl opt">!</span> vx <span class="hl opt">(+</span> vx <span class="hl opt">(*</span> dx m1<span class="hl opt">)))</span>
      <span class="hl opt">(</span><span class="hl kwa">set</span><span class="hl opt">!</span> vy <span class="hl opt">(+</span> vy <span class="hl opt">(*</span> dy m1<span class="hl opt">)))</span>
      <span class="hl opt">(</span><span class="hl kwa">set</span><span class="hl opt">!</span> vz <span class="hl opt">(+</span> vz <span class="hl opt">(*</span> dz m1<span class="hl opt">)))</span>
      <span class="hl slc">; v of other</span>
      <span class="hl opt">(</span>.v<span class="hl opt">+!</span> b <span class="hl opt">(*</span> dx m2<span class="hl opt">) (*</span> dy m2<span class="hl opt">) (*</span> dz m2<span class="hl opt">))</span>
      this <span class="hl opt">))</span>

  <span class="hl opt">(</span><span class="hl kwa">energy</span> <span class="hl opt">[</span>this nbodies<span class="hl opt">]</span>
    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">[</span>v-sq <span class="hl opt">(+ (*</span> vx vx<span class="hl opt">) (*</span> vy vy<span class="hl opt">) (*</span> vz vz<span class="hl opt">))</span>
          e <span class="hl opt">(*</span> <span class="hl num">1</span><span class="hl opt">/</span><span class="hl num">2</span> mass v-sq<span class="hl opt">)</span>  <span class="hl slc">; kinetic energy: 1/2 * m * v^2</span>
          f <span class="hl opt">(</span><span class="hl kwa">fn</span> <span class="hl opt">[</span>e ^Body b<span class="hl opt">]</span>
              <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">[</span>dx <span class="hl opt">(</span><span class="hl kwa">-</span> x <span class="hl opt">(</span>.x b<span class="hl opt">))</span>
                    dy <span class="hl opt">(</span><span class="hl kwa">-</span> y <span class="hl opt">(</span>.y b<span class="hl opt">))</span>
                    dz <span class="hl opt">(</span><span class="hl kwa">-</span> z <span class="hl opt">(</span>.z b<span class="hl opt">))</span>
                    dist <span class="hl opt">(</span><span class="hl kwa">Math</span><span class="hl opt">/</span>sqrt
                           <span class="hl opt">(+ (*</span> dx dx<span class="hl opt">) (*</span> dy dy<span class="hl opt">) (*</span> dz dz<span class="hl opt">))) ]</span>
                <span class="hl opt">(</span><span class="hl kwa">-</span> e <span class="hl opt">(/ (*</span> mass <span class="hl opt">(</span>.mass b<span class="hl opt">))</span>
                       dist<span class="hl opt">)))) ]</span>
      <span class="hl opt">(</span><span class="hl kwa">reduce</span> f e nbodies<span class="hl opt">)))</span>

  Object
  <span class="hl opt">(</span><span class="hl kwa">toString</span> <span class="hl opt">[</span>this<span class="hl opt">]</span>
    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">[</span>fmt <span class="hl str">&quot; %s mass %.3f</span><span class="hl esc">\n</span> <span class="hl str">p: [%.3f %.3f %.3f]</span><span class="hl esc">\n</span> <span class="hl str">v: [%.3f %.3f %.3f]</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">]</span>
      <span class="hl opt">(</span><span class="hl kwa">format</span> fmt name mass x y z vx vy vz <span class="hl opt">(</span><span class="hl kwa">type</span> x<span class="hl opt">)))) )</span>

<span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">[</span>solar-mass <span class="hl opt">(*</span> <span class="hl num">4</span> Math<span class="hl opt">/</span>PI Math<span class="hl opt">/</span>PI<span class="hl opt">)</span>
      days-year <span class="hl num">365.24</span> <span class="hl opt">]</span>
  <span class="hl opt">(</span><span class="hl kwa">defn</span> mk-body <span class="hl opt">[</span>b-name <span class="hl opt">&amp;</span> args<span class="hl opt">]</span>
    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">[{:</span>keys <span class="hl opt">[</span>x y z vx vy vz mass<span class="hl opt">]} (</span><span class="hl kwa">apply</span> hash-map args<span class="hl opt">) ]</span>
      <span class="hl opt">(</span><span class="hl kwa">Body</span>. <span class="hl opt">(</span><span class="hl kwa">name</span> b-name<span class="hl opt">) (*</span> mass solar-mass<span class="hl opt">)</span> x y z
        <span class="hl opt">(*</span> vx days-year<span class="hl opt">) (*</span> vy days-year<span class="hl opt">) (*</span> vz days-year<span class="hl opt">)))))</span>

<span class="hl slc">; Data for initial state</span>
<span class="hl opt">(</span><span class="hl kwa">def</span> <span class="hl opt">+</span>data<span class="hl opt">+</span>
  <span class="hl opt">(</span><span class="hl kwa">list</span>
    <span class="hl opt">(</span><span class="hl kwa">mk-body</span> <span class="hl opt">:</span>sun
      <span class="hl opt">:</span>x <span class="hl num">0.0</span>
      <span class="hl opt">:</span>y <span class="hl num">0.0</span>
      <span class="hl opt">:</span>z <span class="hl num">0.0</span>
      <span class="hl opt">:</span>vx <span class="hl num">0.0</span>
      <span class="hl opt">:</span>vy <span class="hl num">0.0</span>
      <span class="hl opt">:</span>vz <span class="hl num">0.0</span>
      <span class="hl opt">:</span>mass <span class="hl num">1.0</span> <span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">mk-body</span> <span class="hl opt">:</span>jupiter
      <span class="hl opt">:</span>x <span class="hl num">4.84143144246472090e+00</span>
      <span class="hl opt">:</span>y -<span class="hl num">1.16032004402742839e+00</span>
      <span class="hl opt">:</span>z -<span class="hl num">1.03622044471123109e-01</span>
      <span class="hl opt">:</span>vx <span class="hl num">1.66007664274403694e-03</span>
      <span class="hl opt">:</span>vy <span class="hl num">7.69901118419740425e-03</span>
      <span class="hl opt">:</span>vz -<span class="hl num">6.90460016972063023e-05</span>
      <span class="hl opt">:</span>mass <span class="hl num">9.54791938424326609e-04</span> <span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">mk-body</span> <span class="hl opt">:</span>saturn
      <span class="hl opt">:</span>x <span class="hl num">8.34336671824457987e+00</span>
      <span class="hl opt">:</span>y <span class="hl num">4.12479856412430479e+00</span>
      <span class="hl opt">:</span>z -<span class="hl num">4.03523417114321381e-01</span>
      <span class="hl opt">:</span>vx -<span class="hl num">2.76742510726862411e-03</span>
      <span class="hl opt">:</span>vy <span class="hl num">4.99852801234917238e-03</span>
      <span class="hl opt">:</span>vz <span class="hl num">2.30417297573763929e-05</span>
      <span class="hl opt">:</span>mass <span class="hl num">2.85885980666130812e-04</span> <span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">mk-body</span> <span class="hl opt">:</span>uranus
      <span class="hl opt">:</span>x <span class="hl num">1.28943695621391310e+01</span>
      <span class="hl opt">:</span>y -<span class="hl num">1.51111514016986312e+01</span>
      <span class="hl opt">:</span>z -<span class="hl num">2.23307578892655734e-01</span>
      <span class="hl opt">:</span>vx <span class="hl num">2.96460137564761618e-03</span>
      <span class="hl opt">:</span>vy <span class="hl num">2.37847173959480950e-03</span>
      <span class="hl opt">:</span>vz -<span class="hl num">2.96589568540237556e-05</span>
      <span class="hl opt">:</span>mass <span class="hl num">4.36624404335156298e-05</span> <span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">mk-body</span> <span class="hl opt">:</span>neptune
      <span class="hl opt">:</span>x <span class="hl num">1.53796971148509165e+01</span>
      <span class="hl opt">:</span>y -<span class="hl num">2.59193146099879641e+01</span>
      <span class="hl opt">:</span>z <span class="hl num">1.79258772950371181e-01</span>
      <span class="hl opt">:</span>vx <span class="hl num">2.68067772490389322e-03</span>
      <span class="hl opt">:</span>vy <span class="hl num">1.62824170038242295e-03</span>
      <span class="hl opt">:</span>vz -<span class="hl num">9.51592254519715870e-05</span>
      <span class="hl opt">:</span>mass <span class="hl num">5.15138902046611451e-05</span> <span class="hl opt">) ))</span>


<span class="hl opt">(</span><span class="hl kwa">def</span> bodies<span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defn</span> init-state <span class="hl opt">[]</span>
  <span class="hl slc">;; Initialize state</span>
  <span class="hl slc">;; clone is a convenience for repeated runs in the REPL.</span>
  <span class="hl opt">(</span><span class="hl kwa">def</span> bodies <span class="hl opt">(</span><span class="hl kwa">into-array</span> Object <span class="hl opt">(</span><span class="hl kwa">map</span> <span class="hl opt">#(</span>.clone ^Body %<span class="hl opt">) +</span>data<span class="hl opt">+)))</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">[[</span>px py pz<span class="hl opt">] (</span><span class="hl kwa">reduce</span> <span class="hl opt">(</span><span class="hl kwa">fn</span> <span class="hl opt">[[</span>px py pz<span class="hl opt">]</span> ^Body b<span class="hl opt">]</span>
                             <span class="hl opt">(</span><span class="hl kwa">vector</span>
                              <span class="hl opt">(+</span> px <span class="hl opt">(* (</span>.vx b<span class="hl opt">) (</span>.mass b<span class="hl opt">)))</span>
                              <span class="hl opt">(+</span> py <span class="hl opt">(* (</span>.vy b<span class="hl opt">) (</span>.mass b<span class="hl opt">)))</span>
                              <span class="hl opt">(+</span> pz <span class="hl opt">(* (</span>.vz b<span class="hl opt">) (</span>.mass b<span class="hl opt">))) ))</span>
                           <span class="hl opt">[</span><span class="hl num">0.0 0.0 0.0</span><span class="hl opt">]</span>
                           bodies<span class="hl opt">)</span>
        ^Body sun <span class="hl opt">(</span><span class="hl kwa">aget</span> ^objects bodies <span class="hl num">0</span><span class="hl opt">)</span>
        mass <span class="hl opt">(</span>.mass sun<span class="hl opt">) ]</span>
    <span class="hl opt">(</span>.v<span class="hl opt">!</span> sun <span class="hl opt">(/ (</span><span class="hl kwa">-</span> px<span class="hl opt">)</span> mass<span class="hl opt">) (/ (</span><span class="hl kwa">-</span> py<span class="hl opt">)</span> mass<span class="hl opt">) (/ (</span><span class="hl kwa">-</span> pz<span class="hl opt">)</span> mass<span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defn</span> energy
  <span class="hl slc">;; Total energy for current state</span>
  <span class="hl opt">([] (</span><span class="hl kwa">energy</span> bodies<span class="hl opt">))</span> <span class="hl slc">; total</span>
  <span class="hl opt">([</span>bodies<span class="hl opt">]</span>              <span class="hl slc">; loop</span>
    <span class="hl opt">(</span><span class="hl kwa">if-not</span> bodies <span class="hl num">0.0</span>
      <span class="hl opt">(+ (</span>.energy ^Body <span class="hl opt">(</span><span class="hl kwa">first</span> bodies<span class="hl opt">) (</span><span class="hl kwa">next</span> bodies<span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">energy</span> <span class="hl opt">(</span><span class="hl kwa">next</span> bodies<span class="hl opt">))))))</span>

<span class="hl opt">(</span><span class="hl kwa">defn</span> advance <span class="hl opt">[</span>dt<span class="hl opt">]</span>
  <span class="hl slc">;; Move system one dt timestep forwards</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">[</span>^objects bodies bodies
        len <span class="hl opt">(</span><span class="hl kwa">int</span> <span class="hl opt">(</span><span class="hl kwa">alength</span> bodies<span class="hl opt">))</span>
        dt <span class="hl opt">(</span><span class="hl kwa">double</span> dt<span class="hl opt">) ]</span>
    <span class="hl opt">(</span><span class="hl kwa">dotimes</span> <span class="hl opt">[</span>i len<span class="hl opt">]</span>
      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">[</span>^Body body <span class="hl opt">(</span><span class="hl kwa">aget</span> bodies i<span class="hl opt">) ]</span>
        <span class="hl slc">; update velocity</span>
        <span class="hl opt">(</span><span class="hl kwa">loop</span> <span class="hl opt">[</span>j <span class="hl opt">(</span><span class="hl kwa">my-unchecked-inc-int</span> i<span class="hl opt">) ]</span>
          <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(&lt;</span> j len<span class="hl opt">)</span>
            <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">[</span>^Body nbody <span class="hl opt">(</span><span class="hl kwa">aget</span> bodies j<span class="hl opt">)]</span>
              <span class="hl opt">(</span>.v-dt<span class="hl opt">!</span> body dt nbody<span class="hl opt">)</span>
              <span class="hl opt">(</span><span class="hl kwa">recur</span> <span class="hl opt">(</span><span class="hl kwa">my-unchecked-inc-int</span> j<span class="hl opt">)))))</span>
        <span class="hl slc">; update position</span>
        <span class="hl opt">(</span>.p-dt<span class="hl opt">!</span> body dt<span class="hl opt">)))))</span>


<span class="hl opt">(</span><span class="hl kwa">defn</span> usage <span class="hl opt">[</span>exit-code<span class="hl opt">]</span>
  <span class="hl opt">(</span><span class="hl kwa">printf</span> <span class="hl str">&quot;usage: %s n</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> <span class="hl opt">*</span>file<span class="hl opt">*)</span>
  <span class="hl opt">(</span><span class="hl kwa">printf</span> <span class="hl str">&quot;    n, a positive integer, is the number of simulation steps to run</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">flush</span><span class="hl opt">)</span>
  <span class="hl opt">(</span>. System <span class="hl opt">(</span><span class="hl kwa">exit</span> exit-code<span class="hl opt">)))</span>


<span class="hl opt">(</span><span class="hl kwa">defn</span> -main <span class="hl opt">[&amp;</span> args<span class="hl opt">]</span>
  <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">not</span><span class="hl opt">= (</span><span class="hl kwa">count</span> args<span class="hl opt">)</span> <span class="hl num">1</span><span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">usage</span> <span class="hl num">1</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">def</span> n
       <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">[</span>arg <span class="hl opt">(</span><span class="hl kwa">nth</span> args <span class="hl num">0</span><span class="hl opt">)]</span>
         <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">re-matches</span> <span class="hl opt">#</span><span class="hl str">&quot;^\d+$&quot;</span> arg<span class="hl opt">))</span>
           <span class="hl opt">(</span><span class="hl kwa">usage</span> <span class="hl num">1</span><span class="hl opt">))</span>
         <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">[</span>temp <span class="hl opt">(</span>. Integer valueOf arg <span class="hl num">10</span><span class="hl opt">)]</span>
           <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(&lt;</span> temp <span class="hl num">1</span><span class="hl opt">)</span>
             <span class="hl opt">(</span><span class="hl kwa">usage</span> <span class="hl num">1</span><span class="hl opt">))</span>
           temp<span class="hl opt">)))</span>
  <span class="hl opt">(</span><span class="hl kwa">init-state</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">printf</span> <span class="hl str">&quot;%.9f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> <span class="hl opt">(</span><span class="hl kwa">energy</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">dotimes</span> <span class="hl opt">[</span>_ <span class="hl opt">(</span><span class="hl kwa">int</span> n<span class="hl opt">)]</span>
    <span class="hl opt">(</span><span class="hl kwa">advance</span> <span class="hl num">0.01</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">printf</span> <span class="hl str">&quot;%.9f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> <span class="hl opt">(</span><span class="hl kwa">energy</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">flush</span><span class="hl opt">))</span>
