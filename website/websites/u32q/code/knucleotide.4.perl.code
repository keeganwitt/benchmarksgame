<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc">#  http://benchmarksgame.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc">#  contributed by Mykola Zubach</span>

<span class="hl kwa">use</span> strict<span class="hl opt">;</span>
<span class="hl kwa">use</span> integer<span class="hl opt">;</span>
<span class="hl kwa">use</span> threads<span class="hl opt">;</span>

<span class="hl kwc">my</span><span class="hl opt">(</span><span class="hl kwb">$sequence</span><span class="hl opt">,</span> <span class="hl kwb">$seq_len</span><span class="hl opt">,</span> <span class="hl kwb">$thr</span><span class="hl opt">,</span> <span class="hl kwb">&#64;threads</span><span class="hl opt">,</span> <span class="hl kwb">%h</span><span class="hl opt">);</span>

<span class="hl kwa">sub</span> count_frame <span class="hl opt">{</span>
   <span class="hl kwc">my</span> <span class="hl kwb">$len</span> <span class="hl opt">=</span> <span class="hl kwc">shift</span><span class="hl opt">;</span>
   <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl num">0</span> <span class="hl opt">..</span> <span class="hl kwb">$seq_len</span> <span class="hl opt">-</span> <span class="hl kwb">$len</span><span class="hl opt">) {</span>
      <span class="hl kwb">$h</span><span class="hl opt">{</span><span class="hl kwc">substr</span><span class="hl opt">(</span><span class="hl kwb">$sequence</span><span class="hl opt">,</span> <span class="hl kwb">$_</span><span class="hl opt">,</span> <span class="hl kwb">$len</span><span class="hl opt">)} ++;</span>
   <span class="hl opt">}</span>
<span class="hl opt">}</span>

<span class="hl kwa">sub</span> count_len <span class="hl opt">{</span>
   <span class="hl kwc">my</span> <span class="hl kwb">$len</span> <span class="hl opt">=</span> <span class="hl kwc">shift</span><span class="hl opt">;</span>
   <span class="hl kwc">my</span> <span class="hl kwb">$out</span><span class="hl opt">;</span>
   count_frame<span class="hl opt">(</span><span class="hl kwb">$len</span><span class="hl opt">);</span>

   <span class="hl kwa">no</span> integer<span class="hl opt">;</span>
   <span class="hl kwa">if</span><span class="hl opt">(</span><span class="hl kwb">&#64;_</span><span class="hl opt">) {</span>
      <span class="hl kwb">$out</span> <span class="hl opt">=</span> <span class="hl kwc">join</span> <span class="hl str">''</span><span class="hl opt">,</span> <span class="hl kwc">map sprintf</span><span class="hl opt">(</span><span class="hl str">&quot;%d</span><span class="hl esc">\t</span><span class="hl str">%s</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">,</span> <span class="hl kwb">$h</span><span class="hl opt">{</span><span class="hl kwb">$_</span><span class="hl opt">},</span> <span class="hl kwb">$_</span><span class="hl opt">),</span> <span class="hl kwb">&#64;_</span><span class="hl opt">;</span>
   <span class="hl opt">}</span> <span class="hl kwa">else</span> <span class="hl opt">{</span>
      <span class="hl kwc">my</span> <span class="hl kwb">$sum</span> <span class="hl opt">=</span> <span class="hl kwb">$seq_len</span> <span class="hl opt">-</span> <span class="hl kwb">$len</span> <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">;</span>
      <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwc">sort</span> <span class="hl opt">{</span> <span class="hl kwb">$h</span><span class="hl opt">{</span><span class="hl kwb">$b</span><span class="hl opt">} &lt;=&gt;</span> <span class="hl kwb">$h</span><span class="hl opt">{</span><span class="hl kwb">$a</span><span class="hl opt">} ||</span> <span class="hl kwb">$a</span> <span class="hl kwc">cmp</span> <span class="hl kwb">$b</span> <span class="hl opt">}</span> <span class="hl kwc">keys</span> <span class="hl kwb">%h</span><span class="hl opt">) {</span>
         <span class="hl kwb">$out</span> <span class="hl opt">.=</span> <span class="hl kwc">sprintf</span> <span class="hl str">&quot;%s %.3f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">,</span> <span class="hl kwb">$_</span><span class="hl opt">,</span> <span class="hl kwb">$h</span><span class="hl opt">{</span><span class="hl kwb">$_</span><span class="hl opt">} *</span> <span class="hl num">100</span> <span class="hl opt">/</span> <span class="hl kwb">$sum</span><span class="hl opt">;</span>
      <span class="hl opt">}</span>
      <span class="hl kwb">$out</span> <span class="hl opt">.=</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">;</span>
   <span class="hl opt">}</span>
   <span class="hl kwa">return</span> <span class="hl kwb">$out</span><span class="hl opt">;</span>
<span class="hl opt">}</span>

<span class="hl slc">## MAIN()</span>

<span class="hl kwa">while</span><span class="hl opt">(&lt;</span>STDIN<span class="hl opt">&gt;) {</span>
   <span class="hl kwa">last if</span> <span class="hl kwd">/^&gt;THREE /</span><span class="hl opt">;</span>
<span class="hl opt">}</span>
<span class="hl kwa">while</span><span class="hl opt">(&lt;</span>STDIN<span class="hl opt">&gt;) {</span>
   <span class="hl kwa">last if</span> <span class="hl kwd">/^&gt;/</span><span class="hl opt">;</span>
   <span class="hl kwc">chomp</span><span class="hl opt">;</span>
   <span class="hl kwb">$sequence</span> <span class="hl opt">.=</span> <span class="hl kwc">uc</span><span class="hl opt">;</span>
<span class="hl opt">}</span>
<span class="hl kwb">$seq_len</span> <span class="hl opt">=</span> <span class="hl kwc">length</span><span class="hl opt">(</span><span class="hl kwb">$sequence</span><span class="hl opt">);</span>

<span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">) {</span>
   <span class="hl kwc">push</span> <span class="hl kwb">&#64;threads</span><span class="hl opt">,</span> threads<span class="hl opt">-&gt;</span><span class="hl kwd">create</span><span class="hl opt">(</span>\<span class="hl opt">&amp;</span>count_len<span class="hl opt">,</span> <span class="hl kwb">$_</span><span class="hl opt">);</span>
<span class="hl opt">}</span>

<span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwc">qw</span><span class="hl opt">(</span>GGT GGTA GGTATT GGTATTTTAATT GGTATTTTAATTTATAGT<span class="hl opt">)) {</span>
   <span class="hl kwc">push</span> <span class="hl kwb">&#64;threads</span><span class="hl opt">,</span> threads<span class="hl opt">-&gt;</span><span class="hl kwd">create</span><span class="hl opt">(</span>\<span class="hl opt">&amp;</span>count_len<span class="hl opt">,</span> <span class="hl kwc">length</span><span class="hl opt">,</span> <span class="hl kwb">$_</span><span class="hl opt">);</span>
<span class="hl opt">}</span>

<span class="hl kwa">foreach</span> <span class="hl kwb">$thr</span> <span class="hl opt">(</span><span class="hl kwb">&#64;threads</span><span class="hl opt">) {</span>
   <span class="hl kwc">print</span> <span class="hl kwb">$thr</span><span class="hl opt">-&gt;</span><span class="hl kwc">join</span><span class="hl opt">();</span>
<span class="hl opt">}</span>
