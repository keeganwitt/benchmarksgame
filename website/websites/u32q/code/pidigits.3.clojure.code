<span class="hl slc">;; The Computer Language Benchmarks Game</span>
<span class="hl slc">;; http://benchmarksgame.alioth.debian.org/</span>

<span class="hl slc">;; Based on the Racket version of the benchmark by Matthew Flatt</span>
<span class="hl slc">;;; contributed by PheliX</span>
<span class="hl slc">;; Minor changes by Andy Fingerhut so it runs on both Clojure 1.2 and 1.3</span>
<span class="hl slc">;; Minor changes by Koji Yusa to use cl-format instead of printf </span>

<span class="hl opt">(</span><span class="hl kwa">ns</span> pidigits
  <span class="hl opt">(:</span>use <span class="hl opt">[</span>clojure.pprint <span class="hl opt">:</span>only <span class="hl opt">(</span><span class="hl kwa">cl-format</span><span class="hl opt">)])</span>
  <span class="hl opt">(:</span>gen-class<span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">defn</span> floor-ev <span class="hl opt">[</span>q r s t x<span class="hl opt">]</span>
  <span class="hl opt">(</span><span class="hl kwa">quot</span> <span class="hl opt">(+ (*</span> q x<span class="hl opt">)</span> r<span class="hl opt">) (+ (*</span> s x<span class="hl opt">)</span> t<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defn</span> ncomp <span class="hl opt">[</span>q r s t q2 r2 s2 t2<span class="hl opt">]</span>
  <span class="hl opt">[(+ (*</span> q q2<span class="hl opt">) (*</span> r s2<span class="hl opt">))</span>
   <span class="hl opt">(+ (*</span> q r2<span class="hl opt">) (*</span> r t2<span class="hl opt">))</span>
   <span class="hl opt">(+ (*</span> s q2<span class="hl opt">) (*</span> t s2<span class="hl opt">))</span>
   <span class="hl opt">(+ (*</span> s r2<span class="hl opt">) (*</span> t t2<span class="hl opt">))])</span>

<span class="hl opt">(</span><span class="hl kwa">defn</span> digit <span class="hl opt">[</span>k q r s t n row col<span class="hl opt">]</span>
  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(&gt;</span> n <span class="hl num">0</span><span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">[</span>y <span class="hl opt">(</span><span class="hl kwa">floor-ev</span> q r s t <span class="hl num">3</span><span class="hl opt">)]</span>
      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(==</span> y <span class="hl opt">(</span><span class="hl kwa">floor-ev</span> q r s t <span class="hl num">4</span><span class="hl opt">))</span>
	<span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">[[</span>q r s t<span class="hl opt">] (</span><span class="hl kwa">ncomp</span> <span class="hl num">10</span> <span class="hl opt">(*</span> -<span class="hl num">10</span> y<span class="hl opt">)</span> <span class="hl num">0 1</span> q r s t<span class="hl opt">)]</span>
	  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(==</span> col <span class="hl num">10</span><span class="hl opt">)</span>
	    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">[</span>row <span class="hl opt">(+</span> row <span class="hl num">10</span><span class="hl opt">)]</span>
	      <span class="hl opt">(</span><span class="hl kwa">cl-format</span> true <span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">:~d</span><span class="hl esc">\n</span><span class="hl str">~d&quot;</span> row y<span class="hl opt">)</span>
	      <span class="hl opt">(</span><span class="hl kwa">recur</span> k q r s t <span class="hl opt">(</span><span class="hl kwa">dec</span> n<span class="hl opt">)</span> row <span class="hl num">1</span><span class="hl opt">))</span>
	    <span class="hl opt">(</span><span class="hl kwa">do</span> <span class="hl opt">(</span><span class="hl kwa">cl-format</span> true <span class="hl str">&quot;~d&quot;</span> y<span class="hl opt">)</span>
		<span class="hl opt">(</span><span class="hl kwa">recur</span> k q r s t <span class="hl opt">(</span><span class="hl kwa">dec</span> n<span class="hl opt">)</span> row <span class="hl opt">(</span><span class="hl kwa">inc</span> col<span class="hl opt">)))))</span>
	<span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">[[</span>q r s t<span class="hl opt">] (</span><span class="hl kwa">ncomp</span> q r s t k <span class="hl opt">(*</span> <span class="hl num">2</span> <span class="hl opt">(</span><span class="hl kwa">inc</span> <span class="hl opt">(*</span> <span class="hl num">2</span> k<span class="hl opt">)))</span> <span class="hl num">0</span> <span class="hl opt">(</span><span class="hl kwa">inc</span> <span class="hl opt">(*</span> <span class="hl num">2</span> k<span class="hl opt">)))]</span>
	  <span class="hl opt">(</span><span class="hl kwa">recur</span> <span class="hl opt">(</span><span class="hl kwa">inc</span> k<span class="hl opt">)</span> q r s t n row col<span class="hl opt">))))</span>
    <span class="hl opt">(</span><span class="hl kwa">cl-format</span> true <span class="hl str">&quot;~a</span><span class="hl esc">\t</span><span class="hl str">:~d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> <span class="hl opt">(</span><span class="hl kwa">apply</span> str <span class="hl opt">(</span><span class="hl kwa">repeat</span> <span class="hl opt">(</span><span class="hl kwa">-</span> <span class="hl num">10</span> col<span class="hl opt">)</span> <span class="hl str">&quot; &quot;</span><span class="hl opt">)) (+</span> row col<span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defn</span> -main <span class="hl opt">[&amp;</span> args<span class="hl opt">]</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">[</span>n <span class="hl opt">(</span><span class="hl kwa">try</span> <span class="hl opt">(</span><span class="hl kwa">Integer</span><span class="hl opt">/</span>parseInt <span class="hl opt">(</span><span class="hl kwa">first</span> args<span class="hl opt">))</span>
               <span class="hl opt">(</span><span class="hl kwa">catch</span> NumberFormatException e <span class="hl num">27</span><span class="hl opt">))]</span>
    <span class="hl opt">(</span><span class="hl kwa">digit</span> <span class="hl num">1</span> <span class="hl opt">(</span><span class="hl kwa">bigint</span> <span class="hl num">1</span><span class="hl opt">) (</span><span class="hl kwa">bigint</span> <span class="hl num">0</span><span class="hl opt">) (</span><span class="hl kwa">bigint</span> <span class="hl num">0</span><span class="hl opt">) (</span><span class="hl kwa">bigint</span> <span class="hl num">1</span><span class="hl opt">)</span> n <span class="hl num">0 0</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">flush</span><span class="hl opt">))</span>

