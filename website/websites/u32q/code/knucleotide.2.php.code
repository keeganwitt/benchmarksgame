<span class="hl opt">&lt;</span>?
<span class="hl com">/* </span>
<span class="hl com">   The Computer Language Benchmarks Game</span>
<span class="hl com">   http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"></span>
<span class="hl com">   contributed by Damien Bonvillain</span>
<span class="hl com">   fixed by Isaac Gouy</span>
<span class="hl com">   modified by Levi Cameron</span>
<span class="hl com">   modified by Ludovic Urbain</span>
<span class="hl com">*/</span>


<span class="hl kwa">function</span> <span class="hl kwd">read_sequence</span><span class="hl opt">(</span><span class="hl kwc">$id</span><span class="hl opt">) {</span>
   <span class="hl kwc">$id</span> <span class="hl opt">=</span> <span class="hl str">'&gt;'</span> <span class="hl opt">.</span> <span class="hl kwc">$id</span><span class="hl opt">;</span>
   <span class="hl kwc">$ln_id</span> <span class="hl opt">=</span> <span class="hl kwd">strlen</span><span class="hl opt">(</span><span class="hl kwc">$id</span><span class="hl opt">);</span>
   <span class="hl kwc">$fd</span> <span class="hl opt">=</span> STDIN<span class="hl opt">;</span>

   <span class="hl slc">// reach sequence three</span>
   <span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwd">strpos</span><span class="hl opt">(</span><span class="hl kwc">$line</span><span class="hl opt">,</span> <span class="hl kwc">$id</span><span class="hl opt">) ===</span>false<span class="hl opt">){</span>
      <span class="hl kwc">$line</span> <span class="hl opt">=</span> <span class="hl kwd">stream_get_line</span><span class="hl opt">(</span><span class="hl kwc">$fd</span><span class="hl opt">,</span> <span class="hl num">64</span><span class="hl opt">,</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">);</span> <span class="hl slc">// returns faster when the length is too large.</span>
      <span class="hl kwa">if</span><span class="hl opt">(</span><span class="hl kwd">feof</span><span class="hl opt">(</span><span class="hl kwc">$fd</span><span class="hl opt">)){</span>
         <span class="hl kwa">exit</span><span class="hl opt">(-</span><span class="hl num">1</span><span class="hl opt">);</span>
      <span class="hl opt">}</span>
   <span class="hl opt">}</span>
   <span class="hl slc">// next, read the content of the sequence</span>
   <span class="hl kwc">$r</span><span class="hl opt">=</span><span class="hl str">''</span><span class="hl opt">;</span>
   <span class="hl kwa">while</span> <span class="hl opt">(!</span><span class="hl kwd">feof</span><span class="hl opt">(</span><span class="hl kwc">$fd</span><span class="hl opt">)) {</span>
      <span class="hl kwc">$line</span> <span class="hl opt">=</span> <span class="hl kwd">stream_get_line</span><span class="hl opt">(</span><span class="hl kwc">$fd</span><span class="hl opt">,</span> <span class="hl num">64</span><span class="hl opt">,</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">);</span>
      <span class="hl kwa">if</span> <span class="hl opt">(!</span><span class="hl kwa">isset</span><span class="hl opt">(</span><span class="hl kwc">$line</span><span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">]))</span> <span class="hl kwa">continue</span><span class="hl opt">;</span>
      <span class="hl kwc">$c</span> <span class="hl opt">=</span> <span class="hl kwc">$line</span><span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">];</span>
      <span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwc">$c</span> <span class="hl opt">===</span> <span class="hl str">';'</span><span class="hl opt">)</span> <span class="hl kwa">continue</span><span class="hl opt">;</span>
      <span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwc">$c</span> <span class="hl opt">===</span> <span class="hl str">'&gt;'</span><span class="hl opt">)</span> <span class="hl kwa">break</span><span class="hl opt">;</span>
      <span class="hl kwc">$r</span><span class="hl opt">.=</span><span class="hl kwc">$line</span><span class="hl opt">;</span>
   <span class="hl opt">}</span>
   <span class="hl kwa">return</span> <span class="hl kwd">strtoupper</span><span class="hl opt">(</span><span class="hl kwc">$r</span><span class="hl opt">);</span>
<span class="hl opt">}</span>

<span class="hl kwa">function</span> <span class="hl kwd">nucl_count</span><span class="hl opt">(&amp;</span><span class="hl kwc">$sequence</span><span class="hl opt">,&amp;</span><span class="hl kwc">$seqlen</span><span class="hl opt">, &amp;</span><span class="hl kwc">$keys</span><span class="hl opt">) {</span>
   <span class="hl kwc">$map</span> <span class="hl opt">=</span> <span class="hl kwa">array</span><span class="hl opt">();</span>
   <span class="hl kwa">if</span><span class="hl opt">(</span><span class="hl kwd">strlen</span><span class="hl opt">(</span><span class="hl kwc">$keys</span><span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">])!=</span><span class="hl num">2</span><span class="hl opt">){</span>
      <span class="hl kwa">foreach</span><span class="hl opt">(</span><span class="hl kwc">$keys</span> <span class="hl kwa">as</span> <span class="hl kwc">$p</span><span class="hl opt">){</span>
         <span class="hl kwc">$map</span><span class="hl opt">[</span><span class="hl kwc">$p</span><span class="hl opt">]=</span><span class="hl kwd">substr_count</span><span class="hl opt">(</span><span class="hl kwc">$sequence</span><span class="hl opt">,</span><span class="hl kwc">$p</span><span class="hl opt">);</span>
      <span class="hl opt">}</span>
   <span class="hl opt">}</span><span class="hl kwa">else</span><span class="hl opt">{</span>
      <span class="hl kwa">foreach</span><span class="hl opt">(</span><span class="hl kwc">$keys</span> <span class="hl kwa">as</span> <span class="hl kwc">$p</span><span class="hl opt">){</span>
         <span class="hl slc">//$map[$p]=substr_count($sequence,$p); </span>
               <span class="hl slc">// doesn't count overlapping substrings</span>
         <span class="hl kwc">$map</span><span class="hl opt">[</span><span class="hl kwc">$p</span><span class="hl opt">]=</span><span class="hl kwd">preg_match_all</span><span class="hl opt">(</span><span class="hl str">'/'</span><span class="hl opt">.</span><span class="hl kwc">$p</span><span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">].</span><span class="hl str">'(?='</span><span class="hl opt">.</span><span class="hl kwc">$p</span><span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">].</span><span class="hl str">')/'</span><span class="hl opt">,</span><span class="hl kwc">$sequence</span><span class="hl opt">);</span> 
               <span class="hl slc">// lookbehind is slower. </span>
               <span class="hl slc">// I couldn't find another way to do it using regex</span>
               <span class="hl slc">// and no options for other string matchers in php</span>
         <span class="hl com">/*</span>
<span class="hl com">         $p1=$p[0];</span>
<span class="hl com">         $p2=$p[1];</span>
<span class="hl com">         $map[$p]=0;</span>
<span class="hl com">         for($i=0;$i&lt;$seqlen-1;$i++){</span>
<span class="hl com">            if($sequence[$i]===$p1 &amp;&amp; $sequence[$i+1]===$p2){</span>
<span class="hl com">               $map[$p]++;</span>
<span class="hl com">            }</span>
<span class="hl com">         }</span>
<span class="hl com">         */</span>
      <span class="hl opt">}</span>
   <span class="hl opt">}</span>
   <span class="hl kwa">return</span> <span class="hl kwc">$map</span><span class="hl opt">;</span>
<span class="hl opt">}</span>

<span class="hl kwa">function</span> <span class="hl kwd">percentages</span><span class="hl opt">(&amp;</span><span class="hl kwc">$a</span><span class="hl opt">){</span>
   <span class="hl kwc">$t</span><span class="hl opt">=</span><span class="hl num">0</span><span class="hl opt">;</span>
   <span class="hl kwa">foreach</span><span class="hl opt">(</span><span class="hl kwc">$a</span> <span class="hl kwa">as</span> <span class="hl kwc">$k</span><span class="hl opt">=&gt;</span><span class="hl kwc">$v</span><span class="hl opt">){</span>
      <span class="hl kwc">$t</span>+<span class="hl opt">=</span><span class="hl kwc">$v</span><span class="hl opt">;</span>
   <span class="hl opt">}</span>
   <span class="hl kwa">foreach</span><span class="hl opt">(</span><span class="hl kwc">$a</span> <span class="hl kwa">as</span> <span class="hl kwc">$k</span><span class="hl opt">=&gt;</span><span class="hl kwc">$v</span><span class="hl opt">){</span>
      <span class="hl kwc">$a</span><span class="hl opt">[</span><span class="hl kwc">$k</span><span class="hl opt">]=</span><span class="hl kwc">$v</span><span class="hl opt">/</span><span class="hl kwc">$t</span> <span class="hl opt">*</span> <span class="hl num">100</span><span class="hl opt">;</span>
   <span class="hl opt">}</span>
<span class="hl opt">}</span>

<span class="hl kwa">function</span> <span class="hl kwd">freq_name_comparator</span><span class="hl opt">(</span><span class="hl kwc">$a</span><span class="hl opt">,</span> <span class="hl kwc">$b</span><span class="hl opt">) {</span>
   <span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwc">$a</span> <span class="hl opt">==</span> <span class="hl kwc">$b</span><span class="hl opt">)</span> <span class="hl kwa">return</span> <span class="hl num">0</span><span class="hl opt">;</span>
   <span class="hl kwa">return</span>  <span class="hl opt">(</span><span class="hl kwc">$a</span> <span class="hl opt">&lt;</span> <span class="hl kwc">$b</span><span class="hl opt">)</span> ? <span class="hl num">1</span> <span class="hl opt">: -</span><span class="hl num">1</span><span class="hl opt">;</span>
<span class="hl opt">}</span>
<span class="hl kwc">$sequence</span> <span class="hl opt">=</span> <span class="hl kwd">read_sequence</span><span class="hl opt">(</span><span class="hl str">'THREE'</span><span class="hl opt">);</span>
<span class="hl kwc">$seqlen</span><span class="hl opt">=</span><span class="hl kwd">strlen</span><span class="hl opt">(</span><span class="hl kwc">$sequence</span><span class="hl opt">);</span>
<span class="hl kwd">fclose</span><span class="hl opt">(</span>STDIN<span class="hl opt">);</span>

<span class="hl kwc">$jobs</span> <span class="hl opt">=</span> <span class="hl kwa">array</span><span class="hl opt">(</span>
   <span class="hl kwa">array</span><span class="hl opt">(</span><span class="hl kwa">array</span><span class="hl opt">(</span><span class="hl str">'A'</span><span class="hl opt">),</span><span class="hl kwa">array</span><span class="hl opt">(</span><span class="hl str">'AA'</span><span class="hl opt">,</span><span class="hl str">'AT'</span><span class="hl opt">,</span><span class="hl str">'TA'</span><span class="hl opt">,</span><span class="hl str">'TT'</span><span class="hl opt">),</span><span class="hl kwa">array</span><span class="hl opt">(</span><span class="hl str">'GGT'</span><span class="hl opt">,</span><span class="hl str">'GGTA'</span><span class="hl opt">)),</span>
   <span class="hl kwa">array</span><span class="hl opt">(</span><span class="hl kwa">array</span><span class="hl opt">(</span><span class="hl str">'T'</span><span class="hl opt">),</span><span class="hl kwa">array</span><span class="hl opt">(</span><span class="hl str">'CA'</span><span class="hl opt">,</span><span class="hl str">'GA'</span><span class="hl opt">,</span><span class="hl str">'AG'</span><span class="hl opt">,</span><span class="hl str">'AC'</span><span class="hl opt">),</span><span class="hl kwa">array</span><span class="hl opt">(</span><span class="hl str">'GGTATT'</span><span class="hl opt">)),</span>
   <span class="hl kwa">array</span><span class="hl opt">(</span><span class="hl kwa">array</span><span class="hl opt">(</span><span class="hl str">'G'</span><span class="hl opt">),</span><span class="hl kwa">array</span><span class="hl opt">(</span><span class="hl str">'TG'</span><span class="hl opt">,</span><span class="hl str">'GT'</span><span class="hl opt">,</span><span class="hl str">'TC'</span><span class="hl opt">,</span><span class="hl str">'CT'</span><span class="hl opt">),</span><span class="hl kwa">array</span><span class="hl opt">(</span><span class="hl str">'GGTATTTTAATT'</span><span class="hl opt">)),</span>
   <span class="hl kwa">array</span><span class="hl opt">(</span><span class="hl kwa">array</span><span class="hl opt">(</span><span class="hl str">'C'</span><span class="hl opt">),</span><span class="hl kwa">array</span><span class="hl opt">(</span><span class="hl str">'GG'</span><span class="hl opt">,</span><span class="hl str">'GC'</span><span class="hl opt">,</span><span class="hl str">'CG'</span><span class="hl opt">,</span><span class="hl str">'CC'</span><span class="hl opt">),</span><span class="hl kwa">array</span><span class="hl opt">(</span><span class="hl str">'GGTATTTTAATTTATAGT'</span><span class="hl opt">))</span>
<span class="hl opt">);</span>

<span class="hl kwc">$tok</span> <span class="hl opt">=</span> <span class="hl kwd">ftok</span><span class="hl opt">(</span>__FILE__<span class="hl opt">,</span> <span class="hl kwd">chr</span><span class="hl opt">(</span><span class="hl kwd">time</span><span class="hl opt">() &amp;</span> <span class="hl num">255</span><span class="hl opt">));</span>
<span class="hl kwc">$queue</span> <span class="hl opt">=</span> <span class="hl kwd">msg_get_queue</span><span class="hl opt">(</span><span class="hl kwc">$tok</span><span class="hl opt">);</span>

<span class="hl kwc">$parent</span> <span class="hl opt">=</span> TRUE<span class="hl opt">;</span>
<span class="hl kwc">$count</span> <span class="hl opt">=</span> <span class="hl kwd">count</span><span class="hl opt">(</span><span class="hl kwc">$jobs</span><span class="hl opt">);</span>
<span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwc">$i</span> <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> <span class="hl kwc">$i</span> <span class="hl opt">&lt;</span> <span class="hl kwc">$count</span><span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">;</span> ++<span class="hl kwc">$i</span><span class="hl opt">) {</span>
   <span class="hl kwc">$pid</span> <span class="hl opt">=</span> <span class="hl kwd">pcntl_fork</span><span class="hl opt">();</span>
   <span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwc">$pid</span> <span class="hl opt">=== -</span><span class="hl num">1</span><span class="hl opt">) {</span>
      <span class="hl kwa">die</span><span class="hl opt">(</span><span class="hl str">'could not fork'</span><span class="hl opt">);</span>
   <span class="hl opt">}</span> <span class="hl kwa">else if</span> <span class="hl opt">(</span><span class="hl kwc">$pid</span><span class="hl opt">) {</span>
      <span class="hl kwa">continue</span><span class="hl opt">;</span>
   <span class="hl opt">}</span>
   <span class="hl kwc">$parent</span> <span class="hl opt">=</span> FALSE<span class="hl opt">;</span>
   <span class="hl kwa">break</span><span class="hl opt">;</span>
<span class="hl opt">}</span>
<span class="hl kwc">$result</span><span class="hl opt">=</span><span class="hl kwa">array</span><span class="hl opt">(</span>
   <span class="hl kwc">$i</span><span class="hl opt">,</span>
   <span class="hl kwd">nucl_count</span><span class="hl opt">(</span><span class="hl kwc">$sequence</span><span class="hl opt">,</span> <span class="hl kwc">$seqlen</span><span class="hl opt">,</span> <span class="hl kwc">$jobs</span><span class="hl opt">[</span><span class="hl kwc">$i</span><span class="hl opt">][</span><span class="hl num">0</span><span class="hl opt">]),</span>
   <span class="hl kwd">nucl_count</span><span class="hl opt">(</span><span class="hl kwc">$sequence</span><span class="hl opt">,</span> <span class="hl kwc">$seqlen</span><span class="hl opt">,</span> <span class="hl kwc">$jobs</span><span class="hl opt">[</span><span class="hl kwc">$i</span><span class="hl opt">][</span><span class="hl num">1</span><span class="hl opt">]),</span>
   <span class="hl kwd">nucl_count</span><span class="hl opt">(</span><span class="hl kwc">$sequence</span><span class="hl opt">,</span> <span class="hl kwc">$seqlen</span><span class="hl opt">,</span> <span class="hl kwc">$jobs</span><span class="hl opt">[</span><span class="hl kwc">$i</span><span class="hl opt">][</span><span class="hl num">2</span><span class="hl opt">])</span>
<span class="hl opt">);</span>
<span class="hl kwa">if</span> <span class="hl opt">(!</span><span class="hl kwd">msg_send</span><span class="hl opt">(</span><span class="hl kwc">$queue</span><span class="hl opt">,</span> <span class="hl num">2</span><span class="hl opt">,</span> <span class="hl kwc">$result</span><span class="hl opt">,</span> TRUE<span class="hl opt">,</span> FALSE<span class="hl opt">,</span> <span class="hl kwc">$errno</span><span class="hl opt">)) {</span>
   <span class="hl kwd">var_dump</span><span class="hl opt">(</span><span class="hl str">&quot;$errno&quot;</span><span class="hl opt">);</span>
   <span class="hl kwd">var_dump</span><span class="hl opt">(</span><span class="hl kwd">msg_stat_queue</span><span class="hl opt">(</span><span class="hl kwc">$queue</span><span class="hl opt">));</span>
<span class="hl opt">}</span>

<span class="hl kwa">if</span> <span class="hl opt">(!</span><span class="hl kwc">$parent</span><span class="hl opt">) {</span>
   <span class="hl kwa">exit</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">);</span>
<span class="hl opt">}</span>

<span class="hl kwc">$results</span> <span class="hl opt">=</span> <span class="hl kwa">array</span><span class="hl opt">();</span>
<span class="hl kwa">foreach</span><span class="hl opt">(</span><span class="hl kwc">$jobs</span> <span class="hl kwa">as</span> <span class="hl kwc">$job</span><span class="hl opt">) {</span>
   <span class="hl kwd">msg_receive</span><span class="hl opt">(</span><span class="hl kwc">$queue</span><span class="hl opt">,</span> <span class="hl num">2</span><span class="hl opt">,</span> <span class="hl kwc">$msgtype</span><span class="hl opt">,</span> <span class="hl num">4096</span><span class="hl opt">,</span> <span class="hl kwc">$result</span><span class="hl opt">,</span> TRUE<span class="hl opt">);</span>
   <span class="hl kwc">$results</span><span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">][</span><span class="hl kwc">$result</span><span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">]] =</span> <span class="hl kwc">$result</span><span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">];</span>
   <span class="hl kwc">$results</span><span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">][</span><span class="hl kwc">$result</span><span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">]] =</span> <span class="hl kwc">$result</span><span class="hl opt">[</span><span class="hl num">2</span><span class="hl opt">];</span>
   <span class="hl kwc">$results</span><span class="hl opt">[</span><span class="hl num">2</span><span class="hl opt">][</span><span class="hl kwc">$result</span><span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">]] =</span> <span class="hl kwc">$result</span><span class="hl opt">[</span><span class="hl num">3</span><span class="hl opt">];</span>
   <span class="hl kwd">pcntl_wait</span><span class="hl opt">(</span><span class="hl kwc">$s</span><span class="hl opt">);</span>
<span class="hl opt">}</span>

<span class="hl kwa">for</span><span class="hl opt">(</span><span class="hl kwc">$i</span><span class="hl opt">=</span><span class="hl num">0</span><span class="hl opt">;</span><span class="hl kwc">$i</span><span class="hl opt">&lt;</span><span class="hl kwd">count</span><span class="hl opt">(</span><span class="hl kwc">$results</span><span class="hl opt">);</span><span class="hl kwc">$i</span>++<span class="hl opt">){</span>
   <span class="hl kwc">$tmp</span><span class="hl opt">=</span><span class="hl kwa">array</span><span class="hl opt">();</span>
   <span class="hl kwa">for</span><span class="hl opt">(</span><span class="hl kwc">$j</span><span class="hl opt">=</span><span class="hl num">0</span><span class="hl opt">;</span><span class="hl kwc">$j</span><span class="hl opt">&lt;</span><span class="hl kwd">count</span><span class="hl opt">(</span><span class="hl kwc">$results</span><span class="hl opt">[</span><span class="hl kwc">$i</span><span class="hl opt">]);</span><span class="hl kwc">$j</span>++<span class="hl opt">){</span>
      <span class="hl kwa">foreach</span><span class="hl opt">(</span><span class="hl kwc">$results</span><span class="hl opt">[</span><span class="hl kwc">$i</span><span class="hl opt">][</span><span class="hl kwc">$j</span><span class="hl opt">]</span> <span class="hl kwa">as</span> <span class="hl kwc">$nucl</span><span class="hl opt">=&gt;</span><span class="hl kwc">$count</span><span class="hl opt">){</span>
         <span class="hl kwc">$tmp</span><span class="hl opt">[</span><span class="hl kwc">$nucl</span><span class="hl opt">]=</span><span class="hl kwc">$count</span><span class="hl opt">;</span>
      <span class="hl opt">}</span>
   <span class="hl opt">}</span>
   <span class="hl kwc">$results</span><span class="hl opt">[</span><span class="hl kwc">$i</span><span class="hl opt">]=</span><span class="hl kwc">$tmp</span><span class="hl opt">;</span>
<span class="hl opt">}</span>
<span class="hl kwd">percentages</span><span class="hl opt">(</span><span class="hl kwc">$results</span><span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">]);</span>
<span class="hl kwd">percentages</span><span class="hl opt">(</span><span class="hl kwc">$results</span><span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">]);</span>
<span class="hl kwd">uasort</span><span class="hl opt">(</span><span class="hl kwc">$results</span><span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">],</span> <span class="hl str">'freq_name_comparator'</span><span class="hl opt">);</span>
<span class="hl kwd">uasort</span><span class="hl opt">(</span><span class="hl kwc">$results</span><span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">],</span> <span class="hl str">'freq_name_comparator'</span><span class="hl opt">);</span>
<span class="hl kwc">$r</span><span class="hl opt">=</span><span class="hl str">''</span><span class="hl opt">;</span>
<span class="hl kwa">foreach</span><span class="hl opt">(</span><span class="hl kwc">$results</span><span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">]</span> <span class="hl kwa">as</span> <span class="hl kwc">$k</span><span class="hl opt">=&gt;</span><span class="hl kwc">$v</span><span class="hl opt">){</span>
   <span class="hl kwc">$r</span><span class="hl opt">.=</span><span class="hl kwd">sprintf</span> <span class="hl opt">(</span><span class="hl str">&quot;%s %.3f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">,</span> <span class="hl kwc">$k</span><span class="hl opt">,</span> <span class="hl kwc">$v</span><span class="hl opt">);</span>
<span class="hl opt">}</span>
<span class="hl kwc">$r</span><span class="hl opt">.=</span><span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">;</span>
<span class="hl kwa">foreach</span><span class="hl opt">(</span><span class="hl kwc">$results</span><span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">]</span> <span class="hl kwa">as</span> <span class="hl kwc">$k</span><span class="hl opt">=&gt;</span><span class="hl kwc">$v</span><span class="hl opt">){</span>
   <span class="hl kwc">$r</span><span class="hl opt">.=</span><span class="hl kwd">sprintf</span> <span class="hl opt">(</span><span class="hl str">&quot;%s %.3f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">,</span> <span class="hl kwc">$k</span><span class="hl opt">,</span> <span class="hl kwc">$v</span><span class="hl opt">);</span>
<span class="hl opt">}</span>
<span class="hl kwc">$r</span><span class="hl opt">.=</span><span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">;</span>
<span class="hl kwa">foreach</span><span class="hl opt">(</span><span class="hl kwc">$results</span><span class="hl opt">[</span><span class="hl num">2</span><span class="hl opt">]</span> <span class="hl kwa">as</span> <span class="hl kwc">$k</span><span class="hl opt">=&gt;</span><span class="hl kwc">$v</span><span class="hl opt">){</span>
   <span class="hl kwc">$r</span><span class="hl opt">.=</span><span class="hl kwd">sprintf</span> <span class="hl opt">(</span><span class="hl str">&quot;%d</span><span class="hl esc">\t</span><span class="hl str">%s</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">,</span> <span class="hl kwc">$v</span><span class="hl opt">,</span> <span class="hl kwc">$k</span><span class="hl opt">);</span>
<span class="hl opt">}</span>
<span class="hl kwa">echo</span> <span class="hl kwc">$r</span><span class="hl opt">;</span>
<span class="hl kwd">msg_remove_queue</span><span class="hl opt">(</span><span class="hl kwc">$queue</span><span class="hl opt">);</span>
