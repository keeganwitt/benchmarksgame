<span class="hl com">(* The Computer Language Benchmarks Game</span>
<span class="hl com"> * http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com">   Contributed by Charles Martin. *)</span>

<span class="hl kwa">let</span> size <span class="hl opt">=</span> <span class="hl num">503</span>

<span class="hl kwa">let</span> n <span class="hl opt">=</span> int_of_string <span class="hl kwc">Sys</span><span class="hl opt">.</span>argv<span class="hl opt">.(</span><span class="hl num">1</span><span class="hl opt">)</span>

<span class="hl kwa">let</span> run id ichan ochan <span class="hl opt">=</span>
  <span class="hl kwa">let rec</span> loop <span class="hl opt">() =</span>
    <span class="hl kwa">let</span> token <span class="hl opt">=</span> <span class="hl kwc">Event</span><span class="hl opt">.</span>sync <span class="hl opt">(</span><span class="hl kwc">Event</span><span class="hl opt">.</span>receive ichan<span class="hl opt">)</span> <span class="hl kwa">in</span>
    <span class="hl kwa">if</span> token <span class="hl opt">=</span> n <span class="hl kwa">then</span> <span class="hl opt">(</span>print_int id<span class="hl opt">;</span> print_newline <span class="hl opt">();</span> exit <span class="hl num">0</span><span class="hl opt">)</span>
    <span class="hl kwa">else</span> <span class="hl opt">(</span><span class="hl kwc">Event</span><span class="hl opt">.</span>sync <span class="hl opt">(</span><span class="hl kwc">Event</span><span class="hl opt">.</span>send ochan <span class="hl opt">(</span>token <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">));</span> loop <span class="hl opt">())</span>
  <span class="hl kwa">in</span> <span class="hl kwc">Thread</span><span class="hl opt">.</span>create loop <span class="hl opt">()</span>

<span class="hl kwa">let</span> <span class="hl opt">() =</span>
  <span class="hl kwa">let</span> channels <span class="hl opt">=</span>
    <span class="hl kwc">Array</span><span class="hl opt">.</span>init size
      <span class="hl opt">(</span><span class="hl kwa">fun</span> _ <span class="hl opt">-&gt;</span> <span class="hl kwc">Event</span><span class="hl opt">.</span>new_channel <span class="hl opt">())</span> <span class="hl kwa">in</span>
  <span class="hl kwa">let</span> threads <span class="hl opt">=</span>
    <span class="hl kwc">Array</span><span class="hl opt">.</span>init size
      <span class="hl opt">(</span><span class="hl kwa">fun</span> i <span class="hl opt">-&gt;</span> run <span class="hl opt">(</span>i <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">)</span> channels<span class="hl opt">.(</span>i<span class="hl opt">)</span> channels<span class="hl opt">.((</span>i <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">)</span> <span class="hl kwa">mod</span> size<span class="hl opt">))</span> <span class="hl kwa">in</span>
  <span class="hl kwc">Event</span><span class="hl opt">.</span>sync <span class="hl opt">(</span><span class="hl kwc">Event</span><span class="hl opt">.</span>send channels<span class="hl opt">.(</span><span class="hl num">0</span><span class="hl opt">)</span> <span class="hl num">0</span><span class="hl opt">);</span>
  <span class="hl kwc">Thread</span><span class="hl opt">.</span>join threads<span class="hl opt">.(</span><span class="hl num">0</span><span class="hl opt">)</span>
