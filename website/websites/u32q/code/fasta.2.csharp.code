<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"></span>
<span class="hl com">   contributed by Isaac Gouy</span>
<span class="hl com">   optimizations by Alp Toker &lt;alp&#64;atoker.com&gt;</span>
<span class="hl com">*/</span>

<span class="hl kwa">using</span> System<span class="hl opt">;</span>
<span class="hl kwa">using</span> System<span class="hl opt">.</span>IO<span class="hl opt">;</span>
<span class="hl kwa">using</span> System<span class="hl opt">.</span>Text<span class="hl opt">;</span>

<span class="hl kwa">class</span> Fasta
<span class="hl opt">{</span>
	<span class="hl kwa">static</span> <span class="hl kwb">void</span> <span class="hl kwd">Main</span> <span class="hl opt">(</span><span class="hl kwb">string</span><span class="hl opt">[]</span> args<span class="hl opt">) {</span>
		<span class="hl kwd">MakeCumulative</span> <span class="hl opt">(</span>HomoSapiens<span class="hl opt">);</span>
		<span class="hl kwd">MakeCumulative</span> <span class="hl opt">(</span>IUB<span class="hl opt">);</span>

		<span class="hl kwb">int</span> n <span class="hl opt">=</span> args<span class="hl opt">.</span>Length <span class="hl opt">&gt;</span> <span class="hl num">0</span> ? Int32<span class="hl opt">.</span><span class="hl kwd">Parse</span> <span class="hl opt">(</span>args<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">]) :</span> <span class="hl num">1000</span><span class="hl opt">;</span>

		<span class="hl kwa">using</span> <span class="hl opt">(</span>Stream s <span class="hl opt">=</span> Console<span class="hl opt">.</span><span class="hl kwd">OpenStandardOutput</span> <span class="hl opt">()) {</span>
			<span class="hl kwd">MakeRepeatFasta</span> <span class="hl opt">(</span><span class="hl str">&quot;ONE&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;Homo sapiens alu&quot;</span><span class="hl opt">,</span> Encoding<span class="hl opt">.</span>ASCII<span class="hl opt">.</span><span class="hl kwd">GetBytes</span> <span class="hl opt">(</span>ALU<span class="hl opt">),</span> n<span class="hl opt">*</span><span class="hl num">2</span><span class="hl opt">,</span> s<span class="hl opt">);</span>
			<span class="hl kwd">MakeRandomFasta</span> <span class="hl opt">(</span><span class="hl str">&quot;TWO&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;IUB ambiguity codes&quot;</span><span class="hl opt">,</span> IUB<span class="hl opt">,</span> n<span class="hl opt">*</span><span class="hl num">3</span><span class="hl opt">,</span> s<span class="hl opt">);</span>
			<span class="hl kwd">MakeRandomFasta</span> <span class="hl opt">(</span><span class="hl str">&quot;THREE&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;Homo sapiens frequency&quot;</span><span class="hl opt">,</span> HomoSapiens<span class="hl opt">,</span> n<span class="hl opt">*</span><span class="hl num">5</span><span class="hl opt">,</span> s<span class="hl opt">);</span>
		<span class="hl opt">}</span>
	<span class="hl opt">}</span>

	<span class="hl slc">// The usual pseudo-random number generator</span>

	<span class="hl kwb">const int</span> IM <span class="hl opt">=</span> <span class="hl num">139968</span><span class="hl opt">;</span>
	<span class="hl kwb">const int</span> IA <span class="hl opt">=</span> <span class="hl num">3877</span><span class="hl opt">;</span>
	<span class="hl kwb">const int</span> IC <span class="hl opt">=</span> <span class="hl num">29573</span><span class="hl opt">;</span>
	<span class="hl kwa">static</span> <span class="hl kwb">int</span> seed <span class="hl opt">=</span> <span class="hl num">42</span><span class="hl opt">;</span>

	<span class="hl kwa">static</span> <span class="hl kwb">double</span> <span class="hl kwd">random</span> <span class="hl opt">(</span><span class="hl kwb">double</span> max<span class="hl opt">)</span>
	<span class="hl opt">{</span>
		<span class="hl kwa">return</span> max <span class="hl opt">* ((</span>seed <span class="hl opt">= (</span>seed <span class="hl opt">*</span> IA <span class="hl opt">+</span> IC<span class="hl opt">) %</span> IM<span class="hl opt">) * (</span><span class="hl num">1.0</span> <span class="hl opt">/</span> IM<span class="hl opt">));</span>
	<span class="hl opt">}</span>

	<span class="hl slc">// Weighted selection from alphabet</span>

	<span class="hl kwa">static</span> <span class="hl kwb">string</span> ALU <span class="hl opt">=</span>
		<span class="hl str">&quot;GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG&quot;</span> <span class="hl opt">+</span>
		<span class="hl str">&quot;GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA&quot;</span> <span class="hl opt">+</span>
		<span class="hl str">&quot;CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT&quot;</span> <span class="hl opt">+</span>
		<span class="hl str">&quot;ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA&quot;</span> <span class="hl opt">+</span>
		<span class="hl str">&quot;GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG&quot;</span> <span class="hl opt">+</span>
		<span class="hl str">&quot;AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC&quot;</span> <span class="hl opt">+</span>
		<span class="hl str">&quot;AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA&quot;</span><span class="hl opt">;</span>

	<span class="hl kwa">class</span> Frequency <span class="hl opt">{</span>
		<span class="hl kwa">public</span> <span class="hl kwb">byte</span> c<span class="hl opt">;</span>
		<span class="hl kwa">public</span> <span class="hl kwb">double</span> p<span class="hl opt">;</span>

		<span class="hl kwa">public</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl kwb">char</span> c<span class="hl opt">,</span> <span class="hl kwb">double</span> p<span class="hl opt">) {</span>
			<span class="hl kwa">this</span><span class="hl opt">.</span>c <span class="hl opt">= (</span><span class="hl kwb">byte</span><span class="hl opt">)</span>c<span class="hl opt">;</span>
			<span class="hl kwa">this</span><span class="hl opt">.</span>p <span class="hl opt">=</span> p<span class="hl opt">;</span>
		<span class="hl opt">}</span>
	<span class="hl opt">}</span>

	<span class="hl kwa">static</span> Frequency<span class="hl opt">[]</span> IUB <span class="hl opt">= {</span>
		<span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'a'</span><span class="hl opt">,</span> <span class="hl num">0.27</span><span class="hl opt">)</span>
			<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'c'</span><span class="hl opt">,</span> <span class="hl num">0.12</span><span class="hl opt">)</span>
			<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'g'</span><span class="hl opt">,</span> <span class="hl num">0.12</span><span class="hl opt">)</span>
			<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'t'</span><span class="hl opt">,</span> <span class="hl num">0.27</span><span class="hl opt">)</span>

			<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'B'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">)</span>
			<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'D'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">)</span>
			<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'H'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">)</span>
			<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'K'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">)</span>
			<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'M'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">)</span>
			<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'N'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">)</span>
			<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'R'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">)</span>
			<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'S'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">)</span>
			<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'V'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">)</span>
			<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'W'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">)</span>
			<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'Y'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">)</span>
	<span class="hl opt">};</span>

	<span class="hl kwa">static</span> Frequency<span class="hl opt">[]</span> HomoSapiens <span class="hl opt">= {</span>
		<span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'a'</span><span class="hl opt">,</span> <span class="hl num">0.3029549426680</span><span class="hl opt">)</span>
			<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'c'</span><span class="hl opt">,</span> <span class="hl num">0.1979883004921</span><span class="hl opt">)</span>
			<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'g'</span><span class="hl opt">,</span> <span class="hl num">0.1975473066391</span><span class="hl opt">)</span>
			<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'t'</span><span class="hl opt">,</span> <span class="hl num">0.3015094502008</span><span class="hl opt">)</span>
	<span class="hl opt">};</span>

	<span class="hl kwa">static</span> <span class="hl kwb">void</span> <span class="hl kwd">MakeCumulative</span> <span class="hl opt">(</span>Frequency<span class="hl opt">[]</span> a<span class="hl opt">) {</span>
		<span class="hl kwb">double</span> cp <span class="hl opt">=</span> <span class="hl num">0.0</span><span class="hl opt">;</span>
		<span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwb">int</span> i<span class="hl opt">=</span><span class="hl num">0</span><span class="hl opt">;</span> i <span class="hl opt">&lt;</span> a<span class="hl opt">.</span>Length<span class="hl opt">;</span> i<span class="hl opt">++) {</span>
			cp <span class="hl opt">+=</span> a<span class="hl opt">[</span>i<span class="hl opt">].</span>p<span class="hl opt">;</span>
			a<span class="hl opt">[</span>i<span class="hl opt">].</span>p <span class="hl opt">=</span> cp<span class="hl opt">;</span>
		<span class="hl opt">}</span>
	<span class="hl opt">}</span>

	<span class="hl slc">// naive</span>
	<span class="hl kwa">static</span> <span class="hl kwb">byte</span> <span class="hl kwd">SelectRandom</span> <span class="hl opt">(</span>Frequency<span class="hl opt">[]</span> a<span class="hl opt">) {</span>
		<span class="hl kwb">double</span> r <span class="hl opt">=</span> <span class="hl kwd">random</span> <span class="hl opt">(</span><span class="hl num">1.0</span><span class="hl opt">);</span>

		<span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwb">int</span> i<span class="hl opt">=</span><span class="hl num">0</span> <span class="hl opt">;</span> i <span class="hl opt">&lt;</span> a<span class="hl opt">.</span>Length <span class="hl opt">;</span> i<span class="hl opt">++)</span>
			<span class="hl kwa">if</span> <span class="hl opt">(</span>r <span class="hl opt">&lt;</span> a<span class="hl opt">[</span>i<span class="hl opt">].</span>p<span class="hl opt">)</span>
				<span class="hl kwa">return</span> a<span class="hl opt">[</span>i<span class="hl opt">].</span>c<span class="hl opt">;</span>

		<span class="hl kwa">return</span> a<span class="hl opt">[</span>a<span class="hl opt">.</span>Length<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">].</span>c<span class="hl opt">;</span>
	<span class="hl opt">}</span>

	<span class="hl kwb">const int</span> LineLength <span class="hl opt">=</span> <span class="hl num">60</span><span class="hl opt">;</span>
	<span class="hl kwa">static</span> <span class="hl kwb">int</span> index <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
	<span class="hl kwa">static</span> <span class="hl kwb">byte</span><span class="hl opt">[]</span> buf <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwb">byte</span><span class="hl opt">[</span><span class="hl num">1024</span><span class="hl opt">];</span>

	<span class="hl kwa">static</span> <span class="hl kwb">void</span> <span class="hl kwd">MakeRandomFasta</span> <span class="hl opt">(</span><span class="hl kwb">string</span> id<span class="hl opt">,</span> <span class="hl kwb">string</span> desc<span class="hl opt">,</span> Frequency<span class="hl opt">[]</span> a<span class="hl opt">,</span> <span class="hl kwb">int</span> n<span class="hl opt">,</span> Stream s<span class="hl opt">) {</span>
		index <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
		<span class="hl kwb">int</span> m <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>

		<span class="hl kwb">byte</span><span class="hl opt">[]</span> descStr <span class="hl opt">=</span> Encoding<span class="hl opt">.</span>ASCII<span class="hl opt">.</span><span class="hl kwd">GetBytes</span> <span class="hl opt">(</span><span class="hl str">&quot;&gt;&quot;</span> <span class="hl opt">+</span> id <span class="hl opt">+</span> <span class="hl str">&quot; &quot;</span> <span class="hl opt">+</span> desc <span class="hl opt">+</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">);</span>
		s<span class="hl opt">.</span><span class="hl kwd">Write</span> <span class="hl opt">(</span>descStr<span class="hl opt">,</span> <span class="hl num">0</span><span class="hl opt">,</span> descStr<span class="hl opt">.</span>Length<span class="hl opt">);</span>

		<span class="hl kwa">while</span> <span class="hl opt">(</span>n <span class="hl opt">&gt;</span> <span class="hl num">0</span><span class="hl opt">) {</span>
			m <span class="hl opt">=</span> n <span class="hl opt">&lt;</span> LineLength ? n <span class="hl opt">:</span> LineLength<span class="hl opt">;</span>

			<span class="hl kwa">if</span> <span class="hl opt">(</span>buf<span class="hl opt">.</span>Length <span class="hl opt">-</span> index <span class="hl opt">&lt;</span> m<span class="hl opt">) {</span>
				s<span class="hl opt">.</span><span class="hl kwd">Write</span> <span class="hl opt">(</span>buf<span class="hl opt">,</span> <span class="hl num">0</span><span class="hl opt">,</span> index<span class="hl opt">);</span>
				index <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
			<span class="hl opt">}</span>

			<span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwb">int</span> i <span class="hl opt">=</span> <span class="hl num">0</span> <span class="hl opt">;</span> i <span class="hl opt">&lt;</span> m <span class="hl opt">;</span> i<span class="hl opt">++) {</span>
				buf<span class="hl opt">[</span>index<span class="hl opt">++] =</span> <span class="hl kwd">SelectRandom</span> <span class="hl opt">(</span>a<span class="hl opt">);</span>
			<span class="hl opt">}</span>

			buf<span class="hl opt">[</span>index<span class="hl opt">++] = (</span><span class="hl kwb">byte</span><span class="hl opt">)</span><span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">;</span>
			n <span class="hl opt">-=</span> LineLength<span class="hl opt">;</span>
		<span class="hl opt">}</span>

		<span class="hl kwa">if</span> <span class="hl opt">(</span>index <span class="hl opt">!=</span> <span class="hl num">0</span><span class="hl opt">)</span>
			s<span class="hl opt">.</span><span class="hl kwd">Write</span> <span class="hl opt">(</span>buf<span class="hl opt">,</span> <span class="hl num">0</span><span class="hl opt">,</span> index<span class="hl opt">);</span>
	<span class="hl opt">}</span>

	<span class="hl kwa">static</span> <span class="hl kwb">void</span> <span class="hl kwd">MakeRepeatFasta</span> <span class="hl opt">(</span><span class="hl kwb">string</span> id<span class="hl opt">,</span> <span class="hl kwb">string</span> desc<span class="hl opt">,</span> <span class="hl kwb">byte</span><span class="hl opt">[]</span> alu<span class="hl opt">,</span> <span class="hl kwb">int</span> n<span class="hl opt">,</span> Stream s<span class="hl opt">) {</span>
		index <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
		<span class="hl kwb">int</span> m <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
		<span class="hl kwb">int</span> k <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
	 	<span class="hl kwb">int</span> kn <span class="hl opt">=</span> alu<span class="hl opt">.</span>Length<span class="hl opt">;</span>

		<span class="hl kwb">byte</span><span class="hl opt">[]</span> descStr <span class="hl opt">=</span> Encoding<span class="hl opt">.</span>ASCII<span class="hl opt">.</span><span class="hl kwd">GetBytes</span> <span class="hl opt">(</span><span class="hl str">&quot;&gt;&quot;</span> <span class="hl opt">+</span> id <span class="hl opt">+</span> <span class="hl str">&quot; &quot;</span> <span class="hl opt">+</span> desc <span class="hl opt">+</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">);</span>
		s<span class="hl opt">.</span><span class="hl kwd">Write</span> <span class="hl opt">(</span>descStr<span class="hl opt">,</span> <span class="hl num">0</span><span class="hl opt">,</span> descStr<span class="hl opt">.</span>Length<span class="hl opt">);</span>

		<span class="hl kwa">while</span> <span class="hl opt">(</span>n <span class="hl opt">&gt;</span> <span class="hl num">0</span><span class="hl opt">) {</span>
			m <span class="hl opt">=</span> n <span class="hl opt">&lt;</span> LineLength ? n <span class="hl opt">:</span> LineLength<span class="hl opt">;</span>

			<span class="hl kwa">if</span> <span class="hl opt">(</span>buf<span class="hl opt">.</span>Length <span class="hl opt">-</span> index <span class="hl opt">&lt;</span> m<span class="hl opt">) {</span>
				s<span class="hl opt">.</span><span class="hl kwd">Write</span> <span class="hl opt">(</span>buf<span class="hl opt">,</span> <span class="hl num">0</span><span class="hl opt">,</span> index<span class="hl opt">);</span>
				index <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
			<span class="hl opt">}</span>

			<span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwb">int</span> i <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> i <span class="hl opt">&lt;</span> m <span class="hl opt">;</span> i<span class="hl opt">++) {</span>
				<span class="hl kwa">if</span> <span class="hl opt">(</span>k <span class="hl opt">==</span> kn<span class="hl opt">)</span>
					k <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>

				buf<span class="hl opt">[</span>index<span class="hl opt">++] =</span> alu<span class="hl opt">[</span>k<span class="hl opt">];</span>
				k<span class="hl opt">++;</span>
			<span class="hl opt">}</span>

			buf<span class="hl opt">[</span>index<span class="hl opt">++] = (</span><span class="hl kwb">byte</span><span class="hl opt">)</span><span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">;</span>
			n <span class="hl opt">-=</span> LineLength<span class="hl opt">;</span>
		<span class="hl opt">}</span>

		<span class="hl kwa">if</span> <span class="hl opt">(</span>index <span class="hl opt">!=</span> <span class="hl num">0</span><span class="hl opt">)</span>
			s<span class="hl opt">.</span><span class="hl kwd">Write</span> <span class="hl opt">(</span>buf<span class="hl opt">,</span> <span class="hl num">0</span><span class="hl opt">,</span> index<span class="hl opt">);</span>
	<span class="hl opt">}</span>
<span class="hl opt">}</span>
