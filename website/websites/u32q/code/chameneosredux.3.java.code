<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"></span>
<span class="hl com">   contributed by Kirill Ilyukhin</span>
<span class="hl com">*/</span>
<span class="hl kwa">import</span> java<span class="hl opt">.</span>util<span class="hl opt">.</span>concurrent<span class="hl opt">.</span>CountDownLatch<span class="hl opt">;</span>
<span class="hl kwa">import</span> java<span class="hl opt">.</span>util<span class="hl opt">.</span>concurrent<span class="hl opt">.</span>Exchanger<span class="hl opt">;</span>
<span class="hl kwa">import</span> java<span class="hl opt">.</span>util<span class="hl opt">.</span>concurrent<span class="hl opt">.</span>atomic<span class="hl opt">.</span>AtomicInteger<span class="hl opt">;</span>

<span class="hl kwa">public class</span> chameneosredux <span class="hl opt">{</span>

   <span class="hl kwa">static</span> MeetingPlace meetingPlace<span class="hl opt">;</span>
   <span class="hl kwa">static</span> CountDownLatch latch<span class="hl opt">;</span>
   <span class="hl kwa">static</span> AtomicInteger meetingsLeft<span class="hl opt">;</span>

   <span class="hl kwa">public static</span> <span class="hl kwb">void</span> <span class="hl kwd">main</span><span class="hl opt">(</span>String<span class="hl opt">[]</span> args<span class="hl opt">)</span> <span class="hl kwa">throws</span> InterruptedException <span class="hl opt">{</span>
      <span class="hl kwb">int</span> N <span class="hl opt">=</span> <span class="hl num">6</span>_000_000<span class="hl opt">;</span>
      <span class="hl kwa">if</span> <span class="hl opt">(</span>args<span class="hl opt">.</span>length <span class="hl opt">&gt;</span> <span class="hl num">0</span><span class="hl opt">) {</span>
         <span class="hl kwa">try</span> <span class="hl opt">{</span>
            N <span class="hl opt">=</span> Integer<span class="hl opt">.</span><span class="hl kwd">parseInt</span><span class="hl opt">(</span>args<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">]);</span>
         <span class="hl opt">}</span> <span class="hl kwa">catch</span> <span class="hl opt">(</span>NumberFormatException ignore<span class="hl opt">) {</span>
         <span class="hl opt">}</span>
      <span class="hl opt">}</span>
      <span class="hl kwa">for</span> <span class="hl opt">(</span>Color color1 <span class="hl opt">:</span> Color<span class="hl opt">.</span>colors<span class="hl opt">) {</span>
         <span class="hl kwa">for</span> <span class="hl opt">(</span>Color color2 <span class="hl opt">:</span> Color<span class="hl opt">.</span>colors<span class="hl opt">) {</span>
            System<span class="hl opt">.</span>out<span class="hl opt">.</span><span class="hl kwd">println</span><span class="hl opt">(</span>color1 <span class="hl opt">+</span> <span class="hl str">&quot; + &quot;</span> <span class="hl opt">+</span> color2 <span class="hl opt">+</span> <span class="hl str">&quot; -&gt; &quot;</span> <span class="hl opt">+</span> Color<span class="hl opt">.</span><span class="hl kwd">complement</span><span class="hl opt">(</span>color1<span class="hl opt">,</span> color2<span class="hl opt">));</span>
         <span class="hl opt">}</span>
      <span class="hl opt">}</span>
      System<span class="hl opt">.</span>out<span class="hl opt">.</span><span class="hl kwd">println</span><span class="hl opt">();</span>
      <span class="hl kwd">run</span><span class="hl opt">(</span>N<span class="hl opt">,</span> Color<span class="hl opt">.</span>blue<span class="hl opt">,</span> Color<span class="hl opt">.</span>red<span class="hl opt">,</span> Color<span class="hl opt">.</span>yellow<span class="hl opt">);</span>
      <span class="hl kwd">run</span><span class="hl opt">(</span>N<span class="hl opt">,</span> Color<span class="hl opt">.</span>blue<span class="hl opt">,</span> Color<span class="hl opt">.</span>red<span class="hl opt">,</span> Color<span class="hl opt">.</span>yellow<span class="hl opt">,</span> Color<span class="hl opt">.</span>red<span class="hl opt">,</span> Color<span class="hl opt">.</span>yellow<span class="hl opt">,</span> Color<span class="hl opt">.</span>blue<span class="hl opt">,</span> Color<span class="hl opt">.</span>red<span class="hl opt">,</span> Color<span class="hl opt">.</span>yellow<span class="hl opt">,</span> Color<span class="hl opt">.</span>red<span class="hl opt">,</span> Color<span class="hl opt">.</span>blue<span class="hl opt">);</span>
   <span class="hl opt">}</span>

   <span class="hl kwa">private static</span> <span class="hl kwb">void</span> <span class="hl kwd">run</span><span class="hl opt">(</span><span class="hl kwa">final</span> <span class="hl kwb">int</span> N<span class="hl opt">,</span> <span class="hl kwa">final</span> Color<span class="hl opt">...</span> colors<span class="hl opt">)</span> <span class="hl kwa">throws</span> InterruptedException <span class="hl opt">{</span>
      meetingPlace <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">MeetingPlace</span><span class="hl opt">();</span>
      latch <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">CountDownLatch</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">*</span>N<span class="hl opt">);</span>
      meetingsLeft <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">AtomicInteger</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">*</span>N<span class="hl opt">);</span>
      Creature<span class="hl opt">[]</span> creatures <span class="hl opt">=</span> <span class="hl kwa">new</span> Creature<span class="hl opt">[</span>colors<span class="hl opt">.</span>length<span class="hl opt">];</span>
      <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwb">int</span> i<span class="hl opt">=</span><span class="hl num">0</span><span class="hl opt">;</span> i <span class="hl opt">&lt;</span> colors<span class="hl opt">.</span>length<span class="hl opt">;</span> i<span class="hl opt">++) {</span>
         System<span class="hl opt">.</span>out<span class="hl opt">.</span><span class="hl kwd">print</span><span class="hl opt">(</span><span class="hl str">&quot; &quot;</span> <span class="hl opt">+</span> colors<span class="hl opt">[</span>i<span class="hl opt">]);</span>
         creatures<span class="hl opt">[</span>i<span class="hl opt">] =</span> <span class="hl kwa">new</span> <span class="hl kwd">Creature</span><span class="hl opt">(</span>colors<span class="hl opt">[</span>i<span class="hl opt">]);</span>
      <span class="hl opt">}</span>
      System<span class="hl opt">.</span>out<span class="hl opt">.</span><span class="hl kwd">println</span><span class="hl opt">();</span>
      <span class="hl kwa">for</span> <span class="hl opt">(</span>Creature creature <span class="hl opt">:</span> creatures<span class="hl opt">) {</span>
         creature<span class="hl opt">.</span><span class="hl kwd">start</span><span class="hl opt">();</span>
      <span class="hl opt">}</span>
      latch<span class="hl opt">.</span><span class="hl kwd">await</span><span class="hl opt">();</span>
      <span class="hl kwa">for</span> <span class="hl opt">(</span>Creature creature <span class="hl opt">:</span> creatures<span class="hl opt">) {</span>
         creature<span class="hl opt">.</span><span class="hl kwd">interrupt</span><span class="hl opt">();</span>
      <span class="hl opt">}</span>
      <span class="hl kwa">for</span> <span class="hl opt">(</span>Creature creature <span class="hl opt">:</span> creatures<span class="hl opt">) {</span>
         creature<span class="hl opt">.</span><span class="hl kwd">join</span><span class="hl opt">();</span>
      <span class="hl opt">}</span>
      <span class="hl kwb">int</span> m <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
      <span class="hl kwa">for</span> <span class="hl opt">(</span>Creature creature <span class="hl opt">:</span> creatures<span class="hl opt">) {</span>
         System<span class="hl opt">.</span>out<span class="hl opt">.</span><span class="hl kwd">println</span><span class="hl opt">(</span><span class="hl str">&quot;&quot;</span> <span class="hl opt">+</span> creature<span class="hl opt">.</span>meetings <span class="hl opt">+</span> <span class="hl kwd">spell</span><span class="hl opt">(</span>creature<span class="hl opt">.</span>meetingsWithSelf<span class="hl opt">));</span>
         m <span class="hl opt">+=</span> creature<span class="hl opt">.</span>meetings<span class="hl opt">;</span>
      <span class="hl opt">}</span>
      System<span class="hl opt">.</span>out<span class="hl opt">.</span><span class="hl kwd">println</span><span class="hl opt">(</span><span class="hl kwd">spell</span><span class="hl opt">(</span>m<span class="hl opt">));</span>
      System<span class="hl opt">.</span>out<span class="hl opt">.</span><span class="hl kwd">println</span><span class="hl opt">();</span>
   <span class="hl opt">}</span>

   <span class="hl kwa">private static final</span> String<span class="hl opt">[]</span> DIGITS <span class="hl opt">= {</span>
         <span class="hl str">&quot; zero&quot;</span><span class="hl opt">,</span>
         <span class="hl str">&quot; one&quot;</span><span class="hl opt">,</span>
         <span class="hl str">&quot; two&quot;</span><span class="hl opt">,</span>
         <span class="hl str">&quot; three&quot;</span><span class="hl opt">,</span>
         <span class="hl str">&quot; four&quot;</span><span class="hl opt">,</span>
         <span class="hl str">&quot; five&quot;</span><span class="hl opt">,</span>
         <span class="hl str">&quot; six&quot;</span><span class="hl opt">,</span>
         <span class="hl str">&quot; seven&quot;</span><span class="hl opt">,</span>
         <span class="hl str">&quot; eight&quot;</span><span class="hl opt">,</span>
         <span class="hl str">&quot; nine&quot;</span>
   <span class="hl opt">};</span>
   <span class="hl kwa">static</span> String <span class="hl kwd">spell</span><span class="hl opt">(</span><span class="hl kwb">int</span> number<span class="hl opt">) {</span>
      <span class="hl kwa">if</span> <span class="hl opt">(</span>number <span class="hl opt">==</span> <span class="hl num">0</span><span class="hl opt">) {</span>
         <span class="hl kwa">return</span> DIGITS<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">];</span>
      <span class="hl opt">}</span>
      String s <span class="hl opt">=</span> <span class="hl str">&quot;&quot;</span><span class="hl opt">;</span>
      <span class="hl kwa">while</span> <span class="hl opt">(</span>number <span class="hl opt">&gt;</span> <span class="hl num">0</span><span class="hl opt">) {</span>
         s <span class="hl opt">=</span> DIGITS<span class="hl opt">[</span>number <span class="hl opt">%</span> <span class="hl num">10</span><span class="hl opt">] +</span> s<span class="hl opt">;</span>
         number <span class="hl opt">/=</span> <span class="hl num">10</span><span class="hl opt">;</span>
      <span class="hl opt">}</span>
      <span class="hl kwa">return</span> s<span class="hl opt">;</span>
   <span class="hl opt">}</span>

   <span class="hl kwa">static class</span> Creature <span class="hl kwa">extends</span> Thread <span class="hl opt">{</span>
      <span class="hl kwa">private static</span> <span class="hl kwb">int</span> nameCounter<span class="hl opt">;</span>
      <span class="hl kwa">private</span> Color color<span class="hl opt">;</span>
      <span class="hl kwa">private final</span> <span class="hl kwb">int</span> name<span class="hl opt">;</span>
      <span class="hl kwb">int</span> meetings <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
      <span class="hl kwb">int</span> meetingsWithSelf <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>

      <span class="hl kwd">Creature</span><span class="hl opt">(</span>Color color<span class="hl opt">) {</span>
         <span class="hl kwa">this</span><span class="hl opt">.</span>name <span class="hl opt">= ++</span>nameCounter<span class="hl opt">;</span>
         <span class="hl kwa">this</span><span class="hl opt">.</span>color <span class="hl opt">=</span> color<span class="hl opt">;</span>
      <span class="hl opt">}</span>

      <span class="hl kwa">private</span> Agent <span class="hl kwd">createAgent</span><span class="hl opt">() {</span>
         <span class="hl kwa">return new</span> <span class="hl kwd">Agent</span><span class="hl opt">(</span><span class="hl kwa">this</span><span class="hl opt">);</span>
      <span class="hl opt">}</span>

      <span class="hl kwc">&#64;Override</span>
      <span class="hl kwa">public</span> <span class="hl kwb">void</span> <span class="hl kwd">run</span><span class="hl opt">() {</span>
         <span class="hl kwa">while</span> <span class="hl opt">(</span>true<span class="hl opt">) {</span>
            <span class="hl kwa">try</span> <span class="hl opt">{</span>
               Agent agent <span class="hl opt">=</span> meetingPlace<span class="hl opt">.</span><span class="hl kwd">enter</span><span class="hl opt">(</span><span class="hl kwa">this</span><span class="hl opt">.</span><span class="hl kwd">createAgent</span><span class="hl opt">());</span>
               <span class="hl kwa">if</span> <span class="hl opt">(</span>agent <span class="hl opt">==</span> null<span class="hl opt">) {</span>
                  <span class="hl kwa">return</span><span class="hl opt">;</span>
               <span class="hl opt">}</span>
               <span class="hl kwa">if</span> <span class="hl opt">(</span>agent<span class="hl opt">.</span>name <span class="hl opt">==</span> <span class="hl kwa">this</span><span class="hl opt">.</span>name<span class="hl opt">) {</span>
                  meetingsWithSelf<span class="hl opt">++;</span>
               <span class="hl opt">}</span>
               color <span class="hl opt">=</span> Color<span class="hl opt">.</span><span class="hl kwd">complement</span><span class="hl opt">(</span><span class="hl kwa">this</span><span class="hl opt">.</span>color<span class="hl opt">,</span> agent<span class="hl opt">.</span>color<span class="hl opt">);</span>
               meetings<span class="hl opt">++;</span>
            <span class="hl opt">}</span> <span class="hl kwa">catch</span> <span class="hl opt">(</span>InterruptedException e<span class="hl opt">) {</span>
               <span class="hl kwa">break</span><span class="hl opt">;</span>
            <span class="hl opt">}</span>
         <span class="hl opt">}</span>
      <span class="hl opt">}</span>

   <span class="hl opt">}</span>

   <span class="hl kwa">static class</span> MeetingPlace <span class="hl opt">{</span>
      <span class="hl kwa">private final</span> Exchanger<span class="hl opt">&lt;</span>Agent<span class="hl opt">&gt;</span> room<span class="hl opt">;</span>

      <span class="hl kwd">MeetingPlace</span><span class="hl opt">() {</span>
         room <span class="hl opt">=</span> <span class="hl kwa">new</span> Exchanger<span class="hl opt">&lt;&gt;();</span>
      <span class="hl opt">}</span>

      <span class="hl kwa">public</span> Agent <span class="hl kwd">enter</span><span class="hl opt">(</span>Agent visitor<span class="hl opt">)</span> <span class="hl kwa">throws</span> InterruptedException <span class="hl opt">{</span>
         <span class="hl kwa">if</span> <span class="hl opt">(</span>meetingsLeft<span class="hl opt">.</span><span class="hl kwd">get</span><span class="hl opt">() &lt;</span> <span class="hl num">0</span><span class="hl opt">) {</span>
            <span class="hl kwa">return</span> null<span class="hl opt">;</span>
         <span class="hl opt">}</span>
         Agent agent <span class="hl opt">=</span> room<span class="hl opt">.</span><span class="hl kwd">exchange</span><span class="hl opt">(</span>visitor<span class="hl opt">);</span>
         latch<span class="hl opt">.</span><span class="hl kwd">countDown</span><span class="hl opt">();</span>
         <span class="hl kwa">if</span> <span class="hl opt">(</span>meetingsLeft<span class="hl opt">.</span><span class="hl kwd">decrementAndGet</span><span class="hl opt">() &lt;</span> <span class="hl num">0</span><span class="hl opt">) {</span>
            <span class="hl kwa">return</span> null<span class="hl opt">;</span>
         <span class="hl opt">}</span>
         <span class="hl kwa">return</span> agent<span class="hl opt">;</span>
      <span class="hl opt">}</span>

   <span class="hl opt">}</span>

   <span class="hl kwa">static class</span> Agent <span class="hl opt">{</span>
      <span class="hl kwa">final</span> <span class="hl kwb">int</span> name<span class="hl opt">;</span>
      <span class="hl kwa">final</span> Color color<span class="hl opt">;</span>

      <span class="hl kwd">Agent</span><span class="hl opt">(</span>Creature creature<span class="hl opt">) {</span>
         <span class="hl kwa">this</span><span class="hl opt">.</span>name <span class="hl opt">=</span> creature<span class="hl opt">.</span>name<span class="hl opt">;</span>
         <span class="hl kwa">this</span><span class="hl opt">.</span>color <span class="hl opt">=</span> creature<span class="hl opt">.</span>color<span class="hl opt">;</span>
      <span class="hl opt">}</span>
   <span class="hl opt">}</span>

   enum Color <span class="hl opt">{</span>
      blue<span class="hl opt">,</span>
      red<span class="hl opt">,</span>
      yellow<span class="hl opt">;</span>

      <span class="hl kwa">static final</span> Color<span class="hl opt">[]</span> colors <span class="hl opt">= {</span>Color<span class="hl opt">.</span>blue<span class="hl opt">,</span> Color<span class="hl opt">.</span>red<span class="hl opt">,</span> Color<span class="hl opt">.</span>yellow<span class="hl opt">};</span>

      <span class="hl kwa">public static</span> Color <span class="hl kwd">complement</span><span class="hl opt">(</span><span class="hl kwa">final</span> Color color1<span class="hl opt">,</span> <span class="hl kwa">final</span> Color color2<span class="hl opt">) {</span>
         <span class="hl kwa">switch</span> <span class="hl opt">(</span>color1<span class="hl opt">) {</span>
            <span class="hl kwa">case</span> blue<span class="hl opt">:</span>
               <span class="hl kwa">switch</span> <span class="hl opt">(</span>color2<span class="hl opt">) {</span>
                  <span class="hl kwa">case</span> blue<span class="hl opt">:</span>      <span class="hl kwa">return</span> blue<span class="hl opt">;</span>
                  <span class="hl kwa">case</span> red<span class="hl opt">:</span>      <span class="hl kwa">return</span> yellow<span class="hl opt">;</span>
                  <span class="hl kwa">case</span> yellow<span class="hl opt">:</span>   <span class="hl kwa">return</span> red<span class="hl opt">;</span>
               <span class="hl opt">}</span>
            <span class="hl kwa">case</span> red<span class="hl opt">:</span>
               <span class="hl kwa">switch</span> <span class="hl opt">(</span>color2<span class="hl opt">) {</span>
                  <span class="hl kwa">case</span> blue<span class="hl opt">:</span>      <span class="hl kwa">return</span> yellow<span class="hl opt">;</span>
                  <span class="hl kwa">case</span> red<span class="hl opt">:</span>      <span class="hl kwa">return</span> red<span class="hl opt">;</span>
                  <span class="hl kwa">case</span> yellow<span class="hl opt">:</span>   <span class="hl kwa">return</span> blue<span class="hl opt">;</span>
               <span class="hl opt">}</span>
            <span class="hl kwa">case</span> yellow<span class="hl opt">:</span>
               <span class="hl kwa">switch</span> <span class="hl opt">(</span>color2<span class="hl opt">) {</span>
                  <span class="hl kwa">case</span> blue<span class="hl opt">:</span>      <span class="hl kwa">return</span> red<span class="hl opt">;</span>
                  <span class="hl kwa">case</span> red<span class="hl opt">:</span>      <span class="hl kwa">return</span> blue<span class="hl opt">;</span>
                  <span class="hl kwa">case</span> yellow<span class="hl opt">:</span>   <span class="hl kwa">return</span> yellow<span class="hl opt">;</span>
               <span class="hl opt">}</span>
         <span class="hl opt">}</span>
         <span class="hl kwa">return</span> null<span class="hl opt">;</span>
      <span class="hl opt">}</span>
   <span class="hl opt">}</span>

<span class="hl opt">}</span>
