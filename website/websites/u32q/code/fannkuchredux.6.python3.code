<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://benchmarksgame.alioth.debian.org/</span>

<span class="hl slc">#    contributed by Isaac Gouy</span>
<span class="hl slc">#    converted to Java by Oleg Mazurov</span>
<span class="hl slc">#    converted to Python by Buck Golemon</span>
<span class="hl slc">#    modified by Justin Peel</span>

<span class="hl kwa">def</span> <span class="hl kwd">fannkuch</span><span class="hl opt">(</span>n<span class="hl opt">):</span>
    maxFlipsCount <span class="hl opt">=</span> <span class="hl num">0</span>
    permSign <span class="hl opt">=</span> <span class="hl kwa">True</span>
    checksum <span class="hl opt">=</span> <span class="hl num">0</span>

    perm1 <span class="hl opt">=</span> <span class="hl kwb">list</span><span class="hl opt">(</span><span class="hl kwb">range</span><span class="hl opt">(</span>n<span class="hl opt">))</span>
    count <span class="hl opt">=</span> perm1<span class="hl opt">[:]</span>
    rxrange <span class="hl opt">=</span> <span class="hl kwb">range</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span> n <span class="hl opt">-</span> <span class="hl num">1</span><span class="hl opt">)</span>
    nm <span class="hl opt">=</span> n <span class="hl opt">-</span> <span class="hl num">1</span>
    <span class="hl kwa">while</span> <span class="hl num">1</span><span class="hl opt">:</span>
        k <span class="hl opt">=</span> perm1<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">]</span>
        <span class="hl kwa">if</span> k<span class="hl opt">:</span>
            perm <span class="hl opt">=</span> perm1<span class="hl opt">[:]</span>
            flipsCount <span class="hl opt">=</span> <span class="hl num">1</span>
            kk <span class="hl opt">=</span> perm<span class="hl opt">[</span>k<span class="hl opt">]</span>
            <span class="hl kwa">while</span> kk<span class="hl opt">:</span>
                perm<span class="hl opt">[:</span>k<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">] =</span> perm<span class="hl opt">[</span>k<span class="hl opt">::-</span><span class="hl num">1</span><span class="hl opt">]</span>
                flipsCount <span class="hl opt">+=</span> <span class="hl num">1</span>
                k <span class="hl opt">=</span> kk
                kk <span class="hl opt">=</span> perm<span class="hl opt">[</span>kk<span class="hl opt">]</span>
            <span class="hl kwa">if</span> maxFlipsCount <span class="hl opt">&lt;</span> flipsCount<span class="hl opt">:</span>
                maxFlipsCount <span class="hl opt">=</span> flipsCount
            checksum <span class="hl opt">+=</span> flipsCount <span class="hl kwa">if</span> permSign <span class="hl kwa">else</span> <span class="hl opt">-</span>flipsCount

        <span class="hl slc"># Use incremental change to generate another permutation</span>
        <span class="hl kwa">if</span> permSign<span class="hl opt">:</span>
            perm1<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">],</span>perm1<span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">] =</span> perm1<span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">],</span>perm1<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">]</span>
            permSign <span class="hl opt">=</span> <span class="hl kwa">False</span>
        <span class="hl kwa">else</span><span class="hl opt">:</span>
            perm1<span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">],</span>perm1<span class="hl opt">[</span><span class="hl num">2</span><span class="hl opt">] =</span> perm1<span class="hl opt">[</span><span class="hl num">2</span><span class="hl opt">],</span>perm1<span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">]</span>
            permSign <span class="hl opt">=</span> <span class="hl kwa">True</span>
            <span class="hl kwa">for</span> r <span class="hl kwa">in</span> rxrange<span class="hl opt">:</span>
                <span class="hl kwa">if</span> count<span class="hl opt">[</span>r<span class="hl opt">]:</span>
                    <span class="hl kwa">break</span>
                count<span class="hl opt">[</span>r<span class="hl opt">] =</span> r
                perm0 <span class="hl opt">=</span> perm1<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">]</span>
                perm1<span class="hl opt">[:</span>r<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">] =</span> perm1<span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">:</span>r<span class="hl opt">+</span><span class="hl num">2</span><span class="hl opt">]</span>
                perm1<span class="hl opt">[</span>r<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">] =</span> perm0
            <span class="hl kwa">else</span><span class="hl opt">:</span>
                r <span class="hl opt">=</span> nm
                <span class="hl kwa">if not</span> count<span class="hl opt">[</span>r<span class="hl opt">]:</span>
                    <span class="hl kwa">print</span><span class="hl opt">(</span> checksum <span class="hl opt">)</span>
                    <span class="hl kwa">return</span> maxFlipsCount
            count<span class="hl opt">[</span>r<span class="hl opt">] -=</span> <span class="hl num">1</span>
<span class="hl kwa">from</span> sys <span class="hl kwa">import</span> argv
n <span class="hl opt">=</span> <span class="hl kwb">int</span><span class="hl opt">(</span>argv<span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">])</span>

<span class="hl kwa">print</span><span class="hl opt">((</span> <span class="hl str">&quot;Pfannkuchen(%i) = %i&quot;</span> <span class="hl opt">% (</span>n<span class="hl opt">,</span> <span class="hl kwd">fannkuch</span><span class="hl opt">(</span>n<span class="hl opt">)) ))</span>
