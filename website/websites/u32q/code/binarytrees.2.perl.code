<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc"># Contributed by Doug King</span>
<span class="hl slc"># Corrected by Heiner Marxen</span>
<span class="hl slc"># Tree-building made non-recursive by Steffen Mueller</span>

<span class="hl kwa">use</span> <span class="hl kwd">integer</span><span class="hl sym">;</span>

<span class="hl kwa">sub</span> item_check <span class="hl sym">{</span>
    <span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$tree</span><span class="hl sym">) =</span> <span class="hl kwb">&#64;_</span><span class="hl sym">;</span>

    <span class="hl kwa">return</span> <span class="hl kwb">$tree</span><span class="hl sym">-&gt;[</span><span class="hl num">2</span><span class="hl sym">]</span> <span class="hl kwa">unless</span> <span class="hl sym">(</span>defined <span class="hl kwb">$tree</span><span class="hl sym">-&gt;[</span><span class="hl num">0</span><span class="hl sym">]);</span>
    <span class="hl kwa">return</span> <span class="hl kwb">$tree</span><span class="hl sym">-&gt;[</span><span class="hl num">2</span><span class="hl sym">] +</span> <span class="hl kwd">item_check</span><span class="hl sym">(</span><span class="hl kwb">$tree</span><span class="hl sym">-&gt;[</span><span class="hl num">0</span><span class="hl sym">]) -</span> <span class="hl kwd">item_check</span><span class="hl sym">(</span><span class="hl kwb">$tree</span><span class="hl sym">-&gt;[</span><span class="hl num">1</span><span class="hl sym">]);</span>
<span class="hl sym">}</span>


<span class="hl kwa">sub</span> bottom_up_tree <span class="hl sym">{</span>
    <span class="hl kwc">my</span><span class="hl sym">(</span><span class="hl kwb">$depth</span><span class="hl sym">) =</span> <span class="hl kwb">&#64;_</span><span class="hl sym">;</span>

    <span class="hl kwc">my</span> <span class="hl kwb">&#64;pool</span><span class="hl sym">;</span>
    push <span class="hl kwb">&#64;pool</span><span class="hl sym">, [</span>undef<span class="hl sym">,</span> undef<span class="hl sym">, -</span><span class="hl kwb">$_</span><span class="hl sym">]</span> <span class="hl kwa">foreach</span> <span class="hl num">0</span><span class="hl sym">.</span><span class="hl num">.2</span><span class="hl sym">**</span><span class="hl kwb">$depth</span><span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">;</span>

    <span class="hl kwa">foreach</span> <span class="hl kwc">my</span> <span class="hl kwb">$exponent</span> <span class="hl sym">(</span><span class="hl kwd">reverse</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">..(</span><span class="hl kwb">$depth</span><span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">))) {</span>
        push <span class="hl kwb">&#64;pool</span><span class="hl sym">, [</span><span class="hl kwd">reverse</span><span class="hl sym">(</span><span class="hl kwd">splice</span><span class="hl sym">(</span><span class="hl kwb">&#64;pool</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">2</span><span class="hl sym">)),</span> <span class="hl kwb">$_</span><span class="hl sym">]</span> 
                       <span class="hl kwa">foreach</span> <span class="hl kwd">reverse</span><span class="hl sym">(-(</span><span class="hl num">2</span><span class="hl sym">**</span><span class="hl kwb">$exponent</span><span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">) ..</span> <span class="hl num">0</span><span class="hl sym">);</span>
    <span class="hl sym">}</span>
    <span class="hl kwa">return</span> <span class="hl kwb">$pool</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">];</span>
<span class="hl sym">}</span>


<span class="hl kwc">my</span> <span class="hl kwb">$n</span> <span class="hl sym">=</span> shift <span class="hl kwb">&#64;ARGV</span><span class="hl sym">;</span>

<span class="hl kwc">my</span> <span class="hl kwb">$min_depth</span> <span class="hl sym">=</span> <span class="hl num">4</span><span class="hl sym">;</span>
<span class="hl kwc">my</span> <span class="hl kwb">$max_depth</span><span class="hl sym">;</span>

<span class="hl kwa">if</span> <span class="hl sym">( (</span><span class="hl kwb">$min_depth</span> <span class="hl sym">+</span> <span class="hl num">2</span><span class="hl sym">) &gt;</span> <span class="hl kwb">$n</span><span class="hl sym">) {</span>
    <span class="hl kwb">$max_depth</span> <span class="hl sym">=</span> <span class="hl kwb">$min_depth</span> <span class="hl sym">+</span> <span class="hl num">2</span><span class="hl sym">;</span>
<span class="hl sym">}</span> <span class="hl kwa">else</span> <span class="hl sym">{</span>
    <span class="hl kwb">$max_depth</span> <span class="hl sym">=</span> <span class="hl kwb">$n</span><span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl sym">{</span>
    <span class="hl kwc">my</span> <span class="hl kwb">$stretch_depth</span> <span class="hl sym">=</span> <span class="hl kwb">$max_depth</span> <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>
    <span class="hl kwc">my</span> <span class="hl kwb">$stretch_tree</span> <span class="hl sym">=</span> <span class="hl kwd">bottom_up_tree</span><span class="hl sym">(</span><span class="hl kwb">$stretch_depth</span><span class="hl sym">);</span>
    <span class="hl kwc">print</span> <span class="hl str">&quot;stretch tree of depth $stretch_depth</span><span class="hl esc">\t</span> <span class="hl str">check: &quot;</span><span class="hl sym">,</span>
           <span class="hl kwd">item_check</span><span class="hl sym">(</span><span class="hl kwb">$stretch_tree</span><span class="hl sym">),</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwc">my</span> <span class="hl kwb">$long_lived_tree</span> <span class="hl sym">=</span> <span class="hl kwd">bottom_up_tree</span><span class="hl sym">(</span><span class="hl kwb">$max_depth</span><span class="hl sym">);</span>

<span class="hl kwc">my</span> <span class="hl kwb">$depth</span> <span class="hl sym">=</span> <span class="hl kwb">$min_depth</span><span class="hl sym">;</span>
<span class="hl kwa">while</span><span class="hl sym">(</span> <span class="hl kwb">$depth</span> <span class="hl sym">&lt;=</span> <span class="hl kwb">$max_depth</span> <span class="hl sym">) {</span>
    <span class="hl kwc">my</span> <span class="hl kwb">$iterations</span> <span class="hl sym">=</span> <span class="hl num">2</span> <span class="hl sym">** (</span><span class="hl kwb">$max_depth</span> <span class="hl sym">-</span> <span class="hl kwb">$depth</span> <span class="hl sym">+</span> <span class="hl kwb">$min_depth</span><span class="hl sym">);</span>
    <span class="hl kwc">my</span> <span class="hl kwb">$check</span> <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>

    <span class="hl kwa">foreach</span> <span class="hl kwc">my</span> <span class="hl kwb">$i</span> <span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">..</span><span class="hl kwb">$iterations</span><span class="hl sym">) {</span>
	<span class="hl kwc">my</span> <span class="hl kwb">$temp_tree</span> <span class="hl sym">=</span> <span class="hl kwd">bottom_up_tree</span><span class="hl sym">(</span><span class="hl kwb">$depth</span><span class="hl sym">);</span>
	<span class="hl kwb">$check</span> <span class="hl sym">+=</span> <span class="hl kwd">item_check</span><span class="hl sym">(</span><span class="hl kwb">$temp_tree</span><span class="hl sym">);</span>

	<span class="hl kwb">$temp_tree</span> <span class="hl sym">=</span> <span class="hl kwd">bottom_up_tree</span><span class="hl sym">(</span><span class="hl kwb">$depth</span><span class="hl sym">);</span>
	<span class="hl kwb">$check</span> <span class="hl sym">+=</span> <span class="hl kwd">item_check</span><span class="hl sym">(</span><span class="hl kwb">$temp_tree</span><span class="hl sym">);</span>
    <span class="hl sym">}</span>

    <span class="hl kwc">print</span> <span class="hl kwb">$iterations</span> <span class="hl sym">*</span> <span class="hl num">2</span><span class="hl sym">,</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span> <span class="hl str">trees of depth $depth</span><span class="hl esc">\t</span> <span class="hl str">check: &quot;</span><span class="hl sym">,</span> <span class="hl kwb">$check</span><span class="hl sym">,</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
    <span class="hl kwb">$depth</span> <span class="hl sym">+=</span> <span class="hl num">2</span><span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwc">print</span> <span class="hl str">&quot;long lived tree of depth $max_depth</span><span class="hl esc">\t</span> <span class="hl str">check: &quot;</span><span class="hl sym">,</span> 
       <span class="hl kwd">item_check</span><span class="hl sym">(</span><span class="hl kwb">$long_lived_tree</span><span class="hl sym">),</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>

