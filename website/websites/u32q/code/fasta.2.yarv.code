<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://benchmarksgame.alioth.debian.org/</span>
<span class="hl slc"># Contributed by Sokolov Yura</span>
<span class="hl slc"># Modified by Joseph LaFata</span>

<span class="hl kwb">$last</span> <span class="hl opt">=</span> <span class="hl num">42.0</span>
IM<span class="hl opt">=</span><span class="hl num">139968</span>
IA<span class="hl opt">=</span><span class="hl num">3877</span>
IC<span class="hl opt">=</span><span class="hl num">29573</span>
<span class="hl kwa">def</span> <span class="hl kwd">gen_random</span> <span class="hl opt">(</span>max)
    <span class="hl opt">(</span>max <span class="hl opt">* (</span><span class="hl kwb">$last</span> <span class="hl opt">= (</span><span class="hl kwb">$last</span> <span class="hl opt">*</span> IA <span class="hl opt">+</span> IC) <span class="hl opt">%</span> IM)) <span class="hl opt">/</span> IM
<span class="hl kwa">end</span>

alu <span class="hl opt">=</span>
   <span class="hl str">&quot;GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG&quot;</span><span class="hl opt">+</span>
   <span class="hl str">&quot;GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA&quot;</span><span class="hl opt">+</span>
   <span class="hl str">&quot;CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT&quot;</span><span class="hl opt">+</span>
   <span class="hl str">&quot;ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA&quot;</span><span class="hl opt">+</span>
   <span class="hl str">&quot;GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG&quot;</span><span class="hl opt">+</span>
   <span class="hl str">&quot;AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC&quot;</span><span class="hl opt">+</span>
   <span class="hl str">&quot;AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA&quot;</span>

iub <span class="hl opt">= [</span>
    <span class="hl opt">[</span><span class="hl str">&quot;a&quot;</span><span class="hl opt">,</span> <span class="hl num">0.27</span><span class="hl opt">],</span>
    <span class="hl opt">[</span><span class="hl str">&quot;c&quot;</span><span class="hl opt">,</span> <span class="hl num">0.12</span><span class="hl opt">],</span>
    <span class="hl opt">[</span><span class="hl str">&quot;g&quot;</span><span class="hl opt">,</span> <span class="hl num">0.12</span><span class="hl opt">],</span>
    <span class="hl opt">[</span><span class="hl str">&quot;t&quot;</span><span class="hl opt">,</span> <span class="hl num">0.27</span><span class="hl opt">],</span>

    <span class="hl opt">[</span><span class="hl str">&quot;B&quot;</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">],</span>
    <span class="hl opt">[</span><span class="hl str">&quot;D&quot;</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">],</span>
    <span class="hl opt">[</span><span class="hl str">&quot;H&quot;</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">],</span>
    <span class="hl opt">[</span><span class="hl str">&quot;K&quot;</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">],</span>
    <span class="hl opt">[</span><span class="hl str">&quot;M&quot;</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">],</span>
    <span class="hl opt">[</span><span class="hl str">&quot;N&quot;</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">],</span>
    <span class="hl opt">[</span><span class="hl str">&quot;R&quot;</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">],</span>
    <span class="hl opt">[</span><span class="hl str">&quot;S&quot;</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">],</span>
    <span class="hl opt">[</span><span class="hl str">&quot;V&quot;</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">],</span>
    <span class="hl opt">[</span><span class="hl str">&quot;W&quot;</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">],</span>
    <span class="hl opt">[</span><span class="hl str">&quot;Y&quot;</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">],</span>
<span class="hl opt">]</span>
homosapiens <span class="hl opt">= [</span>
    <span class="hl opt">[</span><span class="hl str">&quot;a&quot;</span><span class="hl opt">,</span> <span class="hl num">0.3029549426680</span><span class="hl opt">],</span>
    <span class="hl opt">[</span><span class="hl str">&quot;c&quot;</span><span class="hl opt">,</span> <span class="hl num">0.1979883004921</span><span class="hl opt">],</span>
    <span class="hl opt">[</span><span class="hl str">&quot;g&quot;</span><span class="hl opt">,</span> <span class="hl num">0.1975473066391</span><span class="hl opt">],</span>
    <span class="hl opt">[</span><span class="hl str">&quot;t&quot;</span><span class="hl opt">,</span> <span class="hl num">0.3015094502008</span><span class="hl opt">],</span>
<span class="hl opt">]</span>

<span class="hl kwa">def</span> <span class="hl kwd">make_repeat_fasta</span><span class="hl opt">(</span>id<span class="hl opt">,</span> desc<span class="hl opt">,</span> src<span class="hl opt">,</span> n)
    puts <span class="hl str">&quot;&gt;</span><span class="hl esc">#{id}</span> <span class="hl str"></span><span class="hl esc">#{desc}</span><span class="hl str">&quot;</span>
    l <span class="hl opt">=</span> src<span class="hl opt">.</span>length
    s <span class="hl opt">=</span> src <span class="hl opt">* ((</span>n <span class="hl opt">/</span> l) <span class="hl opt">+</span> <span class="hl num">1</span>)
    s<span class="hl opt">.</span>slice<span class="hl opt">!(</span>n<span class="hl opt">,</span> l)
    <span class="hl num">0</span><span class="hl opt">.</span><span class="hl kwd">step</span><span class="hl opt">(</span>s<span class="hl opt">.</span>length-1<span class="hl opt">,</span><span class="hl num">60</span>) <span class="hl esc">{|x| print s[x,60] , &quot;\n&quot;}</span>
<span class="hl kwa">end</span>

<span class="hl kwa">def</span> <span class="hl kwd">make_random_fasta</span><span class="hl opt">(</span>id<span class="hl opt">,</span> desc<span class="hl opt">,</span> table<span class="hl opt">,</span> n)
    puts <span class="hl str">&quot;&gt;</span><span class="hl esc">#{id}</span> <span class="hl str"></span><span class="hl esc">#{desc}</span><span class="hl str">&quot;</span>
    rand<span class="hl opt">,</span> v <span class="hl opt">=</span> <span class="hl kwa">nil</span><span class="hl opt">,</span><span class="hl kwa">nil</span>
    prob <span class="hl opt">=</span> <span class="hl num">0.0</span>
    table<span class="hl opt">.</span>each<span class="hl esc">{|v| v[1]= (prob += v[1])}</span>
    output <span class="hl opt">=</span> <span class="hl str">&quot;&quot;</span>
    n<span class="hl opt">.</span>times <span class="hl kwa">do</span>
      rand <span class="hl opt">=</span> <span class="hl kwd">gen_random</span><span class="hl opt">(</span><span class="hl num">1.0</span>)
      table<span class="hl opt">.</span>each <span class="hl kwa">do</span> <span class="hl opt">|</span>v<span class="hl opt">|</span>
	<span class="hl kwa">if</span> v<span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">] &gt;</span> rand <span class="hl kwa">then</span>
	  output <span class="hl opt">&lt;&lt;</span> v<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">]</span>
	  <span class="hl kwa">break</span>
	<span class="hl kwa">end</span>
      <span class="hl kwa">end</span>
    <span class="hl kwa">end</span>
    <span class="hl num">0</span><span class="hl opt">.</span><span class="hl kwd">step</span><span class="hl opt">(</span>output<span class="hl opt">.</span>length-1<span class="hl opt">,</span><span class="hl num">60</span>) <span class="hl esc">{|x| print output[x,60] , &quot;\n&quot;}</span>
<span class="hl kwa">end</span>


n <span class="hl opt">= (</span><span class="hl kwc">ARGV</span><span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">]</span> <span class="hl kwa">or</span> <span class="hl num">27</span>)<span class="hl opt">.</span>to_i

<span class="hl kwd">make_repeat_fasta</span><span class="hl opt">(</span><span class="hl str">'ONE'</span><span class="hl opt">,</span> <span class="hl str">'Homo sapiens alu'</span><span class="hl opt">,</span> alu<span class="hl opt">,</span> n<span class="hl opt">*</span><span class="hl num">2</span>)
<span class="hl kwd">make_random_fasta</span><span class="hl opt">(</span><span class="hl str">'TWO'</span><span class="hl opt">,</span> <span class="hl str">'IUB ambiguity codes'</span><span class="hl opt">,</span> iub<span class="hl opt">,</span> n<span class="hl opt">*</span><span class="hl num">3</span>)
<span class="hl kwd">make_random_fasta</span><span class="hl opt">(</span><span class="hl str">'THREE'</span><span class="hl opt">,</span> <span class="hl str">'Homo sapiens frequency'</span><span class="hl opt">,</span> homosapiens<span class="hl opt">,</span> n<span class="hl opt">*</span><span class="hl num">5</span>)
