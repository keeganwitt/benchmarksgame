<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"></span>
<span class="hl com">   contributed by KP</span>
<span class="hl com">*/</span>

<span class="hl kwa">package</span> main

<span class="hl kwa">import</span> <span class="hl opt">(</span>
   <span class="hl str">&quot;fmt&quot;</span>
   <span class="hl str">&quot;os&quot;</span>
   <span class="hl str">&quot;runtime&quot;</span>
   <span class="hl str">&quot;strconv&quot;</span>
   <span class="hl str">&quot;sync&quot;</span>
<span class="hl opt">)</span>

<span class="hl kwa">type</span> Token <span class="hl kwb">int</span>

<span class="hl kwa">type</span> T <span class="hl kwa">struct</span> <span class="hl opt">{</span>
   next  <span class="hl opt">*</span>T
   label <span class="hl kwb">int</span>
   value <span class="hl kwb">int</span>
   mux   sync<span class="hl opt">.</span>Mutex
<span class="hl opt">}</span>

<span class="hl kwa">func</span> <span class="hl opt">(</span>w <span class="hl opt">*</span>T<span class="hl opt">)</span> <span class="hl kwd">put</span><span class="hl opt">(</span>v <span class="hl kwb">int</span><span class="hl opt">) {</span>
   w<span class="hl opt">.</span>value <span class="hl opt">=</span> v
   <span class="hl kwa">if</span> v <span class="hl opt">==</span> <span class="hl num">0</span> <span class="hl opt">{</span>
      res <span class="hl opt">&lt;-</span> w<span class="hl opt">.</span>label
   <span class="hl opt">}</span> <span class="hl kwa">else</span> <span class="hl opt">{</span>
      w<span class="hl opt">.</span>mux<span class="hl opt">.</span><span class="hl kwd">Unlock</span><span class="hl opt">()</span>
   <span class="hl opt">}</span>
<span class="hl opt">}</span>

<span class="hl kwa">func</span> <span class="hl opt">(</span>w <span class="hl opt">*</span>T<span class="hl opt">)</span> <span class="hl kwd">run</span><span class="hl opt">() {</span>
   <span class="hl kwa">for</span> <span class="hl opt">{</span>
      w<span class="hl opt">.</span>mux<span class="hl opt">.</span><span class="hl kwd">Lock</span><span class="hl opt">()</span>
      w<span class="hl opt">.</span>next<span class="hl opt">.</span><span class="hl kwd">put</span><span class="hl opt">(</span>w<span class="hl opt">.</span>value <span class="hl opt">-</span> <span class="hl num">1</span><span class="hl opt">)</span>
      runtime<span class="hl opt">.</span><span class="hl kwd">Gosched</span><span class="hl opt">()</span>
   <span class="hl opt">}</span>
<span class="hl opt">}</span>

<span class="hl kwa">func</span> <span class="hl opt">(</span>w <span class="hl opt">*</span>T<span class="hl opt">)</span> <span class="hl kwd">Start</span><span class="hl opt">(</span>label <span class="hl kwb">int</span><span class="hl opt">,</span> next <span class="hl opt">*</span>T<span class="hl opt">) {</span>
   w<span class="hl opt">.</span>label <span class="hl opt">=</span> label
   w<span class="hl opt">.</span>next <span class="hl opt">=</span> next
   w<span class="hl opt">.</span>mux<span class="hl opt">.</span><span class="hl kwd">Lock</span><span class="hl opt">()</span>
   <span class="hl kwa">go</span> w<span class="hl opt">.</span><span class="hl kwd">run</span><span class="hl opt">()</span>
<span class="hl opt">}</span>

<span class="hl kwa">const</span> NThreads <span class="hl opt">=</span> <span class="hl num">503</span>

<span class="hl kwa">var</span> res <span class="hl opt">=</span> <span class="hl kwb">make</span><span class="hl opt">(</span><span class="hl kwa">chan</span> <span class="hl kwb">int</span><span class="hl opt">)</span>

<span class="hl kwa">func</span> <span class="hl kwd">main</span><span class="hl opt">() {</span>
   n <span class="hl opt">:=</span> <span class="hl num">1000</span>
   <span class="hl kwa">if</span> <span class="hl kwb">len</span><span class="hl opt">(</span>os<span class="hl opt">.</span>Args<span class="hl opt">) &gt;</span> <span class="hl num">1</span> <span class="hl opt">{</span>
      n<span class="hl opt">,</span> _ <span class="hl opt">=</span> strconv<span class="hl opt">.</span><span class="hl kwd">Atoi</span><span class="hl opt">(</span>os<span class="hl opt">.</span>Args<span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">])</span>
   <span class="hl opt">}</span>

   <span class="hl kwa">var</span> channels <span class="hl opt">[</span>NThreads<span class="hl opt">]</span>T
   <span class="hl kwa">for</span> i <span class="hl opt">:=</span> <span class="hl kwa">range</span> channels <span class="hl opt">{</span>
      channels<span class="hl opt">[</span>i<span class="hl opt">].</span><span class="hl kwd">Start</span><span class="hl opt">(</span>i<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">, &amp;</span>channels<span class="hl opt">[(</span>i<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)%</span>NThreads<span class="hl opt">])</span>
   <span class="hl opt">}</span>

   channels<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">].</span><span class="hl kwd">put</span><span class="hl opt">(</span>n<span class="hl opt">)</span>
   fmt<span class="hl opt">.</span><span class="hl kwd">Println</span><span class="hl opt">(&lt;-</span>res<span class="hl opt">)</span>
<span class="hl opt">}</span>
