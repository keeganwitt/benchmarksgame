<span class="hl opt">#</span>lang racket<span class="hl opt">/</span>base

<span class="hl slc">;;; The Computer Language Benchmarks Game</span>
<span class="hl slc">;;; http://benchmarksgame.alioth.debian.org/</span>

<span class="hl slc">;;; Derived from the Chicken variant by Sven Hartrumpf</span>
<span class="hl slc">;;; contributed by Matthew Flatt</span>

<span class="hl opt">(</span><span class="hl kwa">require</span> racket<span class="hl opt">/</span>cmdline<span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">struct</span> node <span class="hl opt">(</span><span class="hl kwa">left</span> val right<span class="hl opt">))</span>

<span class="hl slc">;; Instead of (define-struct leaf (val)):</span>
<span class="hl opt">(</span><span class="hl kwa">define</span> <span class="hl opt">(</span><span class="hl kwa">leaf</span> val<span class="hl opt">) (</span><span class="hl kwa">node</span> <span class="hl opt">#</span>f val <span class="hl opt">#</span>f<span class="hl opt">))</span>
<span class="hl opt">(</span><span class="hl kwa">define</span> <span class="hl opt">(</span><span class="hl kwa">leaf</span>? l<span class="hl opt">) (</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">node-left</span> l<span class="hl opt">)))</span>
<span class="hl opt">(</span><span class="hl kwa">define</span> <span class="hl opt">(</span><span class="hl kwa">leaf-val</span> l<span class="hl opt">) (</span><span class="hl kwa">node-val</span> l<span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">define</span> <span class="hl opt">(</span><span class="hl kwa">make</span> item d<span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(=</span> d <span class="hl num">0</span><span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">leaf</span> item<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">item2</span> <span class="hl opt">(*</span> item <span class="hl num">2</span><span class="hl opt">))</span>
            <span class="hl opt">(</span><span class="hl kwa">d2</span> <span class="hl opt">(</span><span class="hl kwa">-</span> d <span class="hl num">1</span><span class="hl opt">)))</span>
        <span class="hl opt">(</span><span class="hl kwa">node</span> <span class="hl opt">(</span><span class="hl kwa">make</span> <span class="hl opt">(</span><span class="hl kwa">-</span> item2 <span class="hl num">1</span><span class="hl opt">)</span> d2<span class="hl opt">)</span> 
              item 
              <span class="hl opt">(</span><span class="hl kwa">make</span> item2 d2<span class="hl opt">)))))</span>

<span class="hl opt">(</span><span class="hl kwa">define</span> <span class="hl opt">(</span><span class="hl kwa">check</span> t<span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">leaf</span>? t<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">leaf-val</span> t<span class="hl opt">)</span>
      <span class="hl opt">(+ (</span><span class="hl kwa">node-val</span> t<span class="hl opt">) (</span><span class="hl kwa">-</span> <span class="hl opt">(</span><span class="hl kwa">check</span> <span class="hl opt">(</span><span class="hl kwa">node-left</span> t<span class="hl opt">))</span> 
                         <span class="hl opt">(</span><span class="hl kwa">check</span> <span class="hl opt">(</span><span class="hl kwa">node-right</span> t<span class="hl opt">))))))</span>

<span class="hl opt">(</span><span class="hl kwa">define</span> <span class="hl opt">(</span><span class="hl kwa">main</span> n<span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">min-depth</span> <span class="hl num">4</span><span class="hl opt">)</span>
         <span class="hl opt">(</span><span class="hl kwa">max-depth</span> <span class="hl opt">(</span><span class="hl kwa">max</span> <span class="hl opt">(+</span> min-depth <span class="hl num">2</span><span class="hl opt">)</span> n<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">stretch-depth</span> <span class="hl opt">(+</span> max-depth <span class="hl num">1</span><span class="hl opt">)))</span>
      <span class="hl opt">(</span><span class="hl kwa">printf</span> <span class="hl str">&quot;stretch tree of depth ~a</span><span class="hl esc">\t</span> <span class="hl str">check: ~a</span><span class="hl esc">\n</span><span class="hl str">&quot;</span>
              stretch-depth
              <span class="hl opt">(</span><span class="hl kwa">check</span> <span class="hl opt">(</span><span class="hl kwa">make</span> <span class="hl num">0</span> stretch-depth<span class="hl opt">))))</span>
    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">long-lived-tree</span> <span class="hl opt">(</span><span class="hl kwa">make</span> <span class="hl num">0</span> max-depth<span class="hl opt">)))</span>
      <span class="hl opt">(</span><span class="hl kwa">for</span> <span class="hl opt">((</span><span class="hl kwa">d</span> <span class="hl opt">(</span><span class="hl kwa">in-range</span> <span class="hl num">4</span> <span class="hl opt">(</span><span class="hl kwa">add1</span> max-depth<span class="hl opt">)</span> <span class="hl num">2</span><span class="hl opt">)))</span>
        <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">iterations</span> <span class="hl opt">(</span><span class="hl kwa">arithmetic-shift</span> <span class="hl num">1</span> <span class="hl opt">(+ (</span><span class="hl kwa">-</span> max-depth d<span class="hl opt">)</span> min-depth<span class="hl opt">))))</span>
          <span class="hl opt">(</span><span class="hl kwa">printf</span> <span class="hl str">&quot;~a</span><span class="hl esc">\t</span> <span class="hl str">trees of depth ~a</span><span class="hl esc">\t</span> <span class="hl str">check: ~a</span><span class="hl esc">\n</span><span class="hl str">&quot;</span>
                  <span class="hl opt">(*</span> <span class="hl num">2</span> iterations<span class="hl opt">)</span>
                  d
                  <span class="hl opt">(</span><span class="hl kwa">for</span><span class="hl opt">/</span>fold <span class="hl opt">([</span>c <span class="hl num">0</span><span class="hl opt">])</span>
                            <span class="hl opt">([</span>i <span class="hl opt">(</span><span class="hl kwa">in-range</span> iterations<span class="hl opt">)])</span>
                    <span class="hl opt">(+</span> c 
                       <span class="hl opt">(</span><span class="hl kwa">check</span> <span class="hl opt">(</span><span class="hl kwa">make</span> i d<span class="hl opt">))</span> 
                       <span class="hl opt">(</span><span class="hl kwa">check</span> <span class="hl opt">(</span><span class="hl kwa">make</span> <span class="hl opt">(</span><span class="hl kwa">-</span> i<span class="hl opt">)</span> d<span class="hl opt">)))))))</span>
      <span class="hl opt">(</span><span class="hl kwa">printf</span> <span class="hl str">&quot;long lived tree of depth ~a</span><span class="hl esc">\t</span> <span class="hl str">check: ~a</span><span class="hl esc">\n</span><span class="hl str">&quot;</span>
              max-depth
              <span class="hl opt">(</span><span class="hl kwa">check</span> long-lived-tree<span class="hl opt">)))))</span>

<span class="hl opt">(</span><span class="hl kwa">command-line</span> <span class="hl opt">#:</span>args <span class="hl opt">(</span><span class="hl kwa">n</span><span class="hl opt">)</span> 
              <span class="hl opt">(</span><span class="hl kwa">main</span> <span class="hl opt">(</span><span class="hl kwa">string-</span><span class="hl opt">&gt;</span>number n<span class="hl opt">)))</span>
