<span class="hl com">/*     </span>
<span class="hl com">The Computer Language Shootout   </span>
<span class="hl com">http://shootout.alioth.debian.org/  </span>
<span class="hl com">Contributed by Jesse Millikan    </span>
<span class="hl com">*/</span>

<span class="hl slc">// Return hash t with frequency in &quot;n&quot;</span>
<span class="hl kwa">function</span> <span class="hl kwd">frequency</span><span class="hl sym">(</span>seq<span class="hl sym">,</span> length<span class="hl sym">){</span>
 <span class="hl kwa">var</span> m<span class="hl sym">,</span> i<span class="hl sym">,</span> t <span class="hl sym">= {},</span> n <span class="hl sym">=</span> seq<span class="hl sym">.</span>length <span class="hl sym">-</span> length <span class="hl sym">+</span> <span class="hl num">1</span>

 <span class="hl kwa">for</span><span class="hl sym">(</span>i <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> i <span class="hl sym">&lt;</span> n<span class="hl sym">;</span> i<span class="hl sym">++){</span>
  m <span class="hl sym">=</span> seq<span class="hl sym">.</span><span class="hl kwd">substr</span><span class="hl sym">(</span>i<span class="hl sym">,</span> length<span class="hl sym">)</span>
  t<span class="hl sym">[</span>m<span class="hl sym">] = (</span>t<span class="hl sym">[</span>m<span class="hl sym">] ||</span> <span class="hl num">0</span><span class="hl sym">) +</span> <span class="hl num">1</span>
 <span class="hl sym">}</span>

 t<span class="hl sym">.</span>n <span class="hl sym">=</span> n
 <span class="hl kwa">return</span> t
<span class="hl sym">}</span>

<span class="hl kwa">function</span> <span class="hl kwd">sort</span><span class="hl sym">(</span>seq<span class="hl sym">,</span> length<span class="hl sym">){</span>
 <span class="hl kwa">var</span> f <span class="hl sym">=</span> <span class="hl kwd">frequency</span><span class="hl sym">(</span>seq<span class="hl sym">,</span> length<span class="hl sym">),</span> keys <span class="hl sym">= [],</span> k<span class="hl sym">,</span> i
 
 <span class="hl slc">// Put all keys in key array in reverse</span>
 <span class="hl kwa">for</span><span class="hl sym">(</span>k <span class="hl kwa">in</span> f<span class="hl sym">)</span>
  <span class="hl kwa">if</span><span class="hl sym">(</span>k <span class="hl sym">!=</span> <span class="hl str">'n'</span><span class="hl sym">)</span> keys<span class="hl sym">.</span><span class="hl kwd">unshift</span><span class="hl sym">(</span>k<span class="hl sym">)</span>

 keys<span class="hl sym">.</span><span class="hl kwd">sort</span><span class="hl sym">(</span><span class="hl kwa">function</span><span class="hl sym">(</span>a<span class="hl sym">,</span> b<span class="hl sym">){</span> <span class="hl kwa">return</span> f<span class="hl sym">[</span>b<span class="hl sym">] -</span> f<span class="hl sym">[</span>a<span class="hl sym">] })</span>

 <span class="hl kwa">for</span><span class="hl sym">(</span>i <span class="hl kwa">in</span> keys<span class="hl sym">)</span>
  <span class="hl kwd">print</span><span class="hl sym">(</span>keys<span class="hl sym">[</span>i<span class="hl sym">].</span><span class="hl kwd">toUpperCase</span><span class="hl sym">(), (</span>f<span class="hl sym">[</span>keys<span class="hl sym">[</span>i<span class="hl sym">]] *</span> <span class="hl num">100</span> <span class="hl sym">/</span> f<span class="hl sym">.</span>n<span class="hl sym">).</span><span class="hl kwd">toFixed</span><span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">))</span>

 <span class="hl kwd">print</span><span class="hl sym">()</span>
<span class="hl sym">}</span>

<span class="hl kwa">function</span> <span class="hl kwd">find</span><span class="hl sym">(</span>seq<span class="hl sym">,</span> s<span class="hl sym">){</span>
 <span class="hl kwa">var</span> f <span class="hl sym">=</span> <span class="hl kwd">frequency</span><span class="hl sym">(</span>seq<span class="hl sym">,</span> s<span class="hl sym">.</span>length<span class="hl sym">)</span>
 <span class="hl kwd">print</span><span class="hl sym">((</span>f<span class="hl sym">[</span>s<span class="hl sym">] ||</span> <span class="hl num">0</span><span class="hl sym">) +</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">&quot;</span> <span class="hl sym">+</span> s<span class="hl sym">.</span><span class="hl kwd">toUpperCase</span><span class="hl sym">())</span>
<span class="hl sym">}</span>

<span class="hl kwa">var</span> seq<span class="hl sym">=</span><span class="hl str">&quot;&quot;</span><span class="hl sym">,</span> l<span class="hl sym">,</span> others <span class="hl sym">= [</span><span class="hl str">&quot;ggt&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;ggta&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;ggtatt&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;ggtattttaatt&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;ggtattttaatttatagt&quot;</span><span class="hl sym">]</span>

<span class="hl kwa">while</span><span class="hl sym">(!</span><span class="hl kwd">readline</span><span class="hl sym">().</span><span class="hl kwd">match</span><span class="hl sym">(/</span>^<span class="hl sym">&gt;</span>THREE<span class="hl sym">/));</span> <span class="hl slc">// no body</span>

<span class="hl kwa">while</span><span class="hl sym">((</span>l <span class="hl sym">=</span> <span class="hl kwd">readline</span><span class="hl sym">()) &amp;&amp; !</span>l<span class="hl sym">.</span><span class="hl kwd">match</span><span class="hl sym">(/</span>^<span class="hl sym">&gt;/))</span>
 seq <span class="hl sym">+=</span> l

<span class="hl kwd">sort</span><span class="hl sym">(</span>seq<span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">)</span>
<span class="hl kwd">sort</span><span class="hl sym">(</span>seq<span class="hl sym">,</span> <span class="hl num">2</span><span class="hl sym">)</span>

<span class="hl kwa">for</span><span class="hl sym">(</span>i <span class="hl kwa">in</span> others<span class="hl sym">)</span>
 <span class="hl kwd">find</span><span class="hl sym">(</span>seq<span class="hl sym">,</span> others<span class="hl sym">[</span>i<span class="hl sym">])</span>

