<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com"> * http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"> *</span>
<span class="hl com"> *  contributed by Mr Ledrug</span>
<span class="hl com"> */</span>

<span class="hl ppc">#include &lt;stdio.h&gt;</span>
<span class="hl ppc">#include &lt;string.h&gt;</span>
<span class="hl ppc">#include &lt;stdlib.h&gt;</span>
<span class="hl ppc">#include &lt;unistd.h&gt;</span>

<span class="hl kwc">typedef</span> <span class="hl kwb">struct</span> <span class="hl opt">{</span>
   <span class="hl kwb">float</span> p<span class="hl opt">;</span>
   <span class="hl kwb">char</span> c<span class="hl opt">;</span>
<span class="hl opt">}</span> amino<span class="hl opt">;</span>

amino iub<span class="hl opt">[] = {</span>
   <span class="hl opt">{</span> <span class="hl num">0.27</span><span class="hl opt">,</span> <span class="hl str">'a'</span> <span class="hl opt">}, {</span> <span class="hl num">0.12</span><span class="hl opt">,</span> <span class="hl str">'c'</span> <span class="hl opt">}, {</span> <span class="hl num">0.12</span><span class="hl opt">,</span> <span class="hl str">'g'</span> <span class="hl opt">},</span>
   <span class="hl opt">{</span> <span class="hl num">0.27</span><span class="hl opt">,</span> <span class="hl str">'t'</span> <span class="hl opt">}, {</span> <span class="hl num">0.02</span><span class="hl opt">,</span> <span class="hl str">'B'</span> <span class="hl opt">}, {</span> <span class="hl num">0.02</span><span class="hl opt">,</span> <span class="hl str">'D'</span> <span class="hl opt">},</span>
   <span class="hl opt">{</span> <span class="hl num">0.02</span><span class="hl opt">,</span> <span class="hl str">'H'</span> <span class="hl opt">}, {</span> <span class="hl num">0.02</span><span class="hl opt">,</span> <span class="hl str">'K'</span> <span class="hl opt">}, {</span> <span class="hl num">0.02</span><span class="hl opt">,</span> <span class="hl str">'M'</span> <span class="hl opt">},</span>
   <span class="hl opt">{</span> <span class="hl num">0.02</span><span class="hl opt">,</span> <span class="hl str">'N'</span> <span class="hl opt">}, {</span> <span class="hl num">0.02</span><span class="hl opt">,</span> <span class="hl str">'R'</span> <span class="hl opt">}, {</span> <span class="hl num">0.02</span><span class="hl opt">,</span> <span class="hl str">'S'</span> <span class="hl opt">},</span>
   <span class="hl opt">{</span> <span class="hl num">0.02</span><span class="hl opt">,</span> <span class="hl str">'V'</span> <span class="hl opt">}, {</span> <span class="hl num">0.02</span><span class="hl opt">,</span> <span class="hl str">'W'</span> <span class="hl opt">}, {</span> <span class="hl num">0.02</span><span class="hl opt">,</span> <span class="hl str">'Y'</span> <span class="hl opt">},</span>
   <span class="hl opt">{</span> <span class="hl num">0</span><span class="hl opt">,</span> <span class="hl num">0</span> <span class="hl opt">}</span>
<span class="hl opt">};</span>

amino homosapiens<span class="hl opt">[] = {</span>
   <span class="hl opt">{</span><span class="hl num">0.3029549426680</span><span class="hl opt">,</span> <span class="hl str">'a'</span><span class="hl opt">},</span>
   <span class="hl opt">{</span><span class="hl num">0.1979883004921</span><span class="hl opt">,</span> <span class="hl str">'c'</span><span class="hl opt">},</span>
   <span class="hl opt">{</span><span class="hl num">0.1975473066391</span><span class="hl opt">,</span> <span class="hl str">'g'</span><span class="hl opt">},</span>
   <span class="hl opt">{</span><span class="hl num">0.3015094502008</span><span class="hl opt">,</span> <span class="hl str">'t'</span><span class="hl opt">},</span>
   <span class="hl opt">{</span><span class="hl num">0</span><span class="hl opt">,</span> <span class="hl num">0</span><span class="hl opt">}</span>
<span class="hl opt">};</span>

<span class="hl ppc">#define RMAX 139968U</span>
<span class="hl ppc">#define RA 3877U</span>
<span class="hl ppc">#define RC 29573U</span>
<span class="hl ppc">#define WIDTH 60</span>
<span class="hl ppc">#define LENGTH(a) (sizeof(a)/sizeof(a[0]))</span>

<span class="hl kwc">inline</span> <span class="hl kwb">void</span> <span class="hl kwd">str_write</span><span class="hl opt">(</span><span class="hl kwb">char</span> <span class="hl opt">*</span>s<span class="hl opt">) {</span>
   <span class="hl kwd">write</span><span class="hl opt">(</span><span class="hl kwd">fileno</span><span class="hl opt">(</span>stdout<span class="hl opt">),</span> s<span class="hl opt">,</span> <span class="hl kwd">strlen</span><span class="hl opt">(</span>s<span class="hl opt">));</span>
<span class="hl opt">}</span>

<span class="hl kwb">void</span> <span class="hl kwd">str_repeat</span><span class="hl opt">(</span><span class="hl kwb">char</span> <span class="hl opt">*</span>s<span class="hl opt">,</span> <span class="hl kwb">int</span> outlen<span class="hl opt">) {</span>
   <span class="hl kwb">int</span> len <span class="hl opt">=</span> <span class="hl kwd">strlen</span><span class="hl opt">(</span>s<span class="hl opt">) * (</span><span class="hl num">1</span> <span class="hl opt">+</span> WIDTH<span class="hl opt">);</span>
   outlen <span class="hl opt">+=</span> outlen <span class="hl opt">/</span> WIDTH<span class="hl opt">;</span>

   <span class="hl kwb">char</span> <span class="hl opt">*</span>ss <span class="hl opt">=</span> s<span class="hl opt">;</span>
   <span class="hl kwb">char</span> <span class="hl opt">*</span>buf <span class="hl opt">=</span> <span class="hl kwd">malloc</span><span class="hl opt">(</span>len<span class="hl opt">);</span>
   <span class="hl kwb">int</span> pos <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>

   <span class="hl kwa">while</span> <span class="hl opt">(</span>pos <span class="hl opt">&lt;</span> len<span class="hl opt">) {</span>
      <span class="hl kwa">if</span> <span class="hl opt">(!*</span>ss<span class="hl opt">)</span> ss <span class="hl opt">=</span> s<span class="hl opt">;</span>
      buf<span class="hl opt">[</span>pos<span class="hl opt">++] = *</span>ss<span class="hl opt">++;</span>
      <span class="hl kwa">if</span> <span class="hl opt">(</span>pos <span class="hl opt">&gt;=</span> len<span class="hl opt">)</span> <span class="hl kwa">break</span><span class="hl opt">;</span>
      <span class="hl kwa">if</span> <span class="hl opt">(</span>pos <span class="hl opt">% (</span>WIDTH <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">) ==</span> WIDTH<span class="hl opt">)</span>
         buf<span class="hl opt">[</span>pos<span class="hl opt">++] =</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">;</span>
   <span class="hl opt">}</span>

   <span class="hl kwb">int</span> fd <span class="hl opt">=</span> <span class="hl kwd">fileno</span><span class="hl opt">(</span>stdout<span class="hl opt">);</span>
   <span class="hl kwb">int</span> l <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
   <span class="hl kwa">while</span> <span class="hl opt">(</span>outlen <span class="hl opt">&gt;</span> <span class="hl num">0</span><span class="hl opt">) {</span>
      l <span class="hl opt">=</span> outlen <span class="hl opt">&gt;</span> len ? len <span class="hl opt">:</span> outlen<span class="hl opt">;</span>
      <span class="hl kwd">write</span><span class="hl opt">(</span>fd<span class="hl opt">,</span> buf<span class="hl opt">,</span> l<span class="hl opt">);</span>
      outlen <span class="hl opt">-=</span> len<span class="hl opt">;</span>
   <span class="hl opt">}</span>
   <span class="hl kwa">if</span> <span class="hl opt">(</span>buf<span class="hl opt">[</span>l<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">] !=</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">)</span> <span class="hl kwd">str_write</span><span class="hl opt">(</span><span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">);</span>

   <span class="hl kwd">free</span><span class="hl opt">(</span>buf<span class="hl opt">);</span>
<span class="hl opt">}</span>

<span class="hl kwb">static char</span> <span class="hl opt">*</span>alu <span class="hl opt">=</span>
   <span class="hl str">&quot;GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG&quot;</span>
   <span class="hl str">&quot;GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA&quot;</span>
   <span class="hl str">&quot;CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT&quot;</span>
   <span class="hl str">&quot;ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA&quot;</span>
   <span class="hl str">&quot;GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG&quot;</span>
   <span class="hl str">&quot;AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC&quot;</span>
   <span class="hl str">&quot;AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA&quot;</span><span class="hl opt">;</span>

<span class="hl kwc">inline</span> <span class="hl kwb">unsigned int</span> <span class="hl kwd">rnd</span><span class="hl opt">(</span><span class="hl kwb">void</span><span class="hl opt">) {</span>
   <span class="hl kwb">static unsigned</span> rseed <span class="hl opt">=</span> <span class="hl num">42</span><span class="hl opt">;</span>
   <span class="hl kwa">return</span> rseed <span class="hl opt">= (</span>rseed <span class="hl opt">*</span> RA <span class="hl opt">+</span> RC<span class="hl opt">) %</span> RMAX<span class="hl opt">;</span>
<span class="hl opt">}</span>

<span class="hl kwb">char</span> lookup<span class="hl opt">[</span>RMAX<span class="hl opt">];</span>
<span class="hl kwb">void</span> <span class="hl kwd">rand_fasta</span><span class="hl opt">(</span>amino <span class="hl opt">*</span>s<span class="hl opt">,</span> <span class="hl kwb">size_t</span> outlen<span class="hl opt">) {</span>
   <span class="hl kwb">int</span> fd <span class="hl opt">=</span> <span class="hl kwd">fileno</span><span class="hl opt">(</span>stdout<span class="hl opt">);</span>
   <span class="hl kwb">char</span> buf<span class="hl opt">[</span>WIDTH<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">];</span>

   <span class="hl kwb">int</span> i<span class="hl opt">,</span> j<span class="hl opt">,</span> k<span class="hl opt">;</span>
   <span class="hl kwb">float</span> sum <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
   <span class="hl kwa">for</span> <span class="hl opt">(</span>i <span class="hl opt">=</span> j <span class="hl opt">=</span> k <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> s<span class="hl opt">[</span>i<span class="hl opt">].</span>p <span class="hl opt">&amp;&amp;</span> k <span class="hl opt">&lt;</span> RMAX<span class="hl opt">;</span> i<span class="hl opt">++) {</span>
      <span class="hl kwa">if</span> <span class="hl opt">(</span>s<span class="hl opt">[</span>i<span class="hl opt">].</span>p<span class="hl opt">) {</span>
         sum <span class="hl opt">+=</span> s<span class="hl opt">[</span>i<span class="hl opt">].</span>p<span class="hl opt">;</span>
         k <span class="hl opt">=</span> RMAX <span class="hl opt">*</span> sum <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">;</span>
      <span class="hl opt">}</span>
      <span class="hl kwa">else</span>
         k <span class="hl opt">=</span> RMAX<span class="hl opt">;</span>
      <span class="hl kwa">if</span> <span class="hl opt">(</span>k <span class="hl opt">&gt;</span> RMAX<span class="hl opt">)</span> k <span class="hl opt">=</span> RMAX<span class="hl opt">;</span>
      <span class="hl kwd">memset</span><span class="hl opt">(</span>lookup <span class="hl opt">+</span> j<span class="hl opt">,</span> s<span class="hl opt">[</span>i<span class="hl opt">].</span>c<span class="hl opt">,</span> k <span class="hl opt">-</span> j<span class="hl opt">);</span>
      j <span class="hl opt">=</span> k<span class="hl opt">;</span>
   <span class="hl opt">}</span>

   i <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
   buf<span class="hl opt">[</span>WIDTH<span class="hl opt">] =</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">;</span>
   <span class="hl kwa">while</span> <span class="hl opt">(</span>outlen<span class="hl opt">--) {</span>
      buf<span class="hl opt">[</span>i<span class="hl opt">++] =</span> lookup<span class="hl opt">[</span><span class="hl kwd">rnd</span><span class="hl opt">()];</span>
      <span class="hl kwa">if</span> <span class="hl opt">(</span>i <span class="hl opt">==</span> WIDTH<span class="hl opt">) {</span>
         <span class="hl kwd">write</span><span class="hl opt">(</span>fd<span class="hl opt">,</span> buf<span class="hl opt">,</span> WIDTH <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">);</span>
         i <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
      <span class="hl opt">}</span>
   <span class="hl opt">}</span>
   <span class="hl kwa">if</span> <span class="hl opt">(</span>i<span class="hl opt">) {</span>
      buf<span class="hl opt">[</span>i<span class="hl opt">] =</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">;</span>
      <span class="hl kwd">write</span><span class="hl opt">(</span>fd<span class="hl opt">,</span> buf<span class="hl opt">,</span> i <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">);</span>
   <span class="hl opt">}</span>
<span class="hl opt">}</span>

<span class="hl kwb">int</span> <span class="hl kwd">main</span><span class="hl opt">(</span><span class="hl kwb">int</span> argc<span class="hl opt">,</span> <span class="hl kwb">char</span> <span class="hl opt">**</span>argv<span class="hl opt">) {</span>
   <span class="hl kwb">int</span> n<span class="hl opt">;</span>
   <span class="hl kwa">if</span> <span class="hl opt">(</span>argc <span class="hl opt">&lt;</span> <span class="hl num">2</span> <span class="hl opt">|| (</span>n <span class="hl opt">=</span> <span class="hl kwd">atoi</span><span class="hl opt">(</span>argv<span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">])) &lt;=</span> <span class="hl num">0</span><span class="hl opt">) {</span>
      <span class="hl kwd">printf</span><span class="hl opt">(</span><span class="hl str">&quot;usage: %s length</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">,</span> argv<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">]);</span>
      <span class="hl kwa">return</span> <span class="hl num">0</span><span class="hl opt">;</span>
   <span class="hl opt">}</span>

   <span class="hl kwd">str_write</span><span class="hl opt">(</span><span class="hl str">&quot;&gt;ONE Homo sapiens alu</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">);</span>
   <span class="hl kwd">str_repeat</span><span class="hl opt">(</span>alu<span class="hl opt">,</span> n <span class="hl opt">*</span> <span class="hl num">2</span><span class="hl opt">);</span>

   <span class="hl kwd">str_write</span><span class="hl opt">(</span><span class="hl str">&quot;&gt;TWO IUB ambiguity codes</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">);</span>
   <span class="hl kwd">rand_fasta</span><span class="hl opt">(</span>iub<span class="hl opt">,</span> n <span class="hl opt">*</span> <span class="hl num">3</span><span class="hl opt">);</span>

   <span class="hl kwd">str_write</span><span class="hl opt">(</span><span class="hl str">&quot;&gt;THREE Homo sapiens frequency</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">);</span>
   <span class="hl kwd">rand_fasta</span><span class="hl opt">(</span>homosapiens<span class="hl opt">,</span> n <span class="hl opt">*</span> <span class="hl num">5</span><span class="hl opt">);</span>

   <span class="hl kwa">return</span> <span class="hl num">0</span><span class="hl opt">;</span>
<span class="hl opt">}</span>
