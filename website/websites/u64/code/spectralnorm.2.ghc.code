<span class="hl slc">--</span>
<span class="hl slc">-- The Computer Language Benchmarks Game</span>
<span class="hl slc">-- http://benchmarksgame.alioth.debian.org/</span>
<span class="hl slc">-- Contributed by Greg Buchholz </span>

<span class="hl kwd">import</span> Data<span class="hl opt">.</span><span class="hl kwb">Array</span><span class="hl opt">.</span>Base
<span class="hl kwd">import</span> System<span class="hl opt">.</span>Environment
<span class="hl kwd">import</span> Numeric

main <span class="hl opt">=</span> <span class="hl kwd">do</span> 
        <span class="hl opt">[</span>arg<span class="hl opt">] &lt;-</span> <span class="hl kwc">getArgs</span>
        <span class="hl kwd">let</span> n <span class="hl opt">= (</span><span class="hl kwc">read</span> arg<span class="hl opt">) -</span> <span class="hl num">1</span> 
        <span class="hl kwd">let</span> <span class="hl kwc">init</span> <span class="hl opt">=</span> <span class="hl kwc">listArray</span> <span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">,</span>n<span class="hl opt">) (</span><span class="hl kwc">repeat</span> <span class="hl num">1.0</span><span class="hl opt">)</span>
        <span class="hl kwd">let</span> <span class="hl opt">(</span>v<span class="hl opt">:</span>u<span class="hl opt">:</span>rest<span class="hl opt">) =</span> <span class="hl kwc">drop</span> <span class="hl num">19</span> <span class="hl opt">$</span> <span class="hl kwc">iterate</span> <span class="hl opt">(</span>eval_AtA_times_u n<span class="hl opt">)</span> <span class="hl kwc">init</span>
        <span class="hl kwd">let</span> vBv <span class="hl opt">=</span> <span class="hl kwa">sum</span> <span class="hl opt">[(</span>u<span class="hl opt">!</span>i<span class="hl opt">)*(</span>v<span class="hl opt">!</span>i<span class="hl opt">)</span> |i<span class="hl opt">&lt;-[</span><span class="hl num">0</span><span class="hl opt">..</span>n<span class="hl opt">]]</span>
        <span class="hl kwd">let</span> vv  <span class="hl opt">=</span> <span class="hl kwa">sum</span> <span class="hl opt">[(</span>v<span class="hl opt">!</span>i<span class="hl opt">)*(</span>v<span class="hl opt">!</span>i<span class="hl opt">)</span> |i<span class="hl opt">&lt;-[</span><span class="hl num">0</span><span class="hl opt">..</span>n<span class="hl opt">]]</span>
        <span class="hl kwc">putStrLn</span> <span class="hl opt">$</span> <span class="hl kwc">showFFloat</span> <span class="hl opt">(</span>Just <span class="hl num">9</span><span class="hl opt">) (</span><span class="hl kwc">sqrt</span> <span class="hl opt">(</span>vBv<span class="hl opt">/</span>vv<span class="hl opt">))</span> <span class="hl str">&quot;&quot;</span>

eval_AtA_times_u n u <span class="hl opt">=</span> eval_At_times_u n v
    <span class="hl kwd">where</span> v <span class="hl opt">=</span> eval_A_times_u n u

eval_A x y <span class="hl opt">=</span> <span class="hl num">1.0</span><span class="hl opt">/((</span>i<span class="hl opt">+</span>j<span class="hl opt">)*(</span>i<span class="hl opt">+</span>j<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)/</span><span class="hl num">2</span><span class="hl opt">+</span>i<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span>
    <span class="hl kwd">where</span> i <span class="hl opt">=</span> <span class="hl kwc">fromIntegral</span> x
          j <span class="hl opt">=</span> <span class="hl kwc">fromIntegral</span> y

eval_A_times_u <span class="hl opt">::</span> <span class="hl kwb">Int</span> <span class="hl opt">-&gt;</span> UArray <span class="hl kwb">Int Double</span> <span class="hl opt">-&gt;</span> UArray <span class="hl kwb">Int Double</span>
eval_A_times_u n u <span class="hl opt">=</span> unsafeAccumArray <span class="hl opt">(+)</span> <span class="hl num">0</span> <span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">,</span>n<span class="hl opt">)</span> 
                     <span class="hl opt">[(</span>i<span class="hl opt">,(</span>eval_A i j<span class="hl opt">) *</span> u<span class="hl opt">!</span>j<span class="hl opt">)</span>|i<span class="hl opt">&lt;-[</span><span class="hl num">0</span><span class="hl opt">..</span>n<span class="hl opt">],</span> j<span class="hl opt">&lt;-[</span><span class="hl num">0</span><span class="hl opt">..</span>n<span class="hl opt">]]</span>
   
eval_At_times_u <span class="hl opt">::</span> <span class="hl kwb">Int</span> <span class="hl opt">-&gt;</span> UArray <span class="hl kwb">Int Double</span> <span class="hl opt">-&gt;</span> UArray <span class="hl kwb">Int Double</span>
eval_At_times_u n u <span class="hl opt">=</span> unsafeAccumArray <span class="hl opt">(+)</span> <span class="hl num">0</span> <span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">,</span>n<span class="hl opt">)</span> 
                      <span class="hl opt">[(</span>i<span class="hl opt">,(</span>eval_A j i<span class="hl opt">) *</span> u<span class="hl opt">!</span>j<span class="hl opt">)</span>|i<span class="hl opt">&lt;-[</span><span class="hl num">0</span><span class="hl opt">..</span>n<span class="hl opt">],</span> j<span class="hl opt">&lt;-[</span><span class="hl num">0</span><span class="hl opt">..</span>n<span class="hl opt">]]</span>
