<span class="hl slc">// The Great Computer Language Shootout</span>
<span class="hl slc">// http://shootout.alioth.debian.org/ </span>
<span class="hl slc">//</span>
<span class="hl slc">// contributed by Diederik van Arkel</span>

<span class="hl kwa">module</span> fasta

<span class="hl kwa">import</span> StdEnv<span class="hl opt">,</span> LanguageShootout<span class="hl opt">,</span> StdStrictLists<span class="hl opt">,</span> StdOverloadedList

Start world
	<span class="hl opt">#</span> n				<span class="hl opt">=</span> argi
	<span class="hl opt"># (</span>io<span class="hl opt">,</span>world<span class="hl opt">)	=</span> stdio world
	<span class="hl opt">#</span> rng			<span class="hl opt">=</span> makeRandomGenerator <span class="hl num">42</span>
	<span class="hl opt">#</span> io			<span class="hl opt">=</span> makeRepeatFasta <span class="hl str">&quot;ONE&quot;</span> <span class="hl str">&quot;Homo sapiens alu&quot;</span> <span class="hl opt">(</span>n<span class="hl opt">*</span><span class="hl num">2</span><span class="hl opt">)</span> io
	<span class="hl opt"># (</span>rng<span class="hl opt">,</span>io<span class="hl opt">)		=</span> makeRandomFasta <span class="hl str">&quot;TWO&quot;</span> <span class="hl str">&quot;IUB ambiguity codes&quot;</span> iub <span class="hl opt">(</span>n<span class="hl opt">*</span><span class="hl num">3</span><span class="hl opt">)</span> rng io
	<span class="hl opt"># (</span>rng<span class="hl opt">,</span>io<span class="hl opt">)		=</span> makeRandomFasta <span class="hl str">&quot;THREE&quot;</span> <span class="hl str">&quot;Homo sapiens frequency&quot;</span> homosapiens <span class="hl opt">(</span>n<span class="hl opt">*</span><span class="hl num">5</span><span class="hl opt">)</span> rng io
	<span class="hl opt"># (</span>err<span class="hl opt">,</span>world<span class="hl opt">)	=</span> fclose io world
	<span class="hl opt">=</span> world

alu <span class="hl opt">=:</span>
	<span class="hl str">&quot;GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG&quot;</span> <span class="hl opt">+++.</span>
	<span class="hl str">&quot;GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA&quot;</span> <span class="hl opt">+++.</span>
	<span class="hl str">&quot;CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT&quot;</span> <span class="hl opt">+++.</span>
	<span class="hl str">&quot;ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA&quot;</span> <span class="hl opt">+++.</span>
	<span class="hl str">&quot;GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG&quot;</span> <span class="hl opt">+++.</span>
	<span class="hl str">&quot;AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC&quot;</span> <span class="hl opt">+++.</span>
	<span class="hl str">&quot;AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA&quot;</span>

<span class="hl opt">::</span> IUB <span class="hl opt">=</span>
	<span class="hl opt">{</span> c		<span class="hl opt">:: !</span><span class="hl kwb">Char</span>
	<span class="hl opt">,</span> p		<span class="hl opt">:: !</span><span class="hl kwb">Real</span>
	<span class="hl opt">}</span>

<span class="hl opt">::</span> Table	<span class="hl opt">:== {!</span>IUB<span class="hl opt">}</span>

makeCumulative <span class="hl opt">:: !*</span>Table <span class="hl opt">-&gt; .</span>Table
makeCumulative table
	<span class="hl opt">#!</span> maxi	<span class="hl opt">=</span> size table
	<span class="hl opt">=</span> update_c <span class="hl num">0.0 0</span> maxi table
<span class="hl kwa">where</span>
	update_c prob i maxi table
		| i <span class="hl opt">&gt;=</span> maxi
			<span class="hl opt">=</span> table
		<span class="hl opt">#!</span> tbl		<span class="hl opt">=</span> table<span class="hl opt">.[</span>i<span class="hl opt">]</span>
		<span class="hl opt">#!</span> prob		<span class="hl opt">=</span> prob <span class="hl opt">+</span> tbl<span class="hl opt">.</span>p
		<span class="hl opt">#!</span> table	<span class="hl opt">= {</span>table <span class="hl opt">&amp; [</span>i<span class="hl opt">] = {</span>tbl <span class="hl opt">&amp;</span> p <span class="hl opt">=</span> prob<span class="hl opt">}}</span>
		<span class="hl opt">=</span> update_c prob <span class="hl opt">(</span>i<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span> maxi table

iub <span class="hl opt">=</span>
	<span class="hl opt">{{</span> c <span class="hl opt">= '</span>a<span class="hl opt">',</span> p <span class="hl opt">=</span> <span class="hl num">0.27</span> <span class="hl opt">}</span>
	<span class="hl opt">,{</span> c <span class="hl opt">= '</span>c<span class="hl opt">',</span> p <span class="hl opt">=</span> <span class="hl num">0.12</span> <span class="hl opt">}</span>
	<span class="hl opt">,{</span> c <span class="hl opt">= '</span>g<span class="hl opt">',</span> p <span class="hl opt">=</span> <span class="hl num">0.12</span> <span class="hl opt">}</span>
	<span class="hl opt">,{</span> c <span class="hl opt">= '</span>t<span class="hl opt">',</span> p <span class="hl opt">=</span> <span class="hl num">0.27</span> <span class="hl opt">}</span>
	<span class="hl opt">,{</span> c <span class="hl opt">= '</span>B<span class="hl opt">',</span> p <span class="hl opt">=</span> <span class="hl num">0.02</span> <span class="hl opt">}</span>
	<span class="hl opt">,{</span> c <span class="hl opt">= '</span>D<span class="hl opt">',</span> p <span class="hl opt">=</span> <span class="hl num">0.02</span> <span class="hl opt">}</span>
	<span class="hl opt">,{</span> c <span class="hl opt">= '</span>H<span class="hl opt">',</span> p <span class="hl opt">=</span> <span class="hl num">0.02</span> <span class="hl opt">}</span>
	<span class="hl opt">,{</span> c <span class="hl opt">= '</span>K<span class="hl opt">',</span> p <span class="hl opt">=</span> <span class="hl num">0.02</span> <span class="hl opt">}</span>
	<span class="hl opt">,{</span> c <span class="hl opt">= '</span>M<span class="hl opt">',</span> p <span class="hl opt">=</span> <span class="hl num">0.02</span> <span class="hl opt">}</span>
	<span class="hl opt">,{</span> c <span class="hl opt">= '</span>N<span class="hl opt">',</span> p <span class="hl opt">=</span> <span class="hl num">0.02</span> <span class="hl opt">}</span>
	<span class="hl opt">,{</span> c <span class="hl opt">= '</span>R<span class="hl opt">',</span> p <span class="hl opt">=</span> <span class="hl num">0.02</span> <span class="hl opt">}</span>
	<span class="hl opt">,{</span> c <span class="hl opt">= '</span>S<span class="hl opt">',</span> p <span class="hl opt">=</span> <span class="hl num">0.02</span> <span class="hl opt">}</span>
	<span class="hl opt">,{</span> c <span class="hl opt">= '</span>V<span class="hl opt">',</span> p <span class="hl opt">=</span> <span class="hl num">0.02</span> <span class="hl opt">}</span>
	<span class="hl opt">,{</span> c <span class="hl opt">= '</span>W<span class="hl opt">',</span> p <span class="hl opt">=</span> <span class="hl num">0.02</span> <span class="hl opt">}</span>
	<span class="hl opt">,{</span> c <span class="hl opt">= '</span>Y<span class="hl opt">',</span> p <span class="hl opt">=</span> <span class="hl num">0.02</span> <span class="hl opt">}</span>
	<span class="hl opt">}</span>

homosapiens <span class="hl opt">=</span>
	<span class="hl opt">{{</span> c <span class="hl opt">= '</span>a<span class="hl opt">',</span> p <span class="hl opt">=</span> <span class="hl num">0.3029549426680</span> <span class="hl opt">}</span>
	<span class="hl opt">,{</span> c <span class="hl opt">= '</span>c<span class="hl opt">',</span> p <span class="hl opt">=</span> <span class="hl num">0.1979883004921</span> <span class="hl opt">}</span>
	<span class="hl opt">,{</span> c <span class="hl opt">= '</span>g<span class="hl opt">',</span> p <span class="hl opt">=</span> <span class="hl num">0.1975473066391</span> <span class="hl opt">}</span>
	<span class="hl opt">,{</span> c <span class="hl opt">= '</span>t<span class="hl opt">',</span> p <span class="hl opt">=</span> <span class="hl num">0.3015094502008</span> <span class="hl opt">}</span>
	<span class="hl opt">}</span>

makeRepeatFasta <span class="hl opt">:: !</span>String <span class="hl opt">!</span>String <span class="hl opt">!</span><span class="hl kwb">Int</span> <span class="hl opt">!*</span><span class="hl kwb">File</span> <span class="hl opt">-&gt; *</span><span class="hl kwb">File</span>
makeRepeatFasta id desc n io
	<span class="hl opt">#</span> io	<span class="hl opt">=</span> io <span class="hl opt">&lt;&lt;&lt;</span> <span class="hl str">&quot;&gt;&quot;</span> <span class="hl opt">&lt;&lt;&lt;</span> id <span class="hl opt">&lt;&lt;&lt;</span> <span class="hl str">&quot; &quot;</span> <span class="hl opt">&lt;&lt;&lt;</span> desc <span class="hl opt">&lt;&lt;&lt;</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span>
	<span class="hl opt">=</span> repeat n <span class="hl num">0</span> io
<span class="hl kwa">where</span>
	length	<span class="hl opt">=</span> <span class="hl num">60</span>
	kn		<span class="hl opt">=</span> size alu

	repeat <span class="hl opt">:: !</span><span class="hl kwb">Int</span> <span class="hl opt">!</span><span class="hl kwb">Int</span> <span class="hl opt">!*</span><span class="hl kwb">File</span> <span class="hl opt">-&gt; *</span><span class="hl kwb">File</span>
	repeat todo k io
		| todo <span class="hl opt">&lt;=</span> <span class="hl num">0</span>
			<span class="hl opt">=</span> io
		<span class="hl opt">#</span> m			<span class="hl opt">=</span> min todo length
		<span class="hl opt"># (</span>k<span class="hl opt">,</span>io<span class="hl opt">)	=</span> write <span class="hl num">0</span> k m io
		<span class="hl opt">=</span> repeat <span class="hl opt">(</span>todo <span class="hl opt">-</span> length<span class="hl opt">)</span> k io
	
	write <span class="hl opt">:: !</span><span class="hl kwb">Int</span> <span class="hl opt">!</span><span class="hl kwb">Int</span> <span class="hl opt">!</span><span class="hl kwb">Int</span> <span class="hl opt">!*</span><span class="hl kwb">File</span> <span class="hl opt">-&gt; (!</span><span class="hl kwb">Int</span><span class="hl opt">,!*</span><span class="hl kwb">File</span><span class="hl opt">)</span>
	write j k m io
		| j <span class="hl opt">&gt;=</span> m
			<span class="hl opt">= (</span>k<span class="hl opt">,</span>io <span class="hl opt">&lt;&lt;&lt;</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">)</span>
		| k <span class="hl opt">&gt;=</span> kn
			<span class="hl opt">=</span> write j <span class="hl num">0</span> m io
		<span class="hl opt">#</span> io	<span class="hl opt">=</span> io <span class="hl opt">&lt;&lt;&lt;</span> alu<span class="hl opt">.[</span>k<span class="hl opt">]</span>
		<span class="hl opt">=</span> write <span class="hl opt">(</span>j<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">) (</span>k<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span> m io

makeRandomFasta <span class="hl opt">:: !</span>String <span class="hl opt">!</span>String <span class="hl opt">!*</span>Table <span class="hl opt">!</span><span class="hl kwb">Int</span> <span class="hl opt">!</span>RNG <span class="hl opt">!*</span><span class="hl kwb">File</span> <span class="hl opt">-&gt; (!</span>RNG<span class="hl opt">,!*</span><span class="hl kwb">File</span><span class="hl opt">)</span>
makeRandomFasta id desc table n rng io
	<span class="hl opt">#</span> io	<span class="hl opt">=</span> io <span class="hl opt">&lt;&lt;&lt;</span> <span class="hl str">&quot;&gt;&quot;</span> <span class="hl opt">&lt;&lt;&lt;</span> id <span class="hl opt">&lt;&lt;&lt;</span> <span class="hl str">&quot; &quot;</span> <span class="hl opt">&lt;&lt;&lt;</span> desc <span class="hl opt">&lt;&lt;&lt;</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span>
	<span class="hl opt">#</span> table	<span class="hl opt">=</span> makeCumulative table
	<span class="hl opt">=</span> repeat n table rng io
<span class="hl kwa">where</span>
	length	<span class="hl opt">=</span> <span class="hl num">60</span>

	repeat <span class="hl opt">:: !</span><span class="hl kwb">Int</span> <span class="hl opt">!</span>Table <span class="hl opt">!</span>RNG <span class="hl opt">!*</span><span class="hl kwb">File</span> <span class="hl opt">-&gt; (!</span>RNG<span class="hl opt">,!*</span><span class="hl kwb">File</span><span class="hl opt">)</span>
	repeat todo table rng io
		| todo <span class="hl opt">&lt;=</span> <span class="hl num">0</span>
			<span class="hl opt">= (</span>rng<span class="hl opt">,</span>io<span class="hl opt">)</span>
		<span class="hl opt">#</span> m					<span class="hl opt">=</span> min todo length
		<span class="hl opt"># (</span>rng<span class="hl opt">,</span>s<span class="hl opt">)			=</span> write <span class="hl num">0</span> m rng <span class="hl opt">[!!]</span>
		<span class="hl opt">#</span> io				<span class="hl opt">=</span> io <span class="hl opt">&lt;&lt;&lt;</span> s
		<span class="hl opt">=</span> repeat <span class="hl opt">(</span>todo <span class="hl opt">-</span> length<span class="hl opt">)</span> table rng io
	<span class="hl kwa">where</span>
		write <span class="hl opt">:: !</span><span class="hl kwb">Int</span> <span class="hl opt">!</span><span class="hl kwb">Int</span> <span class="hl opt">!</span>RNG <span class="hl opt">![!</span><span class="hl kwb">Char</span><span class="hl opt">!] -&gt; (!</span>RNG<span class="hl opt">,!</span>String<span class="hl opt">)</span>
		write j m rng s
			| j <span class="hl opt">&gt;=</span> m
				<span class="hl opt">= (</span>rng<span class="hl opt">,</span>revlist2string <span class="hl opt">[!'</span><span class="hl esc">\n</span><span class="hl opt">':</span>s<span class="hl opt">!])</span>
			<span class="hl opt"># (</span>rval<span class="hl opt">,</span>rng<span class="hl opt">)	=</span> genRandom <span class="hl num">1.0</span> rng
			<span class="hl opt">#</span> c				<span class="hl opt">=</span> find <span class="hl num">0</span> rval
			<span class="hl opt">=</span> write <span class="hl opt">(</span>j<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span> m rng <span class="hl opt">[!</span>c<span class="hl opt">:</span>s<span class="hl opt">!]</span>

		find <span class="hl opt">:: !</span><span class="hl kwb">Int</span> <span class="hl opt">!</span><span class="hl kwb">Real</span> <span class="hl opt">-&gt;</span> <span class="hl kwb">Char</span>
		find k rval
			<span class="hl opt">#</span> iub	<span class="hl opt">=</span> table<span class="hl opt">.[</span>k<span class="hl opt">]</span>
			| iub<span class="hl opt">.</span>p <span class="hl opt">&lt;</span> rval
				<span class="hl opt">=</span> find <span class="hl opt">(</span>k<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span> rval
			<span class="hl opt">=</span> iub<span class="hl opt">.</span>c

toArray <span class="hl opt">:: ![!</span><span class="hl kwb">Char</span><span class="hl opt">!] -&gt;</span> String
toArray l
	<span class="hl opt">= {</span>c <span class="hl esc">\\</span> c <span class="hl opt">&lt;</span>|<span class="hl opt">-</span> l<span class="hl opt">}</span>

revlist2string <span class="hl opt">:: ![!</span><span class="hl kwb">Char</span><span class="hl opt">!] -&gt; .</span>String
revlist2string l
	<span class="hl opt">#</span> s	<span class="hl opt">=</span> length l
	<span class="hl opt">#</span> a <span class="hl opt">=</span> createArray s <span class="hl opt">'&#64;'</span>
	<span class="hl opt">=</span> fillArray <span class="hl opt">(</span>s<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">)</span> l a
<span class="hl kwa">where</span>
	fillArray <span class="hl opt">:: !</span><span class="hl kwb">Int</span> <span class="hl opt">![!</span><span class="hl kwb">Char</span><span class="hl opt">!] !*</span>String <span class="hl opt">-&gt; .</span>String
	fillArray i <span class="hl opt">[!!]</span> a
		<span class="hl opt">=</span> a
	fillArray i <span class="hl opt">[!</span>c<span class="hl opt">:</span>l<span class="hl opt">!]</span> a
		<span class="hl opt">=</span> fillArray <span class="hl opt">(</span>i<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">)</span> l <span class="hl opt">{</span>a <span class="hl opt">&amp; [</span>i<span class="hl opt">] =</span> c<span class="hl opt">}</span>

<span class="hl slc">// adapted from 'random' shootout</span>

<span class="hl opt">::</span> RNG	<span class="hl opt">:==</span> <span class="hl kwb">Int</span>

makeRandomGenerator <span class="hl opt">:: !</span><span class="hl kwb">Int</span> <span class="hl opt">-&gt;</span> RNG
makeRandomGenerator seed
	<span class="hl opt">=</span> seed

genRandom <span class="hl opt">:: !</span><span class="hl kwb">Real</span> <span class="hl opt">!</span>RNG <span class="hl opt">-&gt; (!</span><span class="hl kwb">Real</span><span class="hl opt">,!</span>RNG<span class="hl opt">)</span>
genRandom max seed
	<span class="hl opt">= (</span>newran<span class="hl opt">,</span>newseed<span class="hl opt">)</span>
<span class="hl kwa">where</span>
	newseed <span class="hl opt">= (</span>seed <span class="hl opt">*</span> ia <span class="hl opt">+</span> ic<span class="hl opt">)</span> rem im
	newran <span class="hl opt">=</span>  max <span class="hl opt">*</span> toReal newseed <span class="hl opt">/</span> imd

im <span class="hl opt">:==</span> <span class="hl num">139968</span>
ia <span class="hl opt">:==</span> <span class="hl num">3877</span>
ic <span class="hl opt">:==</span> <span class="hl num">29573</span>
imd <span class="hl opt">:==</span> toReal im
