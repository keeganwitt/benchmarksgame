<span class="hl com">&quot;* The Computer Language Benchmarks Game</span>
<span class="hl com">    http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com">    contributed by Isaac Gouy</span>
<span class="hl com">    modified by Eliot Miranda *&quot;</span><span class="hl opt">!</span>


<span class="hl kwc">Object</span> <span class="hl kwb">subclass:</span> <span class="hl kwd">#TreeNode</span>
   <span class="hl kwb">instanceVariableNames:</span> <span class="hl str">'left right item'</span>
   <span class="hl kwb">classVariableNames:</span> <span class="hl str">''</span>
   <span class="hl kwb">poolDictionaries:</span> <span class="hl str">''</span>
   <span class="hl kwb">category:</span> <span class="hl str">'Shootout'</span><span class="hl opt">!</span>

<span class="hl opt">!</span><span class="hl kwc">Tests</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'benchmarking'</span><span class="hl opt">!</span>
<span class="hl kwb">binarytrees:</span> n <span class="hl kwb">to:</span> output
   <span class="hl kwd">| minDepth maxDepth stretchDepth check longLivedTree iterations |</span>
   minDepth <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">4</span><span class="hl opt">.</span>
   maxDepth <span class="hl opt">:</span><span class="hl kwb">=</span> minDepth <span class="hl kwb">+</span> <span class="hl num">2</span> <span class="hl kwb">max:</span> n<span class="hl opt">.</span>
   stretchDepth <span class="hl opt">:</span><span class="hl kwb">=</span> maxDepth <span class="hl kwb">+</span> <span class="hl num">1</span><span class="hl opt">.</span>

   check <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl opt">(</span><span class="hl kwc">TreeNode</span> <span class="hl kwb">bottomUpTree:</span> <span class="hl num">0</span> <span class="hl kwb">depth:</span> stretchDepth<span class="hl opt">)</span> <span class="hl kwb">itemCheck</span><span class="hl opt">.</span>
   output
      <span class="hl kwb">nextPutAll:</span> <span class="hl str">'stretch tree of depth '</span><span class="hl opt">;</span> <span class="hl kwb">print:</span> stretchDepth<span class="hl opt">;</span> <span class="hl kwb">tab</span><span class="hl opt">;</span>
      <span class="hl kwb">nextPutAll:</span> <span class="hl str">' check: '</span><span class="hl opt">;</span> <span class="hl kwb">print:</span> check<span class="hl opt">;</span> <span class="hl kwb">nl</span><span class="hl opt">.</span>

   longLivedTree <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl kwc">TreeNode</span> <span class="hl kwb">bottomUpTree:</span> <span class="hl num">0</span> <span class="hl kwb">depth:</span> maxDepth<span class="hl opt">.</span>
   minDepth <span class="hl kwb">to:</span> maxDepth <span class="hl kwb">by:</span> <span class="hl num">2</span> <span class="hl kwb">do:</span> <span class="hl opt">[</span><span class="hl kwd">:depth</span>|
      iterations <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">1</span> <span class="hl kwb">bitShift:</span> maxDepth <span class="hl kwb">-</span> depth <span class="hl kwb">+</span> minDepth<span class="hl opt">.</span>

      check <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">0</span><span class="hl opt">.</span>
      <span class="hl num">1</span> <span class="hl kwb">to:</span> iterations <span class="hl kwb">do:</span> <span class="hl opt">[</span><span class="hl kwd">:i</span>|
         check <span class="hl opt">:</span><span class="hl kwb">=</span> check <span class="hl kwb">+</span> <span class="hl opt">(</span><span class="hl kwc">TreeNode</span> <span class="hl kwb">bottomUpTree:</span> i <span class="hl kwb">depth:</span> depth<span class="hl opt">)</span> <span class="hl kwb">itemCheck</span><span class="hl opt">.</span>
         check <span class="hl opt">:</span><span class="hl kwb">=</span> check <span class="hl kwb">+</span> <span class="hl opt">(</span><span class="hl kwc">TreeNode</span> <span class="hl kwb">bottomUpTree: -</span><span class="hl num">1</span><span class="hl kwb">*</span>i <span class="hl kwb">depth:</span> depth<span class="hl opt">)</span> <span class="hl kwb">itemCheck</span>
         <span class="hl opt">].</span>
      output
         <span class="hl kwb">print:</span>  <span class="hl opt">(</span><span class="hl num">2</span><span class="hl kwb">*</span>iterations<span class="hl opt">);</span> <span class="hl kwb">tab</span><span class="hl opt">;</span>
         <span class="hl kwb">nextPutAll:</span> <span class="hl str">' trees of depth '</span><span class="hl opt">;</span> <span class="hl kwb">print:</span> depth<span class="hl opt">;</span> <span class="hl kwb">tab</span><span class="hl opt">;</span>
         <span class="hl kwb">nextPutAll:</span> <span class="hl str">' check: '</span><span class="hl opt">;</span> <span class="hl kwb">print:</span> check<span class="hl opt">;</span> <span class="hl kwb">nl</span>
      <span class="hl opt">].</span>

   output
      <span class="hl kwb">nextPutAll:</span> <span class="hl str">'long lived tree of depth '</span><span class="hl opt">;</span> <span class="hl kwb">print:</span> maxDepth<span class="hl opt">;</span> <span class="hl kwb">tab</span><span class="hl opt">;</span>
      <span class="hl kwb">nextPutAll:</span> <span class="hl str">' check: '</span><span class="hl opt">;</span> <span class="hl kwb">print:</span> longLivedTree <span class="hl kwb">itemCheck</span><span class="hl opt">;</span> <span class="hl kwb">nl</span><span class="hl opt">! !</span>

<span class="hl opt">!</span><span class="hl kwc">Tests</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'benchmark scripts'</span><span class="hl opt">!</span>
<span class="hl kwb">binarytrees</span>
   <span class="hl kwa">self</span> <span class="hl kwb">binarytrees:</span> <span class="hl kwa">self</span> <span class="hl kwb">arg to:</span> <span class="hl kwa">self</span> <span class="hl kwb">stdout</span><span class="hl opt">.</span>
   <span class="hl opt">^</span><span class="hl str">''</span><span class="hl opt">! !</span>


<span class="hl opt">!</span><span class="hl kwc">TreeNode</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'initialize-release'</span><span class="hl opt">!</span>
<span class="hl kwb">left:</span> leftChild <span class="hl kwb">right:</span> rightChild <span class="hl kwb">item:</span> anItem
   left <span class="hl opt">:</span><span class="hl kwb">=</span> leftChild<span class="hl opt">.</span>
   right <span class="hl opt">:</span><span class="hl kwb">=</span> rightChild<span class="hl opt">.</span>
   item <span class="hl opt">:</span><span class="hl kwb">=</span> anItem<span class="hl opt">! !</span>

<span class="hl opt">!</span><span class="hl kwc">TreeNode</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'accessing'</span><span class="hl opt">!</span>
<span class="hl kwb">itemCheck</span>
   <span class="hl opt">^</span>left <span class="hl kwb">isNil</span> 
      <span class="hl kwb">ifTrue:</span> <span class="hl opt">[</span>item<span class="hl opt">]</span> <span class="hl kwb">ifFalse:</span> <span class="hl opt">[</span>item <span class="hl kwb">+</span> <span class="hl opt">(</span>left <span class="hl kwb">itemCheck -</span> right <span class="hl kwb">itemCheck</span><span class="hl opt">)]! !</span>


<span class="hl opt">!</span><span class="hl kwc">TreeNode</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'instance creation'</span><span class="hl opt">!</span>
<span class="hl kwb">bottomUpTree:</span> anItem <span class="hl kwb">depth:</span> anInteger
   <span class="hl opt">^(</span>anInteger &gt; <span class="hl num">0</span><span class="hl opt">)</span> 
      <span class="hl kwb">ifTrue:</span> <span class="hl opt">[</span>
         <span class="hl kwa">self</span> 
            <span class="hl kwb">left:</span> <span class="hl opt">(</span><span class="hl kwa">self</span> <span class="hl kwb">bottomUpTree:</span> <span class="hl num">2</span><span class="hl kwb">*</span>anItem <span class="hl kwb">-</span> <span class="hl num">1</span> <span class="hl kwb">depth:</span> anInteger <span class="hl kwb">-</span> <span class="hl num">1</span><span class="hl opt">)</span> 
            <span class="hl kwb">right:</span> <span class="hl opt">(</span><span class="hl kwa">self</span> <span class="hl kwb">bottomUpTree:</span> <span class="hl num">2</span><span class="hl kwb">*</span>anItem <span class="hl kwb">depth:</span> anInteger <span class="hl kwb">-</span> <span class="hl num">1</span><span class="hl opt">)</span>  
            <span class="hl kwb">item:</span> anItem
         <span class="hl opt">]</span>
      <span class="hl kwb">ifFalse:</span> <span class="hl opt">[</span><span class="hl kwa">self</span> <span class="hl kwb">left:</span> <span class="hl kwa">nil</span> <span class="hl kwb">right:</span> <span class="hl kwa">nil</span> <span class="hl kwb">item:</span> anItem<span class="hl opt">]! !</span>

<span class="hl opt">!</span><span class="hl kwc">TreeNode</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'instance creation'</span><span class="hl opt">!</span>
<span class="hl kwb">left:</span> leftChild <span class="hl kwb">right:</span> rightChild <span class="hl kwb">item:</span> anItem      
   <span class="hl opt">^(</span><span class="hl kwa">super</span> <span class="hl kwb">new</span><span class="hl opt">)</span> <span class="hl kwb">left:</span> leftChild <span class="hl kwb">right:</span> rightChild <span class="hl kwb">item:</span> anItem<span class="hl opt">! !</span>

