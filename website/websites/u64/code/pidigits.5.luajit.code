<span class="hl slc">-- The Computer Language Benchmarks Game</span>
<span class="hl slc">-- http://shootout.alioth.debian.org/</span>
<span class="hl slc">-- contributed by Mike Pall</span>
<span class="hl slc">-- requires LGMP &quot;A GMP package for Lua 5.1&quot;</span>
<span class="hl slc">-- with matrix optimization, courtesy of Wim Couwenberg</span>

<span class="hl kwa">local</span> g<span class="hl sym">,</span> aux <span class="hl sym">= {}, {}</span>
require<span class="hl str">&quot;c-gmp&quot;</span><span class="hl sym">(</span>g<span class="hl sym">,</span> aux<span class="hl sym">)</span>
<span class="hl kwa">local</span> add<span class="hl sym">,</span> mul<span class="hl sym">,</span> div <span class="hl sym">=</span> g<span class="hl sym">.</span>mpz_add<span class="hl sym">,</span> g<span class="hl sym">.</span>mpz_mul_si<span class="hl sym">,</span> g<span class="hl sym">.</span>mpz_tdiv_q
<span class="hl kwa">local</span> init<span class="hl sym">,</span> get <span class="hl sym">=</span> g<span class="hl sym">.</span>mpz_init_set_d<span class="hl sym">,</span> g<span class="hl sym">.</span>mpz_get_d

<span class="hl kwa">local</span> u<span class="hl sym">,</span> v<span class="hl sym">,</span> w

<span class="hl kwa">local function</span> <span class="hl kwd">produce</span><span class="hl sym">(</span>n1<span class="hl sym">,</span> n2<span class="hl sym">,</span> d<span class="hl sym">,</span> k<span class="hl sym">)</span>
  <span class="hl kwd">mul</span><span class="hl sym">(</span>n1<span class="hl sym">,</span> <span class="hl num">2</span><span class="hl sym">*</span>k<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">,</span> u<span class="hl sym">)</span>
  <span class="hl kwd">add</span><span class="hl sym">(</span>n2<span class="hl sym">,</span> n2<span class="hl sym">,</span> v<span class="hl sym">)</span>
  <span class="hl kwd">mul</span><span class="hl sym">(</span>n1<span class="hl sym">,</span> k<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">,</span> w<span class="hl sym">)</span>
  <span class="hl kwd">add</span><span class="hl sym">(</span>u<span class="hl sym">,</span> v<span class="hl sym">,</span> n1<span class="hl sym">)</span>
  <span class="hl kwd">mul</span><span class="hl sym">(</span>n2<span class="hl sym">,</span> k<span class="hl sym">+</span><span class="hl num">2</span><span class="hl sym">,</span> u<span class="hl sym">)</span>
  <span class="hl kwd">add</span><span class="hl sym">(</span>w<span class="hl sym">,</span> u<span class="hl sym">,</span> n2<span class="hl sym">)</span>
  <span class="hl kwd">mul</span><span class="hl sym">(</span>d<span class="hl sym">,</span> <span class="hl num">2</span><span class="hl sym">*</span>k<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">,</span> d<span class="hl sym">)</span>
<span class="hl kwa">end</span>

<span class="hl kwa">local function</span> <span class="hl kwd">extract</span><span class="hl sym">(</span>n1<span class="hl sym">,</span> n2<span class="hl sym">,</span> d<span class="hl sym">,</span> y<span class="hl sym">)</span>
  <span class="hl kwd">mul</span><span class="hl sym">(</span>d<span class="hl sym">, -</span><span class="hl num">10</span><span class="hl sym">*</span>y<span class="hl sym">,</span> u<span class="hl sym">)</span>
  <span class="hl kwd">mul</span><span class="hl sym">(</span>n1<span class="hl sym">,</span> <span class="hl num">10</span><span class="hl sym">,</span> n1<span class="hl sym">)</span>
  <span class="hl kwd">add</span><span class="hl sym">(</span>n1<span class="hl sym">,</span> u<span class="hl sym">,</span> n1<span class="hl sym">)</span>
  <span class="hl kwd">mul</span><span class="hl sym">(</span>n2<span class="hl sym">,</span> <span class="hl num">10</span><span class="hl sym">,</span> n2<span class="hl sym">)</span>
  <span class="hl kwd">add</span><span class="hl sym">(</span>n2<span class="hl sym">,</span> u<span class="hl sym">,</span> n2<span class="hl sym">)</span>
<span class="hl kwa">end</span>

<span class="hl kwa">local function</span> <span class="hl kwd">digit</span><span class="hl sym">(</span>n1<span class="hl sym">,</span> n2<span class="hl sym">,</span> d<span class="hl sym">)</span>
  <span class="hl kwa">local</span> y <span class="hl sym">=</span> <span class="hl kwd">get</span><span class="hl sym">(</span><span class="hl kwd">div</span><span class="hl sym">(</span>n1<span class="hl sym">,</span> d<span class="hl sym">,</span> u<span class="hl sym">))</span>
  <span class="hl kwa">if</span> y <span class="hl sym">==</span> <span class="hl kwd">get</span><span class="hl sym">(</span><span class="hl kwd">div</span><span class="hl sym">(</span>n2<span class="hl sym">,</span> d<span class="hl sym">,</span> v<span class="hl sym">))</span> <span class="hl kwa">then return</span> y <span class="hl kwa">end</span>
<span class="hl kwa">end</span>

<span class="hl slc">-- Generate successive digits of PI.</span>
<span class="hl kwa">local function</span> <span class="hl kwd">pidigits</span><span class="hl sym">(</span>N<span class="hl sym">)</span>
  <span class="hl kwa">local</span> <span class="hl kwb">write</span> <span class="hl sym">=</span> io<span class="hl sym">.</span><span class="hl kwb">write</span>
  <span class="hl kwa">local</span> k <span class="hl sym">=</span> <span class="hl num">1</span>
  <span class="hl kwa">local</span> n1<span class="hl sym">,</span> n2<span class="hl sym">,</span> d <span class="hl sym">=</span> <span class="hl kwd">init</span><span class="hl sym">(</span><span class="hl num">4</span><span class="hl sym">),</span> <span class="hl kwd">init</span><span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">),</span> <span class="hl kwd">init</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">)</span>
  u<span class="hl sym">,</span> v<span class="hl sym">,</span> w <span class="hl sym">=</span> <span class="hl kwd">init</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">),</span> <span class="hl kwd">init</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">),</span> <span class="hl kwd">init</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">)</span>
  <span class="hl kwa">local</span> i <span class="hl sym">=</span> <span class="hl num">0</span>
  <span class="hl kwa">while</span> i <span class="hl sym">&lt;</span> N <span class="hl kwa">do</span>
    <span class="hl kwa">local</span> y <span class="hl sym">=</span> <span class="hl kwd">digit</span><span class="hl sym">(</span>n1<span class="hl sym">,</span> n2<span class="hl sym">,</span> d<span class="hl sym">)</span>
    <span class="hl kwa">if</span> y <span class="hl kwa">then</span>
      <span class="hl kwb">write</span><span class="hl sym">(</span>y<span class="hl sym">)</span>
      i <span class="hl sym">=</span> i <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span> <span class="hl kwa">if</span> i <span class="hl sym">%</span> <span class="hl num">10</span> <span class="hl sym">==</span> <span class="hl num">0</span> <span class="hl kwa">then</span> <span class="hl kwb">write</span><span class="hl sym">(</span><span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">:&quot;</span><span class="hl sym">,</span> i<span class="hl sym">,</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">)</span> <span class="hl kwa">end</span>
      <span class="hl kwd">extract</span><span class="hl sym">(</span>n1<span class="hl sym">,</span> n2<span class="hl sym">,</span> d<span class="hl sym">,</span> y<span class="hl sym">)</span>
    <span class="hl kwa">else</span>
      <span class="hl kwd">produce</span><span class="hl sym">(</span>n1<span class="hl sym">,</span> n2<span class="hl sym">,</span> d<span class="hl sym">,</span> k<span class="hl sym">)</span>
      k <span class="hl sym">=</span> k <span class="hl sym">+</span> <span class="hl num">1</span>
    <span class="hl kwa">end</span>
  <span class="hl kwa">end</span>
  <span class="hl kwa">if</span> i <span class="hl sym">%</span> <span class="hl num">10</span> <span class="hl sym">~=</span> <span class="hl num">0</span> <span class="hl kwa">then</span> <span class="hl kwb">write</span><span class="hl sym">(</span><span class="hl kwb">string</span><span class="hl sym">.</span><span class="hl kwd">rep</span><span class="hl sym">(</span><span class="hl str">&quot; &quot;</span><span class="hl sym">,</span> <span class="hl num">10</span> <span class="hl sym">-</span> N <span class="hl sym">%</span> <span class="hl num">10</span><span class="hl sym">),</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">:&quot;</span><span class="hl sym">,</span> N<span class="hl sym">,</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">)</span> <span class="hl kwa">end</span>
<span class="hl kwa">end</span>

<span class="hl kwa">local</span> N <span class="hl sym">=</span> <span class="hl kwb">tonumber</span><span class="hl sym">(</span>arg <span class="hl kwa">and</span> arg<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">])</span> <span class="hl kwa">or</span> <span class="hl num">27</span>
<span class="hl kwd">pidigits</span><span class="hl sym">(</span>N<span class="hl sym">)</span>
