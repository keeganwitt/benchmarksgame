<span class="hl com">/**</span>
<span class="hl com"> * The Computer Language Benchmarks Game</span>
<span class="hl com"> * http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"> * contributed by Michael Barker</span>
<span class="hl com"> * modified by Daryl Griffith</span>
<span class="hl com"> */</span>

<span class="hl kwa">import</span> java<span class="hl opt">.</span>util<span class="hl opt">.</span>concurrent<span class="hl opt">.</span>Exchanger<span class="hl opt">;</span>
<span class="hl kwa">import</span> java<span class="hl opt">.</span>util<span class="hl opt">.</span>concurrent<span class="hl opt">.</span>Phaser<span class="hl opt">;</span>
<span class="hl kwa">import</span> java<span class="hl opt">.</span>util<span class="hl opt">.</span>concurrent<span class="hl opt">.</span>atomic<span class="hl opt">.</span>AtomicInteger<span class="hl opt">;</span>

<span class="hl kwa">public class</span> chameneosredux <span class="hl opt">{</span>

    enum Colour <span class="hl opt">{</span>

        BLUE <span class="hl opt">{</span>
            <span class="hl kwc">&#64;Override</span>
            Colour <span class="hl kwd">complement</span><span class="hl opt">(</span>Colour colour<span class="hl opt">) {</span>
                <span class="hl kwa">return</span> colour<span class="hl opt">.</span>blue<span class="hl opt">;</span>
            <span class="hl opt">}</span>
            
            <span class="hl kwc">&#64;Override</span>
            <span class="hl kwa">public</span> String <span class="hl kwd">toString</span><span class="hl opt">() {</span>
                <span class="hl kwa">return</span> <span class="hl str">&quot;blue&quot;</span><span class="hl opt">;</span>
            <span class="hl opt">}</span>
        <span class="hl opt">},</span>
        RED <span class="hl opt">{</span>
            <span class="hl kwc">&#64;Override</span>
            Colour <span class="hl kwd">complement</span><span class="hl opt">(</span>Colour colour<span class="hl opt">) {</span>
                <span class="hl kwa">return</span> colour<span class="hl opt">.</span>red<span class="hl opt">;</span>
            <span class="hl opt">}</span>
            
            <span class="hl kwc">&#64;Override</span>
            <span class="hl kwa">public</span> String <span class="hl kwd">toString</span><span class="hl opt">() {</span>
                <span class="hl kwa">return</span> <span class="hl str">&quot;red&quot;</span><span class="hl opt">;</span>
            <span class="hl opt">}</span>
        <span class="hl opt">},</span>
        YELLOW <span class="hl opt">{</span>
            <span class="hl kwc">&#64;Override</span>
            Colour <span class="hl kwd">complement</span><span class="hl opt">(</span>Colour colour<span class="hl opt">) {</span>
                <span class="hl kwa">return</span> colour<span class="hl opt">.</span>yellow<span class="hl opt">;</span>
            <span class="hl opt">}</span>
            
            <span class="hl kwc">&#64;Override</span>
            <span class="hl kwa">public</span> String <span class="hl kwd">toString</span><span class="hl opt">() {</span>
                <span class="hl kwa">return</span> <span class="hl str">&quot;yellow&quot;</span><span class="hl opt">;</span>
            <span class="hl opt">}</span>
        <span class="hl opt">};</span>

        <span class="hl kwa">private</span> Colour blue<span class="hl opt">;</span>
        <span class="hl kwa">private</span> Colour red<span class="hl opt">;</span>
        <span class="hl kwa">private</span> Colour yellow<span class="hl opt">;</span>

        <span class="hl kwa">private</span> <span class="hl kwb">void</span> <span class="hl kwd">setColours</span><span class="hl opt">(</span>Colour blue<span class="hl opt">,</span> Colour red<span class="hl opt">,</span> Colour yellow<span class="hl opt">) {</span>
            <span class="hl kwa">this</span><span class="hl opt">.</span>blue <span class="hl opt">=</span> blue<span class="hl opt">;</span>
            <span class="hl kwa">this</span><span class="hl opt">.</span>red <span class="hl opt">=</span> red<span class="hl opt">;</span>
            <span class="hl kwa">this</span><span class="hl opt">.</span>yellow <span class="hl opt">=</span> yellow<span class="hl opt">;</span>
        <span class="hl opt">}</span>

        <span class="hl kwa">abstract</span> Colour <span class="hl kwd">complement</span><span class="hl opt">(</span>Colour colour<span class="hl opt">);</span>
    <span class="hl opt">}</span>

    <span class="hl kwa">static</span> <span class="hl opt">{</span>

        Colour<span class="hl opt">.</span>BLUE<span class="hl opt">.</span><span class="hl kwd">setColours</span><span class="hl opt">(</span>Colour<span class="hl opt">.</span>BLUE<span class="hl opt">,</span> Colour<span class="hl opt">.</span>YELLOW<span class="hl opt">,</span> Colour<span class="hl opt">.</span>RED<span class="hl opt">);</span>
        Colour<span class="hl opt">.</span>RED<span class="hl opt">.</span><span class="hl kwd">setColours</span><span class="hl opt">(</span>Colour<span class="hl opt">.</span>YELLOW<span class="hl opt">,</span> Colour<span class="hl opt">.</span>RED<span class="hl opt">,</span> Colour<span class="hl opt">.</span>BLUE<span class="hl opt">);</span>
        Colour<span class="hl opt">.</span>YELLOW<span class="hl opt">.</span><span class="hl kwd">setColours</span><span class="hl opt">(</span>Colour<span class="hl opt">.</span>RED<span class="hl opt">,</span> Colour<span class="hl opt">.</span>BLUE<span class="hl opt">,</span> Colour<span class="hl opt">.</span>YELLOW<span class="hl opt">);</span>
    <span class="hl opt">}</span>
    
    <span class="hl kwa">static final class</span> CreatureExchange <span class="hl opt">{</span>

        Colour colour<span class="hl opt">;</span>
        <span class="hl kwb">int</span> id<span class="hl opt">;</span>
    <span class="hl opt">}</span>

    <span class="hl kwa">static final class</span> MeetingPlace <span class="hl opt">{</span>

        <span class="hl kwa">private final</span> Exchanger<span class="hl opt">&lt;</span>CreatureExchange<span class="hl opt">&gt;</span> exchanger <span class="hl opt">=</span> <span class="hl kwa">new</span> Exchanger<span class="hl opt">&lt;&gt;();</span>
        <span class="hl kwa">private final</span> AtomicInteger meetingsLeft <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">AtomicInteger</span><span class="hl opt">();</span>

        <span class="hl kwa">public</span> <span class="hl kwd">MeetingPlace</span><span class="hl opt">(</span><span class="hl kwa">final</span> <span class="hl kwb">int</span> meetings<span class="hl opt">) {</span>
            meetingsLeft<span class="hl opt">.</span><span class="hl kwd">set</span><span class="hl opt">(</span>meetings <span class="hl opt">+</span> meetings<span class="hl opt">);</span>
        <span class="hl opt">}</span>

        <span class="hl kwa">public</span> CreatureExchange <span class="hl kwd">meet</span><span class="hl opt">(</span><span class="hl kwa">final</span> CreatureExchange info<span class="hl opt">) {</span>
            <span class="hl kwa">final</span> <span class="hl kwb">int</span> meetings <span class="hl opt">=</span> meetingsLeft<span class="hl opt">.</span><span class="hl kwd">decrementAndGet</span><span class="hl opt">();</span>

            <span class="hl kwa">if</span> <span class="hl opt">(</span>meetings <span class="hl opt">&gt;=</span> <span class="hl num">0</span><span class="hl opt">) {</span>
                <span class="hl kwa">try</span> <span class="hl opt">{</span>
                    <span class="hl kwa">return</span> exchanger<span class="hl opt">.</span><span class="hl kwd">exchange</span><span class="hl opt">(</span>info<span class="hl opt">);</span>
                <span class="hl opt">}</span> <span class="hl kwa">catch</span> <span class="hl opt">(</span>InterruptedException ex<span class="hl opt">) {</span>
                <span class="hl opt">}</span>
            <span class="hl opt">}</span>
            <span class="hl kwa">return</span> null<span class="hl opt">;</span>
        <span class="hl opt">}</span>
    <span class="hl opt">}</span>

    <span class="hl kwa">static final class</span> Creature <span class="hl kwa">extends</span> Thread <span class="hl opt">{</span>

        <span class="hl kwa">private final</span> CreatureExchange exchange <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">CreatureExchange</span><span class="hl opt">();</span>
        <span class="hl kwa">private final</span> MeetingPlace place<span class="hl opt">;</span>
        <span class="hl kwa">private final</span> Phaser phaser<span class="hl opt">;</span>
        <span class="hl kwa">private</span> <span class="hl kwb">int</span> count <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
        <span class="hl kwa">private</span> <span class="hl kwb">int</span> sameCount <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>

        <span class="hl kwa">public</span> <span class="hl kwd">Creature</span><span class="hl opt">(</span><span class="hl kwa">final</span> MeetingPlace place
                <span class="hl opt">,</span> <span class="hl kwa">final</span> Colour colour
                <span class="hl opt">,</span> <span class="hl kwa">final</span> Phaser phaser<span class="hl opt">) {</span>
            <span class="hl kwa">this</span><span class="hl opt">.</span>place <span class="hl opt">=</span> place<span class="hl opt">;</span>
            <span class="hl kwa">this</span><span class="hl opt">.</span>phaser <span class="hl opt">=</span> phaser<span class="hl opt">;</span>
            exchange<span class="hl opt">.</span>id <span class="hl opt">=</span> System<span class="hl opt">.</span><span class="hl kwd">identityHashCode</span><span class="hl opt">(</span><span class="hl kwa">this</span><span class="hl opt">);</span>
            exchange<span class="hl opt">.</span>colour <span class="hl opt">=</span> colour<span class="hl opt">;</span>
        <span class="hl opt">}</span>

        <span class="hl kwc">&#64;Override</span>
        <span class="hl kwa">public</span> <span class="hl kwb">void</span> <span class="hl kwd">run</span><span class="hl opt">() {</span>
            CreatureExchange otherCreature<span class="hl opt">;</span>

            <span class="hl kwa">for</span> <span class="hl opt">(;;) {</span>
                otherCreature <span class="hl opt">=</span> place<span class="hl opt">.</span><span class="hl kwd">meet</span><span class="hl opt">(</span>exchange<span class="hl opt">);</span>
                <span class="hl kwa">if</span> <span class="hl opt">(</span>otherCreature <span class="hl opt">==</span> null<span class="hl opt">) {</span>
                    phaser<span class="hl opt">.</span><span class="hl kwd">arrive</span><span class="hl opt">();</span>
                    <span class="hl kwa">break</span><span class="hl opt">;</span>
                <span class="hl opt">}</span>
                exchange<span class="hl opt">.</span>colour
                        <span class="hl opt">=</span> exchange<span class="hl opt">.</span>colour<span class="hl opt">.</span><span class="hl kwd">complement</span><span class="hl opt">(</span>otherCreature<span class="hl opt">.</span>colour<span class="hl opt">);</span>
                count<span class="hl opt">++;</span>
                <span class="hl kwa">if</span> <span class="hl opt">(</span>exchange<span class="hl opt">.</span>id <span class="hl opt">==</span> otherCreature<span class="hl opt">.</span>id<span class="hl opt">) {</span>
                    sameCount<span class="hl opt">++;</span>
                <span class="hl opt">}</span>
            <span class="hl opt">}</span>
        <span class="hl opt">}</span>

        <span class="hl kwa">public</span> <span class="hl kwb">int</span> <span class="hl kwd">printAndGetCount</span><span class="hl opt">() {</span>
            System<span class="hl opt">.</span>out<span class="hl opt">.</span><span class="hl kwd">append</span><span class="hl opt">(</span>Integer<span class="hl opt">.</span><span class="hl kwd">toString</span><span class="hl opt">(</span>count<span class="hl opt">));</span>
            <span class="hl kwa">return</span> count<span class="hl opt">;</span>
        <span class="hl opt">}</span>
        
        <span class="hl kwa">public</span> <span class="hl kwb">int</span> <span class="hl kwd">getSameCount</span><span class="hl opt">() {</span>
            <span class="hl kwa">return</span> sameCount<span class="hl opt">;</span>
        <span class="hl opt">}</span>
    <span class="hl opt">}</span>

    <span class="hl kwa">final static class</span> CreaturePhaser <span class="hl kwa">extends</span> Phaser <span class="hl opt">{</span>

        <span class="hl kwa">static final</span> String<span class="hl opt">[]</span> NUMBERS <span class="hl opt">= {</span>
            <span class="hl str">&quot;zero&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;one&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;two&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;three&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;four&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;five&quot;</span><span class="hl opt">,</span>
            <span class="hl str">&quot;six&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;seven&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;eight&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;nine&quot;</span>
        <span class="hl opt">};</span>
        <span class="hl kwa">static final</span> Object lock <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">Object</span><span class="hl opt">();</span>
        <span class="hl kwa">static</span> <span class="hl kwb">boolean</span> firstHasNotFinished <span class="hl opt">=</span> true<span class="hl opt">;</span>
        <span class="hl kwa">final</span> <span class="hl kwb">boolean</span> isFirst<span class="hl opt">;</span>
        <span class="hl kwa">final</span> Colour<span class="hl opt">[]</span> colours<span class="hl opt">;</span>
        <span class="hl kwa">final</span> Creature<span class="hl opt">[]</span> creatures<span class="hl opt">;</span>

        <span class="hl kwa">public</span> <span class="hl kwd">CreaturePhaser</span><span class="hl opt">(</span><span class="hl kwa">final</span> <span class="hl kwb">boolean</span> isFirst
                <span class="hl opt">,</span> <span class="hl kwa">final</span> Colour<span class="hl opt">[]</span> colours
                <span class="hl opt">,</span> <span class="hl kwa">final</span> Creature<span class="hl opt">[]</span> creatures
                <span class="hl opt">,</span> <span class="hl kwa">final</span> <span class="hl kwb">int</span> phases<span class="hl opt">) {</span>
            <span class="hl kwa">super</span><span class="hl opt">(</span>phases<span class="hl opt">);</span>
            <span class="hl kwa">this</span><span class="hl opt">.</span>isFirst <span class="hl opt">=</span> isFirst<span class="hl opt">;</span>
            <span class="hl kwa">this</span><span class="hl opt">.</span>colours <span class="hl opt">=</span> colours<span class="hl opt">;</span>
            <span class="hl kwa">this</span><span class="hl opt">.</span>creatures <span class="hl opt">=</span> creatures<span class="hl opt">;</span>
        <span class="hl opt">}</span>

        <span class="hl kwc">&#64;Override</span>
        <span class="hl kwa">protected</span> <span class="hl kwb">boolean</span> <span class="hl kwd">onAdvance</span><span class="hl opt">(</span><span class="hl kwa">final</span> <span class="hl kwb">int</span> phase
                <span class="hl opt">,</span> <span class="hl kwa">final</span> <span class="hl kwb">int</span> registeredParties<span class="hl opt">) {</span>
            <span class="hl kwa">synchronized</span> <span class="hl opt">(</span>lock<span class="hl opt">) {</span>
                <span class="hl kwa">if</span> <span class="hl opt">(!</span>isFirst<span class="hl opt">) {</span>
                    <span class="hl kwa">while</span> <span class="hl opt">(</span>firstHasNotFinished<span class="hl opt">) {</span>
                        <span class="hl kwa">try</span> <span class="hl opt">{</span>
                            lock<span class="hl opt">.</span><span class="hl kwd">wait</span><span class="hl opt">();</span>
                        <span class="hl opt">}</span> <span class="hl kwa">catch</span> <span class="hl opt">(</span>InterruptedException ex<span class="hl opt">) {</span>
                        <span class="hl opt">}</span>
                    <span class="hl opt">}</span>
                <span class="hl opt">}</span>
                <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwa">final</span> Colour colour <span class="hl opt">:</span> colours<span class="hl opt">) {</span>
                    System<span class="hl opt">.</span>out<span class="hl opt">.</span><span class="hl kwd">append</span><span class="hl opt">(</span><span class="hl str">' '</span><span class="hl opt">).</span><span class="hl kwd">append</span><span class="hl opt">(</span>colour<span class="hl opt">.</span><span class="hl kwd">toString</span><span class="hl opt">());</span>
                <span class="hl opt">}</span>
                System<span class="hl opt">.</span>out<span class="hl opt">.</span><span class="hl kwd">append</span><span class="hl opt">(</span><span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">);</span>

                <span class="hl kwb">int</span> total <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
                <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwa">final</span> Creature creature <span class="hl opt">:</span> creatures<span class="hl opt">) {</span>
                    total <span class="hl opt">+=</span> creature<span class="hl opt">.</span><span class="hl kwd">printAndGetCount</span><span class="hl opt">();</span>
                    <span class="hl kwd">printNumber</span><span class="hl opt">(</span>creature<span class="hl opt">.</span><span class="hl kwd">getSameCount</span><span class="hl opt">());</span>
                <span class="hl opt">}</span>
                <span class="hl kwd">printNumber</span><span class="hl opt">(</span>total<span class="hl opt">);</span>
                System<span class="hl opt">.</span>out<span class="hl opt">.</span><span class="hl kwd">append</span><span class="hl opt">(</span><span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">);</span>
                <span class="hl kwa">if</span> <span class="hl opt">(</span>isFirst<span class="hl opt">) {</span>
                    firstHasNotFinished <span class="hl opt">=</span> false<span class="hl opt">;</span>
                    lock<span class="hl opt">.</span><span class="hl kwd">notify</span><span class="hl opt">();</span>
                <span class="hl opt">}</span>
            <span class="hl opt">}</span>
            <span class="hl kwa">return</span> true<span class="hl opt">;</span>
        <span class="hl opt">}</span>
    
        <span class="hl kwa">private</span> <span class="hl kwb">void</span> <span class="hl kwd">printNumber</span><span class="hl opt">(</span><span class="hl kwa">final</span> <span class="hl kwb">int</span> n<span class="hl opt">) {</span>
            <span class="hl kwa">final</span> String nStr <span class="hl opt">=</span> Integer<span class="hl opt">.</span><span class="hl kwd">toString</span><span class="hl opt">(</span>n<span class="hl opt">);</span>

            <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwb">int</span> i <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> i <span class="hl opt">&lt;</span> nStr<span class="hl opt">.</span><span class="hl kwd">length</span><span class="hl opt">();</span> i<span class="hl opt">++) {</span>
                System<span class="hl opt">.</span>out<span class="hl opt">.</span><span class="hl kwd">append</span><span class="hl opt">(</span><span class="hl str">' '</span><span class="hl opt">)</span>
                        <span class="hl opt">.</span><span class="hl kwd">append</span><span class="hl opt">(</span>NUMBERS<span class="hl opt">[</span>Character<span class="hl opt">.</span><span class="hl kwd">getNumericValue</span><span class="hl opt">(</span>nStr<span class="hl opt">.</span><span class="hl kwd">charAt</span><span class="hl opt">(</span>i<span class="hl opt">))]);</span>
            <span class="hl opt">}</span>
            System<span class="hl opt">.</span>out<span class="hl opt">.</span><span class="hl kwd">append</span><span class="hl opt">(</span><span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">);</span>
        <span class="hl opt">}</span>
    <span class="hl opt">}</span>

    <span class="hl kwa">private static</span> <span class="hl kwb">void</span> <span class="hl kwd">startMeeting</span><span class="hl opt">(</span><span class="hl kwa">final</span> <span class="hl kwb">boolean</span> isFirst
            <span class="hl opt">,</span> <span class="hl kwa">final</span> <span class="hl kwb">int</span> n
            <span class="hl opt">,</span> <span class="hl kwa">final</span> Colour<span class="hl opt">...</span> colours<span class="hl opt">) {</span>
        <span class="hl kwa">final</span> <span class="hl kwb">int</span> len <span class="hl opt">=</span> colours<span class="hl opt">.</span>length<span class="hl opt">;</span>
        <span class="hl kwa">final</span> MeetingPlace place <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">MeetingPlace</span><span class="hl opt">(</span>n<span class="hl opt">);</span>
        <span class="hl kwa">final</span> Creature<span class="hl opt">[]</span> creatures <span class="hl opt">=</span> <span class="hl kwa">new</span> Creature<span class="hl opt">[</span>len<span class="hl opt">];</span>
        <span class="hl kwa">final</span> Phaser latch
                <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">CreaturePhaser</span><span class="hl opt">(</span>isFirst<span class="hl opt">,</span> colours<span class="hl opt">,</span> creatures<span class="hl opt">,</span> len<span class="hl opt">);</span>

        <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwb">int</span> i <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> i <span class="hl opt">&lt;</span> creatures<span class="hl opt">.</span>length<span class="hl opt">;</span> i<span class="hl opt">++) {</span>
            creatures<span class="hl opt">[</span>i<span class="hl opt">] =</span> <span class="hl kwa">new</span> <span class="hl kwd">Creature</span><span class="hl opt">(</span>place<span class="hl opt">,</span> colours<span class="hl opt">[</span>i<span class="hl opt">],</span> latch<span class="hl opt">);</span>
            creatures<span class="hl opt">[</span>i<span class="hl opt">].</span><span class="hl kwd">start</span><span class="hl opt">();</span>
        <span class="hl opt">}</span>
    <span class="hl opt">}</span>

    <span class="hl kwa">public static</span> <span class="hl kwb">void</span> <span class="hl kwd">main</span><span class="hl opt">(</span><span class="hl kwa">final</span> String<span class="hl opt">[]</span> args<span class="hl opt">) {</span>
        <span class="hl kwb">int</span> n <span class="hl opt">=</span> Integer<span class="hl opt">.</span><span class="hl kwd">parseInt</span><span class="hl opt">(</span>args<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">]);</span>

        <span class="hl kwd">startMeeting</span><span class="hl opt">(</span>true<span class="hl opt">,</span> n<span class="hl opt">,</span> Colour<span class="hl opt">.</span>BLUE<span class="hl opt">,</span> Colour<span class="hl opt">.</span>RED<span class="hl opt">,</span> Colour<span class="hl opt">.</span>YELLOW<span class="hl opt">);</span>
        <span class="hl kwd">startMeeting</span><span class="hl opt">(</span>false<span class="hl opt">,</span> n<span class="hl opt">,</span> Colour<span class="hl opt">.</span>BLUE<span class="hl opt">,</span> Colour<span class="hl opt">.</span>RED<span class="hl opt">,</span> Colour<span class="hl opt">.</span>YELLOW<span class="hl opt">,</span>
                Colour<span class="hl opt">.</span>RED<span class="hl opt">,</span> Colour<span class="hl opt">.</span>YELLOW<span class="hl opt">,</span> Colour<span class="hl opt">.</span>BLUE<span class="hl opt">,</span> Colour<span class="hl opt">.</span>RED<span class="hl opt">,</span>
                Colour<span class="hl opt">.</span>YELLOW<span class="hl opt">,</span> Colour<span class="hl opt">.</span>RED<span class="hl opt">,</span> Colour<span class="hl opt">.</span>BLUE<span class="hl opt">);</span>
        <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwa">final</span> Colour c1 <span class="hl opt">:</span> Colour<span class="hl opt">.</span><span class="hl kwd">values</span><span class="hl opt">()) {</span>
            <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwa">final</span> Colour c2 <span class="hl opt">:</span> Colour<span class="hl opt">.</span><span class="hl kwd">values</span><span class="hl opt">()) {</span>
                System<span class="hl opt">.</span>out<span class="hl opt">.</span><span class="hl kwd">append</span><span class="hl opt">(</span>c1<span class="hl opt">.</span><span class="hl kwd">toString</span><span class="hl opt">())</span>
                        <span class="hl opt">.</span><span class="hl kwd">append</span><span class="hl opt">(</span><span class="hl str">&quot; + &quot;</span><span class="hl opt">)</span>
                        <span class="hl opt">.</span><span class="hl kwd">append</span><span class="hl opt">(</span>c2<span class="hl opt">.</span><span class="hl kwd">toString</span><span class="hl opt">())</span>
                        <span class="hl opt">.</span><span class="hl kwd">append</span><span class="hl opt">(</span><span class="hl str">&quot; -&gt; &quot;</span><span class="hl opt">)</span>
                        <span class="hl opt">.</span><span class="hl kwd">append</span><span class="hl opt">(</span>c1<span class="hl opt">.</span><span class="hl kwd">complement</span><span class="hl opt">(</span>c2<span class="hl opt">).</span><span class="hl kwd">toString</span><span class="hl opt">())</span>
                        <span class="hl opt">.</span><span class="hl kwd">append</span><span class="hl opt">(</span><span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">);</span>
            <span class="hl opt">}</span>
        <span class="hl opt">}</span>
        System<span class="hl opt">.</span>out<span class="hl opt">.</span><span class="hl kwd">append</span><span class="hl opt">(</span><span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">);</span>
    <span class="hl opt">}</span>
<span class="hl opt">}</span>
