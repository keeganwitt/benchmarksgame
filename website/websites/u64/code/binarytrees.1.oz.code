<span class="hl slc">% The Computer Language Benchmarks Game</span>
<span class="hl slc">% http://benchmarksgame.alioth.debian.org/    </span>
<span class="hl slc">% contributed by Isaac Gouy</span>

<span class="hl kwa">functor</span>
<span class="hl kwa">import</span> Application System

<span class="hl kwa">define</span>
   <span class="hl opt">[</span>Arg<span class="hl opt">] = {</span>Application<span class="hl opt">.</span>getArgs plain<span class="hl opt">}</span>
   N <span class="hl opt">= {</span>String<span class="hl opt">.</span>toInt Arg<span class="hl opt">}</span>

   Min_ <span class="hl opt">=</span> <span class="hl num">4</span>
   Max_ <span class="hl opt">= {</span>Max Min_<span class="hl opt">+</span><span class="hl num">2</span> N<span class="hl opt">}</span>
   StretchDepth <span class="hl opt">=</span> Max_ <span class="hl opt">+</span> <span class="hl num">1</span>
   LongLivedTree 

   <span class="hl kwa">fun</span> <span class="hl opt">{</span>NewTree I D<span class="hl opt">}</span>
      <span class="hl kwa">if</span> D <span class="hl opt">==</span> <span class="hl num">0</span> <span class="hl kwa">then</span>
         <span class="hl kwd">tree</span><span class="hl opt">(</span>I nil nil<span class="hl opt">)</span>
      <span class="hl kwa">else</span> 
         <span class="hl kwd">tree</span><span class="hl opt">(</span>I <span class="hl opt">{</span>NewTree <span class="hl num">2</span><span class="hl opt">*</span>I<span class="hl opt">-</span><span class="hl num">1</span> D<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">} {</span>NewTree <span class="hl num">2</span><span class="hl opt">*</span>I D<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">})</span>
      <span class="hl kwa">end</span>
   <span class="hl kwa">end</span>

   <span class="hl kwa">fun</span> <span class="hl opt">{</span>ItemCheck T<span class="hl opt">}</span>
      <span class="hl kwa">if</span> T <span class="hl opt">==</span> nil <span class="hl kwa">then</span> <span class="hl num">0</span> 
      <span class="hl kwa">else</span> <span class="hl kwd">tree</span><span class="hl opt">(</span>I L R<span class="hl opt">) =</span> T <span class="hl kwa">in</span> I <span class="hl opt">+ {</span>ItemCheck L<span class="hl opt">} - {</span>ItemCheck R<span class="hl opt">}</span> <span class="hl kwa">end</span>
   <span class="hl kwa">end</span>

   <span class="hl kwa">proc</span> <span class="hl opt">{</span>ShowItemCheck S D T<span class="hl opt">}</span>
      <span class="hl opt">{</span>System<span class="hl opt">.</span>showInfo S <span class="hl opt">#</span> D <span class="hl opt">#</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span> <span class="hl str">check: &quot;</span> <span class="hl opt"># {</span>ItemCheck T<span class="hl opt">}}</span>
   <span class="hl kwa">end</span>

   <span class="hl kwa">proc</span> <span class="hl opt">{</span>ShowCheck I D Check<span class="hl opt">}</span>
      <span class="hl opt">{</span>System<span class="hl opt">.</span>showInfo <span class="hl num">2</span><span class="hl opt">*</span>I <span class="hl opt">#</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span> <span class="hl str">trees of depth &quot;</span> <span class="hl opt">#</span> D <span class="hl opt">#</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span> <span class="hl str">check: &quot;</span> <span class="hl opt">#</span> Check<span class="hl opt">}</span>
   <span class="hl kwa">end</span>

<span class="hl kwa">in</span>      
   <span class="hl opt">{</span>ShowItemCheck <span class="hl str">&quot;stretch tree of depth &quot;</span> StretchDepth <span class="hl opt">{</span>NewTree <span class="hl num">0</span> StretchDepth<span class="hl opt">}}</span>
   LongLivedTree <span class="hl opt">= {</span>NewTree <span class="hl num">0</span> Max_<span class="hl opt">}</span>

   <span class="hl kwa">for</span> D <span class="hl kwa">in</span> Min_<span class="hl opt">;</span> D<span class="hl opt">=&lt;</span>Max_<span class="hl opt">;</span> D<span class="hl opt">+</span><span class="hl num">2</span> <span class="hl kwa">do</span> 
      N <span class="hl opt">= {</span>Pow <span class="hl num">2</span> Max_<span class="hl opt">-</span>D<span class="hl opt">+</span>Min_<span class="hl opt">}</span>
      Check <span class="hl opt">= {</span>NewCell <span class="hl num">0</span><span class="hl opt">}</span>
   <span class="hl kwa">in</span>
      <span class="hl kwa">for</span> I <span class="hl kwa">in</span> <span class="hl num">1</span><span class="hl opt">..</span>N <span class="hl kwa">do</span>
         Check <span class="hl opt">:= &#64;</span>Check <span class="hl opt">+ {</span>ItemCheck <span class="hl opt">{</span>NewTree I D<span class="hl opt">}} + {</span>ItemCheck <span class="hl opt">{</span>NewTree <span class="hl opt">~</span>I D<span class="hl opt">}}</span>
      <span class="hl kwa">end</span>
      <span class="hl opt">{</span>ShowCheck N D <span class="hl opt">&#64;</span>Check<span class="hl opt">}</span>
   <span class="hl kwa">end</span>

   <span class="hl opt">{</span>ShowItemCheck <span class="hl str">&quot;long lived tree of depth &quot;</span> Max_ LongLivedTree<span class="hl opt">}</span>
   <span class="hl opt">{</span>Application<span class="hl opt">.</span>exit <span class="hl num">0</span><span class="hl opt">}</span>   
<span class="hl kwa">end</span>
