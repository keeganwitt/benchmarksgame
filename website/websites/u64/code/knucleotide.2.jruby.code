<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://benchmarksgame.alioth.debian.org</span>
<span class="hl slc">#</span>
<span class="hl slc"># contributed by jose fco. gonzalez</span>
<span class="hl slc"># modified by Sokolov Yura</span>

seq <span class="hl opt">=</span> String<span class="hl opt">.</span>new

<span class="hl kwa">def</span> <span class="hl kwd">frecuency</span><span class="hl opt">(</span> seq<span class="hl opt">,</span>length )
    n<span class="hl opt">,</span> table <span class="hl opt">=</span> seq<span class="hl opt">.</span>length <span class="hl opt">-</span> length <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">,</span> Hash<span class="hl opt">.</span><span class="hl kwd">new</span><span class="hl opt">(</span><span class="hl num">0</span>)
    f<span class="hl opt">,</span> i <span class="hl opt">=</span> <span class="hl kwa">nil</span><span class="hl opt">,</span> <span class="hl kwa">nil</span>
    <span class="hl opt">(</span><span class="hl num">0</span> <span class="hl opt">...</span> length)<span class="hl opt">.</span>each <span class="hl kwa">do</span> <span class="hl opt">|</span>f<span class="hl opt">|</span>
        <span class="hl opt">(</span>f <span class="hl opt">...</span> n)<span class="hl opt">.</span><span class="hl kwd">step</span><span class="hl opt">(</span>length) <span class="hl kwa">do</span> <span class="hl opt">|</span>i<span class="hl opt">|</span>
            table<span class="hl opt">[</span>seq<span class="hl opt">[</span>i<span class="hl opt">,</span>length<span class="hl opt">]] +=</span> <span class="hl num">1</span>
        <span class="hl kwa">end</span>
    <span class="hl kwa">end</span>
    <span class="hl opt">[</span>n<span class="hl opt">,</span>table<span class="hl opt">]</span>

<span class="hl kwa">end</span>

<span class="hl kwa">def</span> <span class="hl kwd">sort_by_freq</span><span class="hl opt">(</span> seq<span class="hl opt">,</span>length )
    n<span class="hl opt">,</span>table <span class="hl opt">=</span> <span class="hl kwd">frecuency</span><span class="hl opt">(</span> seq<span class="hl opt">,</span>length )
    a<span class="hl opt">,</span> b<span class="hl opt">,</span> v <span class="hl opt">=</span> <span class="hl kwa">nil</span><span class="hl opt">,</span> <span class="hl kwa">nil</span><span class="hl opt">,</span> <span class="hl kwa">nil</span>
    table<span class="hl opt">.</span>sort<span class="hl esc">{|a,b| b[1] &lt;=&gt; a[1]}</span><span class="hl opt">.</span>each <span class="hl kwa">do</span> <span class="hl opt">|</span>v<span class="hl opt">|</span>
        puts <span class="hl str">&quot;%s %.3f&quot;</span> <span class="hl opt">% [</span>v<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">].</span>upcase<span class="hl opt">,((</span>v<span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">]*</span><span class="hl num">100</span>)<span class="hl opt">.</span>to_f<span class="hl opt">/</span>n)<span class="hl opt">]</span>
    <span class="hl kwa">end</span>
    puts
<span class="hl kwa">end</span>

<span class="hl kwa">def</span> <span class="hl kwd">find_seq</span><span class="hl opt">(</span> seq<span class="hl opt">,</span>s )
    n<span class="hl opt">,</span>table <span class="hl opt">=</span> <span class="hl kwd">frecuency</span><span class="hl opt">(</span> seq<span class="hl opt">,</span>s<span class="hl opt">.</span>length )
    puts <span class="hl str">&quot;</span><span class="hl esc">#{table[s].to_s}</span><span class="hl str">\t</span><span class="hl esc">#{s.upcase}</span><span class="hl str">&quot;</span>
<span class="hl kwa">end</span>

line <span class="hl opt">=</span> <span class="hl kwc">STDIN</span><span class="hl opt">.</span>gets <span class="hl kwa">while</span> line <span class="hl opt">!</span>~ <span class="hl kwc">/^&gt;THREE/</span><span class="hl opt">[</span>
line <span class="hl opt">=</span> <span class="hl kwc">STDIN</span><span class="hl opt">.</span>gets
<span class="hl kwa">while</span> <span class="hl opt">(</span>line <span class="hl opt">!</span>~ <span class="hl kwc">/^&gt;/</span>) <span class="hl opt">&amp;</span> line <span class="hl kwa">do</span>
    seq <span class="hl opt">&lt;&lt;</span> line<span class="hl opt">.</span>chomp
    line <span class="hl opt">=</span> <span class="hl kwc">STDIN</span><span class="hl opt">.</span>gets
<span class="hl kwa">end</span>

<span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">].</span>each <span class="hl esc">{|i| sort_by_freq( seq,i ) }</span>

<span class="hl opt">%</span><span class="hl kwd">w</span><span class="hl opt">(</span>ggt ggta ggtatt ggtattttaatt ggtattttaatttatagt)<span class="hl opt">.</span>each<span class="hl esc">{|s| find_seq( seq,s) }</span>
