<span class="hl slc">! The Computer Language Benchmarks Game</span>
<span class="hl slc">! http://benchmarksgame.alioth.debian.org/</span>
<span class="hl slc">!</span>
<span class="hl slc">! contributed by Andrei Jirnyi, modified from version by Steve Decker</span>
<span class="hl slc">!</span>
<span class="hl slc">! compilation:</span>
<span class="hl slc">!   ifort -ipo -O3 revcomp.f90</span>

<span class="hl kwa">program</span> revcomp
  <span class="hl kwa">use</span> iso_fortran_env
  <span class="hl kwa">implicit none</span>

  <span class="hl kwa">integer</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">),</span> <span class="hl kwa">parameter</span> <span class="hl opt">::</span> iEndStr <span class="hl opt">=</span> <span class="hl kwd">iachar</span><span class="hl opt">(</span><span class="hl str">&quot;&gt;&quot;</span><span class="hl opt">),</span> EOL<span class="hl opt">=</span><span class="hl num">10</span>
  <span class="hl kwa">integer</span><span class="hl opt">,</span>   <span class="hl kwa">parameter</span> <span class="hl opt">::</span> LW <span class="hl opt">=</span> <span class="hl num">60</span><span class="hl opt">,</span> BUFSIZE <span class="hl opt">=</span> <span class="hl num">1000</span> 

  <span class="hl kwa">integer</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">),</span> <span class="hl kwa">dimension</span><span class="hl opt">(:),</span> allocatable <span class="hl opt">::</span> <span class="hl kwa">data</span><span class="hl opt">,</span> w
  <span class="hl kwa">integer</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">) ::</span> c<span class="hl opt">,</span> <span class="hl kwd">buf</span><span class="hl opt">(</span>BUFSIZE<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span>
  <span class="hl kwa">integer</span> <span class="hl opt">::</span> i<span class="hl opt">=</span><span class="hl num">0</span><span class="hl opt">,</span> j<span class="hl opt">=</span><span class="hl num">0</span><span class="hl opt">,</span> k<span class="hl opt">=</span><span class="hl num">0</span><span class="hl opt">,</span> dsize <span class="hl opt">=</span> <span class="hl num">1000000</span><span class="hl opt">,</span> newdsize<span class="hl opt">,</span> stat
  <span class="hl kwa">logical</span> <span class="hl opt">::</span> intitle <span class="hl opt">= .</span>true<span class="hl opt">.</span>

  <span class="hl kwa">integer</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">),</span> <span class="hl kwa">dimension</span><span class="hl opt">(</span>LW<span class="hl opt">) ::</span> title
  <span class="hl kwa">character</span><span class="hl opt">(</span>len<span class="hl opt">=</span>LW<span class="hl opt">) ::</span> stitle
  <span class="hl kwa">equivalence</span><span class="hl opt">(</span>title<span class="hl opt">,</span> stitle<span class="hl opt">)</span>
  
  <span class="hl kwa">integer</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">),</span> <span class="hl kwa">dimension</span><span class="hl opt">(</span><span class="hl num">65</span><span class="hl opt">:</span><span class="hl num">121</span><span class="hl opt">),</span><span class="hl kwa">parameter</span> <span class="hl opt">:: &amp;</span>
       Complement <span class="hl opt">=</span> <span class="hl kwd">iachar</span><span class="hl opt">((/</span> <span class="hl str">&quot;T&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;V&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;G&quot;</span><span class="hl opt">, &amp;</span>
       <span class="hl str">&quot;H&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;E&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;F&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;C&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;D&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;I&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;J&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;M&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;L&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;K&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;N&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;O&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;P&quot;</span><span class="hl opt">,  &amp;</span>
       <span class="hl str">&quot;Q&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;Y&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;S&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;A&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;A&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;B&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;W&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;X&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;R&quot;</span><span class="hl opt">, (</span><span class="hl str">&quot; &quot;</span><span class="hl opt">,</span> stat <span class="hl opt">=</span> <span class="hl num">90</span><span class="hl opt">,</span> <span class="hl num">96</span><span class="hl opt">),  &amp;</span>
       <span class="hl str">&quot;T&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;V&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;G&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;H&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;E&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;F&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;C&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;D&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;I&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;J&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;M&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;L&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;K&quot;</span><span class="hl opt">,  &amp;</span>
       <span class="hl str">&quot;N&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;O&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;P&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;Q&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;Y&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;S&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;A&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;A&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;B&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;W&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;X&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;R&quot;</span> <span class="hl opt">/))</span>

  <span class="hl slc">! Unformatted I/O is faster in ifort under linux.</span>
  <span class="hl kwa">close</span><span class="hl opt">(</span>input_unit<span class="hl opt">)</span>
  <span class="hl kwa">open</span><span class="hl opt">(</span>unit<span class="hl opt">=</span>input_unit<span class="hl opt">,</span>access<span class="hl opt">=</span><span class="hl str">'stream'</span><span class="hl opt">,</span>form<span class="hl opt">=</span><span class="hl str">'unformatted'</span><span class="hl opt">)</span>
  <span class="hl kwa">close</span><span class="hl opt">(</span>output_unit<span class="hl opt">)</span>
  <span class="hl kwa">open</span><span class="hl opt">(</span>unit<span class="hl opt">=</span>output_unit<span class="hl opt">,</span> access<span class="hl opt">=</span><span class="hl str">'stream'</span><span class="hl opt">,</span>form<span class="hl opt">=</span><span class="hl str">'unformatted'</span><span class="hl opt">)</span>

  <span class="hl kwd">allocate</span><span class="hl opt">(</span><span class="hl kwa">data</span><span class="hl opt">(</span>dsize<span class="hl opt">))</span>  
  k <span class="hl opt">=</span> dsize    <span class="hl slc">! position in the data array, decrementing</span>

  intitle <span class="hl opt">= .</span>true<span class="hl opt">.</span>
  readFile<span class="hl opt">:</span> <span class="hl kwa">do</span>
     buf <span class="hl opt">=</span> EOL
     <span class="hl kwa">read</span><span class="hl opt">(</span>input_unit<span class="hl opt">,</span> iostat<span class="hl opt">=</span>stat<span class="hl opt">)</span> <span class="hl kwd">buf</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">:</span>BUFSIZE<span class="hl opt">)</span>
     i <span class="hl opt">=</span> <span class="hl num">0</span>     <span class="hl slc">! position in buffer</span>
     readBlock<span class="hl opt">:</span> <span class="hl kwa">do</span>
        <span class="hl kwa">if</span><span class="hl opt">(</span>intitle<span class="hl opt">)</span> <span class="hl kwa">then</span>
           readTitle<span class="hl opt">:</span> <span class="hl kwa">do</span>           <span class="hl slc">! read title until EOL</span>
              i <span class="hl opt">=</span> i<span class="hl opt">+</span><span class="hl num">1</span>
              <span class="hl kwa">if</span><span class="hl opt">(</span>i<span class="hl opt">&gt;</span>BUFSIZE<span class="hl opt">)</span> cycle readFile
              c <span class="hl opt">=</span> <span class="hl kwd">buf</span><span class="hl opt">(</span>i<span class="hl opt">)</span>
              <span class="hl kwa">if</span><span class="hl opt">(</span>c <span class="hl opt">/=</span> EOL<span class="hl opt">)</span> <span class="hl kwa">then</span>
                 j <span class="hl opt">=</span> j<span class="hl opt">+</span><span class="hl num">1</span>           <span class="hl slc">! position in title</span>
                 <span class="hl kwd">title</span><span class="hl opt">(</span>j<span class="hl opt">) =</span> c
              <span class="hl kwa">else</span>
                 intitle <span class="hl opt">= .</span>false<span class="hl opt">.</span>
                 exit readTitle
              <span class="hl kwa">end if</span>
           <span class="hl kwa">end do</span> readTitle
        <span class="hl kwa">else</span>
           readData<span class="hl opt">:</span> <span class="hl kwa">do</span>
              i <span class="hl opt">=</span> i<span class="hl opt">+</span><span class="hl num">1</span>
              <span class="hl kwa">if</span><span class="hl opt">(</span>i<span class="hl opt">&gt;</span>BUFSIZE<span class="hl opt">)</span> cycle readFile
              c <span class="hl opt">=</span> <span class="hl kwd">buf</span><span class="hl opt">(</span>i<span class="hl opt">)</span>
              <span class="hl kwa">if</span><span class="hl opt">(</span>c <span class="hl opt">/=</span> EOL<span class="hl opt">)</span> <span class="hl kwa">then</span>   
                 <span class="hl kwa">data</span><span class="hl opt">(</span>k<span class="hl opt">) =</span> <span class="hl kwd">Complement</span><span class="hl opt">(</span>c<span class="hl opt">)</span>
                 k <span class="hl opt">=</span> k<span class="hl opt">-</span><span class="hl num">1</span>
              <span class="hl kwa">else</span>                 <span class="hl slc">! === EOL</span>
                 <span class="hl kwa">if</span><span class="hl opt">(</span>k <span class="hl opt">&lt;</span> <span class="hl num">256</span><span class="hl opt">)</span> <span class="hl kwa">then</span>  <span class="hl slc">! reallocate array</span>
                    newdsize <span class="hl opt">=</span> dsize<span class="hl opt">*</span><span class="hl num">3</span>
                    <span class="hl kwd">allocate</span><span class="hl opt">(</span><span class="hl kwd">w</span><span class="hl opt">(</span>newdsize<span class="hl opt">))</span>
                    <span class="hl kwd">w</span><span class="hl opt">(</span>newdsize<span class="hl opt">-</span>dsize<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">:) =</span> <span class="hl kwa">data</span>
                    <span class="hl kwa">call</span> <span class="hl kwd">move_alloc</span><span class="hl opt">(</span>w<span class="hl opt">,</span><span class="hl kwa">data</span><span class="hl opt">)</span>
                    k <span class="hl opt">=</span> k<span class="hl opt">+</span>newdsize<span class="hl opt">-</span>dsize
                    dsize <span class="hl opt">=</span> newdsize
                 <span class="hl kwa">end if</span>
                 
                 <span class="hl kwa">if</span><span class="hl opt">(</span>stat <span class="hl opt">/=</span><span class="hl num">0</span><span class="hl opt">)</span> <span class="hl kwa">then</span>
                    <span class="hl kwa">if</span><span class="hl opt">(</span>i<span class="hl opt">&lt;</span>BUFSIZE <span class="hl opt">.</span>and<span class="hl opt">.</span> <span class="hl kwd">buf</span><span class="hl opt">(</span>i<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">) ==</span> EOL<span class="hl opt">)</span> exit readFile
                 <span class="hl kwa">end if</span>
                 <span class="hl kwa">if</span><span class="hl opt">(</span><span class="hl kwd">buf</span><span class="hl opt">(</span>i<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">) ==</span> iEndStr<span class="hl opt">)</span> <span class="hl kwa">then</span>
                    intitle <span class="hl opt">= .</span>true<span class="hl opt">.</span>
                    <span class="hl kwa">call</span> print_data
                    j <span class="hl opt">=</span> <span class="hl num">0</span>
                    k <span class="hl opt">=</span> dsize
                    cycle readBlock
                 <span class="hl kwa">end if</span>
              <span class="hl kwa">end if</span>
           <span class="hl kwa">end do</span> readData
        <span class="hl kwa">end if</span>
     <span class="hl kwa">end do</span> readBlock
  <span class="hl kwa">end do</span> readFile
  <span class="hl kwa">call</span> print_data

<span class="hl kwa">contains</span>

  <span class="hl kwa">subroutine</span> print_data
    <span class="hl kwa">integer</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">),</span> <span class="hl kwa">dimension</span><span class="hl opt">(:),</span> allocatable<span class="hl opt">::</span> data1
    <span class="hl kwa">integer</span> <span class="hl opt">::</span> lines<span class="hl opt">,</span> last<span class="hl opt">,</span> dlen<span class="hl opt">,</span> d1len<span class="hl opt">,</span> i1<span class="hl opt">,</span> j1

    dlen <span class="hl opt">=</span> dsize<span class="hl opt">-</span>k
    lines <span class="hl opt">=</span> dlen<span class="hl opt">/</span>LW
    last <span class="hl opt">=</span> dlen <span class="hl opt">-</span> lines<span class="hl opt">*</span>LW

    d1len <span class="hl opt">=</span> lines<span class="hl opt">*(</span>LW<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span>
    <span class="hl kwa">if</span><span class="hl opt">(</span>last<span class="hl opt">&gt;</span><span class="hl num">0</span><span class="hl opt">)</span> d1len<span class="hl opt">=</span>d1len<span class="hl opt">+</span>last<span class="hl opt">+</span><span class="hl num">1</span>
    <span class="hl kwd">allocate</span><span class="hl opt">(</span><span class="hl kwd">data1</span><span class="hl opt">(</span>d1len<span class="hl opt">))</span>

    i1<span class="hl opt">=</span><span class="hl num">1</span><span class="hl opt">;</span> j1<span class="hl opt">=</span><span class="hl num">1</span><span class="hl opt">;</span>
    <span class="hl slc">! copy to data1, inserting EOL's</span>
    <span class="hl kwa">do</span> i1<span class="hl opt">=</span>k<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">,</span> dsize<span class="hl opt">-</span>last<span class="hl opt">,</span> LW
       <span class="hl kwd">data1</span><span class="hl opt">(</span>j1<span class="hl opt">:</span>j1<span class="hl opt">+</span>LW<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">) =</span> <span class="hl kwa">data</span><span class="hl opt">(</span>i1<span class="hl opt">:</span>i1<span class="hl opt">+</span>LW<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">)</span>
       <span class="hl kwd">data1</span><span class="hl opt">(</span>j1<span class="hl opt">+</span>LW<span class="hl opt">) =</span> EOL
       j1 <span class="hl opt">=</span> j1<span class="hl opt">+</span>LW<span class="hl opt">+</span><span class="hl num">1</span>
    <span class="hl kwa">end do</span>
    <span class="hl kwa">if</span><span class="hl opt">(</span>last<span class="hl opt">&gt;</span><span class="hl num">0</span><span class="hl opt">)</span> <span class="hl kwa">then</span>
       <span class="hl kwd">data1</span><span class="hl opt">(</span>d1len<span class="hl opt">-</span>last<span class="hl opt">:</span>d1len<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">) =</span> <span class="hl kwa">data</span><span class="hl opt">(</span>dsize<span class="hl opt">-</span>last<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">:</span>dsize<span class="hl opt">)</span>
       <span class="hl kwd">data1</span><span class="hl opt">(</span>d1len<span class="hl opt">) =</span> EOL
    <span class="hl kwa">end if</span>
    
    <span class="hl kwa">write</span><span class="hl opt">(</span>output_unit<span class="hl opt">)</span> <span class="hl kwd">trim</span><span class="hl opt">(</span><span class="hl kwd">stitle</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">:</span>j<span class="hl opt">)),</span> EOL
    <span class="hl kwa">write</span><span class="hl opt">(</span>output_unit<span class="hl opt">)</span> data1
    <span class="hl kwd">flush</span><span class="hl opt">(</span>output_unit<span class="hl opt">)</span>
    <span class="hl kwd">deallocate</span><span class="hl opt">(</span>data1<span class="hl opt">)</span>
  <span class="hl kwa">end subroutine</span> print_data

<span class="hl kwa">end program</span> revcomp
