<span class="hl com">{ The Computer Language Benchmarks Game</span>
<span class="hl com">  http://benchmarksgame.alioth.debian.org</span>
<span class="hl com"></span>
<span class="hl com">  contributed by Marc Weustink</span>
<span class="hl com">}</span>

<span class="hl com">{$mode objfpc}</span>

<span class="hl kwa">program</span> thread_ring<span class="hl opt">;</span>

<span class="hl kwa">uses</span>
  PThreads<span class="hl opt">;</span>

<span class="hl kwa">var</span>
  SemList<span class="hl opt">:</span> <span class="hl kwa">array</span><span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">.</span><span class="hl num">.503</span><span class="hl opt">]</span> <span class="hl kwa">of</span> TSemaphore<span class="hl opt">;</span>

  ThreadAttr<span class="hl opt">:</span> TThreadAttr<span class="hl opt">;</span>
  ThreadFuncAddr<span class="hl opt">:</span> TStartRoutine<span class="hl opt">;</span>
  FinishedSem<span class="hl opt">:</span> TSemaphore<span class="hl opt">;</span>
  Count<span class="hl opt">:</span> <span class="hl kwb">Integer</span><span class="hl opt">;</span>
  
<span class="hl kwa">function</span> <span class="hl kwd">ThreadFunc</span><span class="hl opt">(</span>AIndex<span class="hl opt">:</span> PtrInt<span class="hl opt">):</span> <span class="hl kwb">Pointer</span><span class="hl opt">;</span> <span class="hl kwa">cdecl</span><span class="hl opt">;</span>
<span class="hl kwa">var</span>
  MySem<span class="hl opt">,</span> NextSem<span class="hl opt">:</span> PSemaphore<span class="hl opt">;</span>
  Id<span class="hl opt">:</span> TThreadID<span class="hl opt">;</span>
<span class="hl kwa">begin</span>
  MySem <span class="hl opt">:= &#64;</span>SemList<span class="hl opt">[</span>AIndex<span class="hl opt">];</span>
  <span class="hl kwc">if</span> AIndex <span class="hl opt">&lt;</span> <span class="hl kwd">High</span><span class="hl opt">(</span>SemList<span class="hl opt">)</span>
  <span class="hl kwc">then</span> <span class="hl kwa">begin</span>
    NextSem <span class="hl opt">:=</span> MySem<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">;</span>
    <span class="hl kwd">sem_init</span><span class="hl opt">(</span>NextSem<span class="hl opt">,</span> <span class="hl num">0</span><span class="hl opt">,</span> <span class="hl num">0</span><span class="hl opt">);</span>
    <span class="hl kwd">pthread_create</span><span class="hl opt">(&#64;</span>Id<span class="hl opt">, &#64;</span>ThreadAttr<span class="hl opt">,</span> ThreadFuncAddr<span class="hl opt">,</span> <span class="hl kwb">Pointer</span><span class="hl opt">(</span>AIndex<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">));</span>
  <span class="hl kwa">end</span>
  <span class="hl kwc">else</span> NextSem <span class="hl opt">:= &#64;</span>SemList<span class="hl opt">[</span><span class="hl kwd">Low</span><span class="hl opt">(</span>SemList<span class="hl opt">)];</span>

  <span class="hl kwc">repeat</span>
    <span class="hl kwd">sem_wait</span><span class="hl opt">(</span>MySem<span class="hl opt">);</span>
    <span class="hl kwc">if</span> Count <span class="hl opt">=</span> <span class="hl num">0</span> <span class="hl kwc">then</span> <span class="hl kwa">begin</span>
      <span class="hl kwd">WriteLn</span><span class="hl opt">(</span>Aindex<span class="hl opt">);</span>
      <span class="hl kwd">sem_post</span><span class="hl opt">(</span>FinishedSem<span class="hl opt">);</span>
    <span class="hl kwa">end</span>
    <span class="hl kwc">else</span> <span class="hl kwa">begin</span>
      <span class="hl kwd">Dec</span><span class="hl opt">(</span>Count<span class="hl opt">);</span>
      <span class="hl kwd">sem_post</span><span class="hl opt">(</span>NextSem<span class="hl opt">);</span>
    <span class="hl kwa">end</span><span class="hl opt">;</span>
  <span class="hl kwc">until</span> <span class="hl kwb">False</span><span class="hl opt">;</span>
<span class="hl kwa">end</span><span class="hl opt">;</span>


<span class="hl kwa">var</span>
  n<span class="hl opt">:</span> <span class="hl kwb">Integer</span><span class="hl opt">;</span>
  Id<span class="hl opt">:</span> TThreadId<span class="hl opt">;</span>
<span class="hl kwa">begin</span>
  <span class="hl kwd">Val</span><span class="hl opt">(</span><span class="hl kwd">paramstr</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">),</span> count<span class="hl opt">,</span> n<span class="hl opt">);</span>
  <span class="hl kwc">if</span> n <span class="hl opt">&lt;&gt;</span> <span class="hl num">0</span> <span class="hl kwc">then</span> exit<span class="hl opt">;</span>

  <span class="hl kwd">sem_init</span><span class="hl opt">(</span>SemList<span class="hl opt">[</span><span class="hl kwd">Low</span><span class="hl opt">(</span>SemList<span class="hl opt">)],</span> <span class="hl num">0</span><span class="hl opt">,</span> <span class="hl num">1</span><span class="hl opt">);</span>
  <span class="hl kwd">sem_init</span><span class="hl opt">(</span>FinishedSem<span class="hl opt">,</span> <span class="hl num">0</span><span class="hl opt">,</span> <span class="hl num">0</span><span class="hl opt">);</span>

  <span class="hl kwd">pthread_attr_init</span><span class="hl opt">(&#64;</span>ThreadAttr<span class="hl opt">);</span>
  <span class="hl kwd">pthread_attr_setdetachstate</span><span class="hl opt">(&#64;</span>ThreadAttr<span class="hl opt">,</span> <span class="hl num">1</span><span class="hl opt">);</span>
  <span class="hl kwd">pthread_attr_setstacksize</span><span class="hl opt">(&#64;</span>ThreadAttr<span class="hl opt">,</span> <span class="hl num">1024</span> <span class="hl opt">*</span> <span class="hl num">16</span><span class="hl opt">);</span>

  ThreadFuncAddr <span class="hl opt">:=</span> <span class="hl kwd">TStartRoutine</span><span class="hl opt">(&#64;</span>ThreadFunc<span class="hl opt">);</span>
  <span class="hl kwd">pthread_create</span><span class="hl opt">(&#64;</span>Id<span class="hl opt">, &#64;</span>ThreadAttr<span class="hl opt">,</span> ThreadFuncAddr<span class="hl opt">,</span> <span class="hl kwb">Pointer</span><span class="hl opt">(</span><span class="hl kwd">PtrUInt</span><span class="hl opt">(</span><span class="hl kwd">Low</span><span class="hl opt">(</span>SemList<span class="hl opt">))));</span>

  <span class="hl kwd">sem_wait</span><span class="hl opt">(</span>FinishedSem<span class="hl opt">);</span>
<span class="hl kwa">end</span><span class="hl opt">.</span>
