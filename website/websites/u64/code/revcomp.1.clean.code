<span class="hl slc">// The Great Computer Language Shootout</span>
<span class="hl slc">// http://shootout.alioth.debian.org/</span>
<span class="hl slc">// </span>
<span class="hl slc">// contributed by Diederik van Arkel</span>

<span class="hl kwa">module</span> revcomp

<span class="hl kwa">import</span> StdEnv<span class="hl opt">,</span> LanguageShootout

Start world
	<span class="hl opt"># (</span>io<span class="hl opt">,</span>world<span class="hl opt">)	=</span> stdio world
	<span class="hl opt">#</span> io			<span class="hl opt">=</span> process io
	<span class="hl opt"># (</span>err<span class="hl opt">,</span>world<span class="hl opt">)	=</span> fclose io world
	<span class="hl opt">=</span> world

process <span class="hl opt">:: !*</span><span class="hl kwb">File</span> <span class="hl opt">-&gt; *</span><span class="hl kwb">File</span>
process io
	<span class="hl opt">#! (</span>line<span class="hl opt">,</span> io<span class="hl opt">) =</span> freadline io
	| size line <span class="hl opt">==</span> <span class="hl num">0</span>
		<span class="hl opt">=</span> io
	| line<span class="hl opt">.[</span><span class="hl num">0</span><span class="hl opt">] == '&gt;'</span>
		<span class="hl opt">#</span> io		<span class="hl opt">=</span> io <span class="hl opt">&lt;&lt;&lt;</span> line
		<span class="hl opt">=</span> extract io <span class="hl opt">[]</span>
	<span class="hl opt">=</span> process io

extract <span class="hl opt">:: !*</span><span class="hl kwb">File</span> <span class="hl opt">![*</span>String<span class="hl opt">] -&gt; *</span><span class="hl kwb">File</span>
extract io ls
	<span class="hl opt">#! (</span>line<span class="hl opt">,</span> io<span class="hl opt">) =</span> freadline io
	| size line <span class="hl opt">&gt;</span> <span class="hl num">0</span>
		| line<span class="hl opt">.[</span><span class="hl num">0</span><span class="hl opt">] == '&gt;'</span>
			<span class="hl opt">#</span> io		<span class="hl opt">=</span> write <span class="hl opt">(</span>revcomp ls<span class="hl opt">)</span> io
			<span class="hl opt">#</span> io		<span class="hl opt">=</span> io <span class="hl opt">&lt;&lt;&lt;</span> line
			<span class="hl opt">=</span> extract io <span class="hl opt">[]</span>
		| line<span class="hl opt">.[</span><span class="hl num">0</span><span class="hl opt">] == ';'</span>
			<span class="hl opt">=</span> extract io ls
		<span class="hl opt">=</span> extract io <span class="hl opt">[</span>line<span class="hl opt">:</span>ls<span class="hl opt">]</span>
	<span class="hl opt">=</span> write <span class="hl opt">(</span>revcomp ls<span class="hl opt">)</span> io

revcomp l
	<span class="hl opt">#</span> l <span class="hl opt">=</span> reverse l
	<span class="hl opt">#</span> s	<span class="hl opt">=</span> concat_strip l
	<span class="hl opt">=</span> build s

concat_strip <span class="hl opt">:: ![</span>String<span class="hl opt">] -&gt; .</span>String
concat_strip l
	<span class="hl opt">#</span> s <span class="hl opt">=</span> sizelist l
	<span class="hl opt">#</span> a <span class="hl opt">=</span> createArray s <span class="hl opt">' '</span>
	<span class="hl opt">=</span> copylist l a <span class="hl num">0</span>
<span class="hl kwa">where</span>
	sizelist <span class="hl opt">[] =</span> <span class="hl num">0</span>
	sizelist <span class="hl opt">[</span>h<span class="hl opt">:</span>t<span class="hl opt">] =</span> size h <span class="hl opt">-</span> <span class="hl num">1</span> <span class="hl opt">+</span> sizelist t
	
	copylist <span class="hl opt">:: ![</span>String<span class="hl opt">] !*</span>String <span class="hl opt">!</span><span class="hl kwb">Int</span> <span class="hl opt">-&gt; .</span>String
	copylist <span class="hl opt">[]</span> a i <span class="hl opt">=</span> a
	copylist <span class="hl opt">[</span>h<span class="hl opt">:</span>t<span class="hl opt">]</span> a i
		<span class="hl opt"># (</span>i<span class="hl opt">,</span>a<span class="hl opt">) =</span> scopy <span class="hl opt">(</span>size h <span class="hl opt">-</span> <span class="hl num">1</span><span class="hl opt">)</span> i <span class="hl num">0</span> a h
		<span class="hl opt">=</span> copylist t a i

scopy <span class="hl opt">::</span>
	<span class="hl opt">!</span><span class="hl kwb">Int</span>		<span class="hl slc">// end of copy source index</span>
	<span class="hl opt">!</span><span class="hl kwb">Int</span>		<span class="hl slc">// current target index</span>
	<span class="hl opt">!</span><span class="hl kwb">Int</span>		<span class="hl slc">// current source index</span>
	<span class="hl opt">!*{#</span><span class="hl kwb">Char</span><span class="hl opt">}</span>	<span class="hl slc">// target string</span>
	<span class="hl opt">!{#</span><span class="hl kwb">Char</span><span class="hl opt">}</span>	<span class="hl slc">// source string</span>
	<span class="hl opt">-&gt; (!</span><span class="hl kwb">Int</span><span class="hl opt">,!.{#</span><span class="hl kwb">Char</span><span class="hl opt">})</span>
scopy n i j s h
	| j <span class="hl opt">&gt;=</span> n <span class="hl opt">= (</span>i<span class="hl opt">,</span>s<span class="hl opt">)</span>
	<span class="hl opt">#!</span> s <span class="hl opt">= {</span>s <span class="hl opt">&amp; [</span>i<span class="hl opt">] =</span> h<span class="hl opt">.[</span>j<span class="hl opt">]}</span>
	<span class="hl opt">=</span> scopy n <span class="hl opt">(</span>i<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">) (</span>j<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span> s h


build <span class="hl opt">:: !*</span>String <span class="hl opt">-&gt; .</span>String
build iub
	<span class="hl opt">#!</span> e	<span class="hl opt">=</span> size iub <span class="hl opt">-</span> <span class="hl num">1</span>
	<span class="hl opt">=</span> build iub <span class="hl num">0</span> e complementArray
<span class="hl kwa">where</span>
	build <span class="hl opt">:: !*</span>String <span class="hl opt">!</span><span class="hl kwb">Int</span> <span class="hl opt">!</span><span class="hl kwb">Int</span> <span class="hl opt">!</span>String <span class="hl opt">-&gt; .</span>String
	build iub b e complementArray
		| b <span class="hl opt">&gt;=</span> e
			<span class="hl opt">=</span> iub
		<span class="hl opt">#!</span> cb	<span class="hl opt">=</span> iub<span class="hl opt">.[</span>b<span class="hl opt">]</span>
		   ce	<span class="hl opt">=</span> iub<span class="hl opt">.[</span>e<span class="hl opt">]</span>
		<span class="hl opt">#</span>  iub	<span class="hl opt">= {</span>iub <span class="hl opt">&amp; [</span>b<span class="hl opt">] =</span> complementArray<span class="hl opt">.[</span>toInt ce<span class="hl opt">]}</span>
		   iub	<span class="hl opt">= {</span>iub <span class="hl opt">&amp; [</span>e<span class="hl opt">] =</span> complementArray<span class="hl opt">.[</span>toInt cb<span class="hl opt">]}</span>
		<span class="hl opt">=</span> build iub <span class="hl opt">(</span>b<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">) (</span>e<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">)</span> complementArray
<span class="hl com">/*</span>
<span class="hl com">	= build iub 0 e</span>
<span class="hl com">where</span>
<span class="hl com">	build :: !*String !Int !Int -&gt; .String</span>
<span class="hl com">	build iub b e</span>
<span class="hl com">		| b &gt;= e</span>
<span class="hl com">			= iub</span>
<span class="hl com">		#! cb	= iub.[b]</span>
<span class="hl com">		   ce	= iub.[e]</span>
<span class="hl com">		   iub	= {iub &amp; [b] = complement ce}</span>
<span class="hl com">		   iub	= {iub &amp; [e] = complement cb}</span>
<span class="hl com">		= build iub (b+1) (e-1)</span>
<span class="hl com"></span>
<span class="hl com">complement :: !Char -&gt; Char</span>
<span class="hl com">complement c</span>
<span class="hl com">	= complementArray.[toInt c]</span>
<span class="hl com">*/</span>
complementArray <span class="hl opt">=:</span> buildComplement
<span class="hl kwa">where</span>
	buildComplement <span class="hl opt">::</span> String
	buildComplement
<span class="hl slc">//		# a	= {c \\ c &lt;- ['\x0'..'\xFF']}</span>
		<span class="hl opt">#</span> a <span class="hl opt">= {</span>toChar i <span class="hl esc">\\</span> i <span class="hl opt">&lt;- [</span><span class="hl num">0</span><span class="hl opt">.</span><span class="hl num">.255</span><span class="hl opt">]}</span>
		<span class="hl opt">=</span> build pairs a
	build <span class="hl opt">[]</span> a <span class="hl opt">=</span> a
	build <span class="hl opt">[(</span>f<span class="hl opt">,</span>t<span class="hl opt">):</span>ps<span class="hl opt">]</span> a
		<span class="hl opt">#</span> a <span class="hl opt">= {</span> a <span class="hl opt">&amp; [</span>toInt f<span class="hl opt">] =</span> t
				  <span class="hl opt">, [</span>toInt t<span class="hl opt">] =</span> f
				  <span class="hl opt">, [</span>toInt <span class="hl opt">(</span>toLower f<span class="hl opt">)] =</span> t
				  <span class="hl opt">, [</span>toInt <span class="hl opt">(</span>toLower t<span class="hl opt">)] =</span> f
			  <span class="hl opt">}</span>
		<span class="hl opt">=</span> build ps a
	pairs <span class="hl opt">= [('</span>A<span class="hl opt">','</span>T<span class="hl opt">')</span>
			<span class="hl opt">,('</span>C<span class="hl opt">','</span>G<span class="hl opt">')</span>
			<span class="hl opt">,('</span>B<span class="hl opt">','</span>V<span class="hl opt">')</span>
			<span class="hl opt">,('</span>D<span class="hl opt">','</span>H<span class="hl opt">')</span>
			<span class="hl opt">,('</span>K<span class="hl opt">','</span>M<span class="hl opt">')</span>
			<span class="hl opt">,('</span>R<span class="hl opt">','</span>Y<span class="hl opt">')</span>
			<span class="hl opt">]</span>

write s io
	<span class="hl opt">=</span> write s <span class="hl num">0</span> io
<span class="hl kwa">where</span>
	e	<span class="hl opt">=</span> size s

	write <span class="hl opt">:: !</span>String <span class="hl opt">!</span><span class="hl kwb">Int</span> <span class="hl opt">!*</span><span class="hl kwb">File</span> <span class="hl opt">-&gt; *</span><span class="hl kwb">File</span>
	write s b io
		| b <span class="hl opt">&gt;=</span> e
			<span class="hl opt">=</span> io
		<span class="hl opt">#!</span> io	<span class="hl opt">=</span> io <span class="hl opt">&lt;&lt;&lt; (</span>s<span class="hl opt">%(</span>b<span class="hl opt">,</span>b<span class="hl opt">+</span><span class="hl num">59</span><span class="hl opt">)) &lt;&lt;&lt; '</span><span class="hl esc">\n</span><span class="hl opt">'</span>
<span class="hl slc">//		#! io	= (fwritesubstring b (min (e-b) 60) s io) &lt;&lt;&lt; '\n'</span>
		<span class="hl opt">=</span> write s <span class="hl opt">(</span>b<span class="hl opt">+</span><span class="hl num">60</span><span class="hl opt">)</span> io
