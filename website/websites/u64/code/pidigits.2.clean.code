<span class="hl com">/* The Great Computer Language Shootout </span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com"> </span>
<span class="hl com">   contributed by Isaac Gouy (Clean novice)</span>
<span class="hl com">*/</span>

<span class="hl kwa">module</span> pidigits
<span class="hl kwa">import</span> StdEnv<span class="hl opt">,</span>LanguageShootout<span class="hl opt">,</span>BigInt

Start <span class="hl opt">=</span> format <span class="hl num">1 1</span> <span class="hl opt">(</span>stream argi <span class="hl opt">[]</span> unit ts<span class="hl opt">)</span> <span class="hl str">&quot;&quot;</span>     
   
stream n digits z <span class="hl opt">[</span>x<span class="hl opt">:</span>xs<span class="hl opt">]</span> 
   | n <span class="hl opt">&gt;</span> <span class="hl num">0</span> 
      | isSafe z y 
         <span class="hl opt">=</span> stream <span class="hl opt">(</span>n<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">) (</span>digits <span class="hl opt">++ [</span>toChar<span class="hl opt">(</span>y <span class="hl opt">+</span> <span class="hl num">48</span><span class="hl opt">)])(</span>produce z y<span class="hl opt">) [</span>x<span class="hl opt">:</span>xs<span class="hl opt">]</span>
         <span class="hl opt">=</span> stream n digits <span class="hl opt">(</span>consume z x<span class="hl opt">)</span> xs
   <span class="hl opt">=</span> digits
   <span class="hl kwa">where</span> y <span class="hl opt">=</span> next z   

ts <span class="hl opt">= [</span>T <span class="hl opt">(</span>toBigInt k<span class="hl opt">) (</span>toBigInt<span class="hl opt">(</span><span class="hl num">4</span><span class="hl opt">*</span>k<span class="hl opt">+</span><span class="hl num">2</span><span class="hl opt">))</span> zero <span class="hl opt">(</span>toBigInt<span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">*</span>k<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">))</span> <span class="hl esc">\\</span> k <span class="hl opt">&lt;- [</span><span class="hl num">1</span><span class="hl opt">..]]</span>
next z <span class="hl opt">=</span> entier <span class="hl opt">(</span>toReal <span class="hl opt">(</span>extract z three<span class="hl opt">))</span>
isSafe z n <span class="hl opt">= (</span>n <span class="hl opt">==</span> entier <span class="hl opt">(</span>toReal <span class="hl opt">(</span>extract z four<span class="hl opt">)) )</span>
produce z n <span class="hl opt">=</span> compose <span class="hl opt">(</span>T ten <span class="hl opt">(</span>toBigInt <span class="hl opt">(-</span><span class="hl num">10</span><span class="hl opt">*</span>n<span class="hl opt">))</span> zero one<span class="hl opt">)</span> z
consume z z` <span class="hl opt">=</span> compose z z` 

<span class="hl opt">::</span> Transform <span class="hl opt">=</span> T BigInt BigInt BigInt BigInt
extract <span class="hl opt">(</span>T q r s t<span class="hl opt">)</span> x <span class="hl opt">= (</span>q <span class="hl opt">*</span> x <span class="hl opt">+</span> r<span class="hl opt">) / (</span>s <span class="hl opt">*</span> x <span class="hl opt">+</span> t<span class="hl opt">)</span>
unit <span class="hl opt">=</span> T one zero zero one
compose <span class="hl opt">(</span>T q r s t<span class="hl opt">) (</span>T q` r` s` t`<span class="hl opt">)</span> 
	<span class="hl opt">= (</span>T <span class="hl opt">(</span>q<span class="hl opt">*</span>q` <span class="hl opt">+</span> r<span class="hl opt">*</span>s`<span class="hl opt">)(</span>q<span class="hl opt">*</span>r` <span class="hl opt">+</span> r<span class="hl opt">*</span>t`<span class="hl opt">)(</span>s<span class="hl opt">*</span>q` <span class="hl opt">+</span> t<span class="hl opt">*</span>s`<span class="hl opt">)(</span>s<span class="hl opt">*</span>r` <span class="hl opt">+</span> t<span class="hl opt">*</span>t`<span class="hl opt">))</span>	

<span class="hl slc">// BigInt constants</span>
three <span class="hl opt">=</span> toBigInt <span class="hl num">3</span>
four <span class="hl opt">=</span> toBigInt <span class="hl num">4</span>
ten <span class="hl opt">=</span> toBigInt <span class="hl num">10</span>	


format <span class="hl opt">:: !</span><span class="hl kwb">Int</span> <span class="hl opt">!</span><span class="hl kwb">Int</span> <span class="hl opt">!.[</span><span class="hl kwb">Char</span><span class="hl opt">] !{#</span><span class="hl kwb">Char</span><span class="hl opt">} -&gt; {#</span><span class="hl kwb">Char</span><span class="hl opt">}</span>
format n i <span class="hl opt">[]</span> s 
   | n <span class="hl opt">==</span> <span class="hl num">1</span>   <span class="hl opt">=</span> s
   | n <span class="hl opt">&lt;</span> <span class="hl num">10</span>   <span class="hl opt">=</span> format <span class="hl opt">(</span>n<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span> i <span class="hl opt">[] (</span>s <span class="hl opt">+++</span> <span class="hl str">&quot; &quot;</span><span class="hl opt">)</span>
              <span class="hl opt">= (</span>s <span class="hl opt">+++</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">:&quot;</span> <span class="hl opt">+++</span> toString <span class="hl opt">(</span>i<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">) +++</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">)</span>
format n i <span class="hl opt">[</span>c<span class="hl opt">:</span>digits<span class="hl opt">]</span> s
   | n <span class="hl opt">&lt;</span> <span class="hl num">10</span>   <span class="hl opt">=</span> format <span class="hl opt">(</span>n<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)(</span>i<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span> digits s`
              <span class="hl opt">=</span> format  <span class="hl num">1</span>   <span class="hl opt">(</span>i<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span> digits <span class="hl opt">(</span>s` <span class="hl opt">+++</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">:&quot;</span> <span class="hl opt">+++</span> toString i <span class="hl opt">+++</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">)</span>
   <span class="hl kwa">where</span> s` <span class="hl opt">=</span> s <span class="hl opt">+++</span> toString c



   
