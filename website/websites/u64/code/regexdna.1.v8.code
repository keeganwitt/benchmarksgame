<span class="hl slc">// The Computer Language Benchmarks Game</span>
<span class="hl slc">// http://benchmarksgame.alioth.debian.org/</span>
<span class="hl slc">//</span>
<span class="hl slc">// contributed by Jesse Millikan</span>
<span class="hl slc">// Base on the Ruby version by jose fco. gonzalez</span>

<span class="hl kwa">var</span> l<span class="hl opt">,</span> input <span class="hl opt">=</span> <span class="hl str">&quot;&quot;</span><span class="hl opt">,</span> ilen<span class="hl opt">,</span> clen<span class="hl opt">,</span> 
 seqs <span class="hl opt">= [</span>
  <span class="hl opt">/</span>agggtaaa|tttaccct<span class="hl opt">/</span>ig<span class="hl opt">,</span>
  <span class="hl opt">/</span><span class="hl kwc">[cgt]</span>gggtaaa|tttaccc<span class="hl kwc">[acg]</span><span class="hl opt">/</span>ig<span class="hl opt">,</span>
  <span class="hl opt">/</span>a<span class="hl kwc">[act]</span>ggtaaa|tttacc<span class="hl kwc">[agt]</span>t<span class="hl opt">/</span>ig<span class="hl opt">,</span>
  <span class="hl opt">/</span>ag<span class="hl kwc">[act]</span>gtaaa|tttac<span class="hl kwc">[agt]</span>ct<span class="hl opt">/</span>ig<span class="hl opt">,</span>
  <span class="hl opt">/</span>agg<span class="hl kwc">[act]</span>taaa|ttta<span class="hl kwc">[agt]</span>cct<span class="hl opt">/</span>ig<span class="hl opt">,</span>
  <span class="hl opt">/</span>aggg<span class="hl kwc">[acg]</span>aaa|ttt<span class="hl kwc">[cgt]</span>ccct<span class="hl opt">/</span>ig<span class="hl opt">,</span>
  <span class="hl opt">/</span>agggt<span class="hl kwc">[cgt]</span>aa|tt<span class="hl kwc">[acg]</span>accct<span class="hl opt">/</span>ig<span class="hl opt">,</span>
  <span class="hl opt">/</span>agggta<span class="hl kwc">[cgt]</span>a|t<span class="hl kwc">[acg]</span>taccct<span class="hl opt">/</span>ig<span class="hl opt">,</span>
  <span class="hl opt">/</span>agggtaa<span class="hl kwc">[cgt]</span>|<span class="hl kwc">[acg]</span>ttaccct<span class="hl opt">/</span>ig<span class="hl opt">],</span>
 subs <span class="hl opt">= {</span> 
  B<span class="hl opt">:</span> <span class="hl str">'(c|g|t)'</span><span class="hl opt">,</span> D<span class="hl opt">:</span> <span class="hl str">'(a|g|t)'</span><span class="hl opt">,</span> H<span class="hl opt">:</span> <span class="hl str">'(a|c|t)'</span><span class="hl opt">,</span> K<span class="hl opt">:</span> <span class="hl str">'(g|t)'</span><span class="hl opt">,</span> 
  M<span class="hl opt">:</span> <span class="hl str">'(a|c)'</span><span class="hl opt">,</span> N<span class="hl opt">:</span> <span class="hl str">'(a|c|g|t)'</span><span class="hl opt">,</span> R<span class="hl opt">:</span> <span class="hl str">'(a|g)'</span><span class="hl opt">,</span> S<span class="hl opt">:</span> <span class="hl str">'(c|t)'</span><span class="hl opt">,</span> 
  V<span class="hl opt">:</span> <span class="hl str">'(a|c|g)'</span><span class="hl opt">,</span> W<span class="hl opt">:</span> <span class="hl str">'(a|t)'</span><span class="hl opt">,</span> Y<span class="hl opt">:</span> <span class="hl str">'(c|t)'</span> <span class="hl opt">}</span>
 
<span class="hl slc">// readline strips the newline...</span>
<span class="hl kwa">while</span><span class="hl opt">(</span>l <span class="hl opt">=</span> <span class="hl kwd">readline</span><span class="hl opt">())</span> input <span class="hl opt">+=</span> l <span class="hl opt">+</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span>
ilen <span class="hl opt">=</span> input<span class="hl opt">.</span>length

<span class="hl slc">// There is no in-place substitution</span>
input <span class="hl opt">=</span> input<span class="hl opt">.</span><span class="hl kwd">replace</span><span class="hl opt">(/&gt;.*</span><span class="hl esc">\n</span>|<span class="hl esc">\n</span><span class="hl opt">/</span>g<span class="hl opt">,</span><span class="hl str">&quot;&quot;</span><span class="hl opt">)</span>
clen <span class="hl opt">=</span> input<span class="hl opt">.</span>length

<span class="hl kwa">for</span><span class="hl opt">(</span>i <span class="hl kwa">in</span> seqs<span class="hl opt">)</span>
 <span class="hl kwd">print</span><span class="hl opt">(</span>seqs<span class="hl kwc">[i]</span><span class="hl opt">.</span>source<span class="hl opt">, (</span>input<span class="hl opt">.</span><span class="hl kwd">match</span><span class="hl opt">(</span>seqs<span class="hl kwc">[i]</span><span class="hl opt">)</span> || <span class="hl opt">[]).</span>length<span class="hl opt">)</span>
 <span class="hl slc">// match returns null if no matches, so replace with empty</span>

<span class="hl kwa">for</span><span class="hl opt">(</span>k <span class="hl kwa">in</span> subs<span class="hl opt">)</span>
 input <span class="hl opt">=</span> input<span class="hl opt">.</span><span class="hl kwd">replace</span><span class="hl opt">(</span>k<span class="hl opt">,</span> subs<span class="hl kwc">[k]</span><span class="hl opt">,</span> <span class="hl str">&quot;g&quot;</span><span class="hl opt">)</span>
 <span class="hl slc">// search string, replacement string, flags</span>

<span class="hl kwd">print</span><span class="hl opt">()</span>
<span class="hl kwd">print</span><span class="hl opt">(</span>ilen<span class="hl opt">)</span>
<span class="hl kwd">print</span><span class="hl opt">(</span>clen<span class="hl opt">)</span>
<span class="hl kwd">print</span><span class="hl opt">(</span>input<span class="hl opt">.</span>length<span class="hl opt">)</span>

