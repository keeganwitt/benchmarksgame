<span class="hl slc">-- The Computer Language Benchmarks Game</span>
<span class="hl slc">-- http://benchmarksgame.alioth.debian.org</span>
<span class="hl slc">--</span>
<span class="hl slc">-- Contributed by Pascal Obry on 2005/04/07</span>

<span class="hl kwa">package</span> Fasta_Pck <span class="hl kwa">is</span>

   <span class="hl kwa">type</span> Real <span class="hl kwa">is new</span> <span class="hl kwb">Long_Float</span><span class="hl opt">;</span>

   <span class="hl kwa">type</span> Aminoacid <span class="hl kwa">is record</span>
      C <span class="hl opt">:</span> <span class="hl kwb">Character</span><span class="hl opt">;</span>
      P <span class="hl opt">:</span> Real<span class="hl opt">;</span>
   <span class="hl kwa">end record</span><span class="hl opt">;</span>

   <span class="hl kwa">type</span> Aminoacid_Set <span class="hl kwa">is array</span> <span class="hl opt">(</span><span class="hl kwb">Positive</span> <span class="hl kwa">range</span> <span class="hl opt">&lt;&gt;)</span> <span class="hl kwa">of</span> Aminoacid<span class="hl opt">;</span>

   <span class="hl kwa">procedure</span> Make_Cumulative <span class="hl opt">(</span>Gene_List <span class="hl opt">:</span> <span class="hl kwa">in out</span> Aminoacid_Set<span class="hl opt">);</span>

   <span class="hl kwa">function</span> Select_Random <span class="hl opt">(</span>Gene_List <span class="hl opt">:</span> <span class="hl kwa">in</span> Aminoacid_Set<span class="hl opt">)</span> <span class="hl kwa">return</span> <span class="hl kwb">Character</span><span class="hl opt">;</span>

   <span class="hl kwa">procedure</span> Make_Random_Fasta
     <span class="hl opt">(</span>Id<span class="hl opt">,</span> Desc <span class="hl opt">:</span> <span class="hl kwa">in</span> <span class="hl kwb">String</span><span class="hl opt">;</span> Gene_List <span class="hl opt">:</span> <span class="hl kwa">in</span> Aminoacid_Set<span class="hl opt">;</span> N <span class="hl opt">:</span> <span class="hl kwa">in</span> <span class="hl kwb">Positive</span><span class="hl opt">);</span>

   <span class="hl kwa">procedure</span> Make_Repeat_Fasta <span class="hl opt">(</span>Id<span class="hl opt">,</span> Desc<span class="hl opt">,</span> S <span class="hl opt">:</span> <span class="hl kwa">in</span> <span class="hl kwb">String</span><span class="hl opt">;</span> N <span class="hl opt">:</span> <span class="hl kwa">in</span> <span class="hl kwb">Positive</span><span class="hl opt">);</span>

<span class="hl kwa">end</span> Fasta_Pck<span class="hl opt">;</span>

<span class="hl kwa">with</span> Ada<span class="hl opt">.</span>Text_IO<span class="hl opt">;</span> <span class="hl kwa">use</span> Ada<span class="hl opt">.</span>Text_IO<span class="hl opt">;</span>

<span class="hl kwa">package body</span> Fasta_Pck <span class="hl kwa">is</span>

   Line_Length <span class="hl opt">:</span> <span class="hl kwa">constant</span> <span class="hl opt">:=</span> <span class="hl num">60</span><span class="hl opt">;</span>

   Last        <span class="hl opt">:</span> <span class="hl kwb">Natural</span> <span class="hl opt">:=</span> <span class="hl num">42</span><span class="hl opt">;</span>

   <span class="hl kwa">function</span> Gen_Random <span class="hl opt">(</span>Max <span class="hl opt">:</span> <span class="hl kwa">in</span> Real<span class="hl opt">)</span> <span class="hl kwa">return</span> Real<span class="hl opt">;</span>
   <span class="hl kwa">pragma</span> Inline <span class="hl opt">(</span>Gen_Random<span class="hl opt">);</span>

   <span class="hl kwa">function</span> Gen_Random <span class="hl opt">(</span>Max <span class="hl opt">:</span> <span class="hl kwa">in</span> Real<span class="hl opt">)</span> <span class="hl kwa">return</span> Real <span class="hl kwa">is</span>
      IM <span class="hl opt">:</span> <span class="hl kwa">constant</span> <span class="hl opt">:=</span> <span class="hl num">139</span>_968<span class="hl opt">;</span>
      IA <span class="hl opt">:</span> <span class="hl kwa">constant</span> <span class="hl opt">:=</span>   <span class="hl num">3</span>_877<span class="hl opt">;</span>
      IC <span class="hl opt">:</span> <span class="hl kwa">constant</span> <span class="hl opt">:=</span>  <span class="hl num">29</span>_573<span class="hl opt">;</span>
   <span class="hl kwa">begin</span>
      Last <span class="hl opt">:= (</span>Last <span class="hl opt">*</span> IA <span class="hl opt">+</span> IC<span class="hl opt">)</span> <span class="hl kwa">mod</span> IM<span class="hl opt">;</span>
      <span class="hl kwa">return</span> <span class="hl opt">(</span>Max <span class="hl opt">*</span> Real <span class="hl opt">(</span>Last<span class="hl opt">)) /</span> Real <span class="hl opt">(</span>IM<span class="hl opt">);</span>
   <span class="hl kwa">end</span> Gen_Random<span class="hl opt">;</span>

   <span class="hl kwa">procedure</span> Make_Cumulative <span class="hl opt">(</span>Gene_List <span class="hl opt">:</span> <span class="hl kwa">in out</span> Aminoacid_Set<span class="hl opt">)</span> <span class="hl kwa">is</span>
      C <span class="hl opt">:</span> Real <span class="hl opt">:=</span> Gene_List <span class="hl opt">(</span>Gene_List<span class="hl kwd">'First</span><span class="hl opt">).</span>P<span class="hl opt">;</span>
   <span class="hl kwa">begin</span>
      <span class="hl kwa">for</span> K <span class="hl kwa">in</span> Gene_List<span class="hl kwd">'First</span> <span class="hl opt">+</span> <span class="hl num">1</span> <span class="hl opt">..</span> Gene_List<span class="hl kwd">'Last</span> <span class="hl kwa">loop</span>
         C <span class="hl opt">:=</span> C <span class="hl opt">+</span> Gene_List <span class="hl opt">(</span>K<span class="hl opt">).</span>P<span class="hl opt">;</span>
         Gene_List <span class="hl opt">(</span>K<span class="hl opt">).</span>P <span class="hl opt">:=</span> C<span class="hl opt">;</span>
      <span class="hl kwa">end loop</span><span class="hl opt">;</span>
   <span class="hl kwa">end</span> Make_Cumulative<span class="hl opt">;</span>

   <span class="hl kwa">function</span> Select_Random <span class="hl opt">(</span>Gene_List <span class="hl opt">:</span> <span class="hl kwa">in</span> Aminoacid_Set<span class="hl opt">)</span> <span class="hl kwa">return</span> <span class="hl kwb">Character</span> <span class="hl kwa">is</span>
      R         <span class="hl opt">:</span> Real <span class="hl opt">:=</span> Gen_Random <span class="hl opt">(</span><span class="hl num">1.0</span><span class="hl opt">);</span>
      I<span class="hl opt">,</span> Lo<span class="hl opt">,</span> Hi <span class="hl opt">:</span> <span class="hl kwb">Integer</span><span class="hl opt">;</span>
   <span class="hl kwa">begin</span>
      <span class="hl kwa">if</span> R <span class="hl opt">&lt;</span> Gene_List <span class="hl opt">(</span>Gene_List<span class="hl kwd">'First</span><span class="hl opt">).</span>P <span class="hl kwa">then</span>
         <span class="hl kwa">return</span> Gene_List <span class="hl opt">(</span>Gene_List<span class="hl kwd">'First</span><span class="hl opt">).</span>C<span class="hl opt">;</span>
      <span class="hl kwa">end if</span><span class="hl opt">;</span>

      Lo <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span>
      Hi <span class="hl opt">:=</span> Gene_List<span class="hl kwd">'Last</span><span class="hl opt">;</span>

      <span class="hl kwa">while</span> Hi <span class="hl opt">&gt;</span> Lo <span class="hl opt">+</span> <span class="hl num">1</span> <span class="hl kwa">loop</span>
         I <span class="hl opt">:= (</span>Hi <span class="hl opt">+</span> Lo<span class="hl opt">) /</span> <span class="hl num">2</span><span class="hl opt">;</span>
         <span class="hl kwa">if</span> R <span class="hl opt">&lt;</span> Gene_List <span class="hl opt">(</span>I<span class="hl opt">).</span>P <span class="hl kwa">then</span>
            Hi <span class="hl opt">:=</span> I<span class="hl opt">;</span>
         <span class="hl kwa">else</span>
            Lo <span class="hl opt">:=</span> I<span class="hl opt">;</span>
         <span class="hl kwa">end if</span><span class="hl opt">;</span>
      <span class="hl kwa">end loop</span><span class="hl opt">;</span>

      <span class="hl kwa">return</span> Gene_List <span class="hl opt">(</span>Hi<span class="hl opt">).</span>C<span class="hl opt">;</span>
   <span class="hl kwa">end</span> Select_Random<span class="hl opt">;</span>

   <span class="hl kwa">procedure</span> Make_Random_Fasta
     <span class="hl opt">(</span>Id<span class="hl opt">,</span> Desc <span class="hl opt">:</span> <span class="hl kwa">in</span> <span class="hl kwb">String</span><span class="hl opt">;</span> Gene_List <span class="hl opt">:</span> <span class="hl kwa">in</span> Aminoacid_Set<span class="hl opt">;</span> N <span class="hl opt">:</span> <span class="hl kwa">in</span> <span class="hl kwb">Positive</span><span class="hl opt">)</span>
   <span class="hl kwa">is</span>
      Todo <span class="hl opt">:</span> <span class="hl kwb">Integer</span> <span class="hl opt">:=</span> N<span class="hl opt">;</span>
      M    <span class="hl opt">:</span> <span class="hl kwb">Integer</span><span class="hl opt">;</span>
      Pick <span class="hl opt">:</span> <span class="hl kwb">String</span> <span class="hl opt">(</span><span class="hl num">1</span> <span class="hl opt">..</span> Line_Length<span class="hl opt">);</span>
   <span class="hl kwa">begin</span>
      Put_Line <span class="hl opt">(</span><span class="hl str">&quot;&gt;&quot;</span> <span class="hl opt">&amp;</span> Id <span class="hl opt">&amp;</span> <span class="hl str">' '</span> <span class="hl opt">&amp;</span> Desc<span class="hl opt">);</span>

      <span class="hl kwa">while</span> Todo <span class="hl opt">&gt;</span> <span class="hl num">0</span> <span class="hl kwa">loop</span>
         M <span class="hl opt">:=</span> <span class="hl kwb">Natural</span><span class="hl kwd">'Min</span> <span class="hl opt">(</span>Todo<span class="hl opt">,</span> Line_Length<span class="hl opt">);</span>

         <span class="hl kwa">for</span> K <span class="hl kwa">in</span> <span class="hl num">1</span> <span class="hl opt">..</span> M <span class="hl kwa">loop</span>
            Pick <span class="hl opt">(</span>K<span class="hl opt">) :=</span> Select_Random <span class="hl opt">(</span>Gene_List<span class="hl opt">);</span>
         <span class="hl kwa">end loop</span><span class="hl opt">;</span>

         Put_Line <span class="hl opt">(</span>Pick <span class="hl opt">(</span><span class="hl num">1</span> <span class="hl opt">..</span> M<span class="hl opt">));</span>
         Todo <span class="hl opt">:=</span> Todo <span class="hl opt">-</span> Line_Length<span class="hl opt">;</span>
      <span class="hl kwa">end loop</span><span class="hl opt">;</span>
   <span class="hl kwa">end</span> Make_Random_Fasta<span class="hl opt">;</span>

   <span class="hl kwa">procedure</span> Make_Repeat_Fasta <span class="hl opt">(</span>Id<span class="hl opt">,</span> Desc<span class="hl opt">,</span> S <span class="hl opt">:</span> <span class="hl kwa">in</span> <span class="hl kwb">String</span><span class="hl opt">;</span> N <span class="hl opt">:</span> <span class="hl kwa">in</span> <span class="hl kwb">Positive</span><span class="hl opt">)</span> <span class="hl kwa">is</span>
      Todo <span class="hl opt">:</span> <span class="hl kwb">Integer</span> <span class="hl opt">:=</span> N<span class="hl opt">;</span>
      K    <span class="hl opt">:</span> <span class="hl kwb">Positive</span> <span class="hl opt">:=</span> S<span class="hl kwd">'First</span><span class="hl opt">;</span>
      M    <span class="hl opt">:</span> <span class="hl kwb">Natural</span><span class="hl opt">;</span>
   <span class="hl kwa">begin</span>
      Put_Line <span class="hl opt">(</span><span class="hl str">&quot;&gt;&quot;</span> <span class="hl opt">&amp;</span> Id <span class="hl opt">&amp;</span> <span class="hl str">' '</span> <span class="hl opt">&amp;</span> Desc<span class="hl opt">);</span>

      <span class="hl kwa">while</span> Todo <span class="hl opt">&gt;</span> <span class="hl num">0</span> <span class="hl kwa">loop</span>
         M <span class="hl opt">:=</span> <span class="hl kwb">Natural</span><span class="hl kwd">'Min</span> <span class="hl opt">(</span>Todo<span class="hl opt">,</span> Line_Length<span class="hl opt">);</span>

         <span class="hl kwa">while</span> M <span class="hl opt">&gt;=</span> S<span class="hl kwd">'Length</span> <span class="hl opt">-</span> K <span class="hl opt">+</span> S<span class="hl kwd">'First</span> <span class="hl kwa">loop</span>
            Put <span class="hl opt">(</span>S <span class="hl opt">(</span>K <span class="hl opt">..</span> S<span class="hl kwd">'Last</span><span class="hl opt">));</span>
            M <span class="hl opt">:=</span> M <span class="hl opt">- (</span>S<span class="hl kwd">'Length</span> <span class="hl opt">-</span> K <span class="hl opt">+</span> S<span class="hl kwd">'First</span><span class="hl opt">);</span>
            K <span class="hl opt">:=</span> S<span class="hl kwd">'First</span><span class="hl opt">;</span>
         <span class="hl kwa">end loop</span><span class="hl opt">;</span>

         Put_Line <span class="hl opt">(</span>S <span class="hl opt">(</span>K <span class="hl opt">..</span> K <span class="hl opt">+</span> M <span class="hl opt">-</span> S<span class="hl kwd">'First</span><span class="hl opt">));</span>
         K <span class="hl opt">:=</span> K <span class="hl opt">+</span> M <span class="hl opt">-</span> S<span class="hl kwd">'First</span> <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">;</span>

         Todo <span class="hl opt">:=</span> Todo <span class="hl opt">-</span> Line_Length<span class="hl opt">;</span>
      <span class="hl kwa">end loop</span><span class="hl opt">;</span>
   <span class="hl kwa">end</span> Make_Repeat_Fasta<span class="hl opt">;</span>

<span class="hl kwa">end</span> Fasta_Pck<span class="hl opt">;</span>

<span class="hl kwa">with</span> Ada<span class="hl opt">.</span>Command_Line<span class="hl opt">;</span> <span class="hl kwa">use</span> Ada<span class="hl opt">.</span>Command_Line<span class="hl opt">;</span>
<span class="hl kwa">with</span> Fasta_Pck<span class="hl opt">;</span>        <span class="hl kwa">use</span> Fasta_Pck<span class="hl opt">;</span>

<span class="hl kwa">procedure</span> Fasta <span class="hl kwa">is</span>
   Homosapiens <span class="hl opt">:</span> Aminoacid_Set <span class="hl opt">:=</span>
                   <span class="hl opt">((</span><span class="hl str">'a'</span><span class="hl opt">,</span> <span class="hl num">0.3029549426680</span><span class="hl opt">), (</span><span class="hl str">'c'</span><span class="hl opt">,</span> <span class="hl num">0.1979883004921</span><span class="hl opt">),</span>
                    <span class="hl opt">(</span><span class="hl str">'g'</span><span class="hl opt">,</span> <span class="hl num">0.1975473066391</span><span class="hl opt">), (</span><span class="hl str">'t'</span><span class="hl opt">,</span> <span class="hl num">0.3015094502008</span><span class="hl opt">));</span>
   Iub         <span class="hl opt">:</span> Aminoacid_Set <span class="hl opt">:=</span>
                   <span class="hl opt">((</span><span class="hl str">'a'</span><span class="hl opt">,</span> <span class="hl num">0.27</span><span class="hl opt">), (</span><span class="hl str">'c'</span><span class="hl opt">,</span> <span class="hl num">0.12</span><span class="hl opt">), (</span><span class="hl str">'g'</span><span class="hl opt">,</span> <span class="hl num">0.12</span><span class="hl opt">), (</span><span class="hl str">'t'</span><span class="hl opt">,</span> <span class="hl num">0.27</span><span class="hl opt">),</span>
                    <span class="hl opt">(</span><span class="hl str">'B'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">), (</span><span class="hl str">'D'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">), (</span><span class="hl str">'H'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">), (</span><span class="hl str">'K'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">),</span>
                    <span class="hl opt">(</span><span class="hl str">'M'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">), (</span><span class="hl str">'N'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">), (</span><span class="hl str">'R'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">), (</span><span class="hl str">'S'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">),</span>
                    <span class="hl opt">(</span><span class="hl str">'V'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">), (</span><span class="hl str">'W'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">), (</span><span class="hl str">'Y'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">));</span>
   Alu         <span class="hl opt">:</span> <span class="hl kwa">constant</span> <span class="hl kwb">String</span> <span class="hl opt">:=</span>
                    <span class="hl str">&quot;GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG&quot;</span> <span class="hl opt">&amp;</span>
                    <span class="hl str">&quot;GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA&quot;</span> <span class="hl opt">&amp;</span>
                    <span class="hl str">&quot;CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT&quot;</span> <span class="hl opt">&amp;</span>
                    <span class="hl str">&quot;ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA&quot;</span> <span class="hl opt">&amp;</span>
                    <span class="hl str">&quot;GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG&quot;</span> <span class="hl opt">&amp;</span>
                    <span class="hl str">&quot;AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC&quot;</span> <span class="hl opt">&amp;</span>
                    <span class="hl str">&quot;AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA&quot;</span><span class="hl opt">;</span>

   N           <span class="hl opt">:</span> <span class="hl kwa">constant</span> <span class="hl kwb">Positive</span> <span class="hl opt">:=</span> <span class="hl kwb">Positive</span><span class="hl kwd">'Value</span> <span class="hl opt">(</span>Argument <span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">));</span>

<span class="hl kwa">begin</span>
   Make_Cumulative <span class="hl opt">(</span>Iub<span class="hl opt">);</span>
   Make_Cumulative <span class="hl opt">(</span>Homosapiens<span class="hl opt">);</span>

   Make_Repeat_Fasta <span class="hl opt">(</span><span class="hl str">&quot;ONE&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;Homo sapiens alu&quot;</span><span class="hl opt">,</span> alu<span class="hl opt">,</span> N <span class="hl opt">*</span> <span class="hl num">2</span><span class="hl opt">);</span>
   Make_Random_Fasta <span class="hl opt">(</span><span class="hl str">&quot;TWO&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;IUB ambiguity codes&quot;</span><span class="hl opt">,</span> Iub<span class="hl opt">,</span> N <span class="hl opt">*</span> <span class="hl num">3</span><span class="hl opt">);</span>
   Make_Random_Fasta
     <span class="hl opt">(</span><span class="hl str">&quot;THREE&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;Homo sapiens frequency&quot;</span><span class="hl opt">,</span> Homosapiens<span class="hl opt">,</span> N <span class="hl opt">*</span> <span class="hl num">5</span><span class="hl opt">);</span>
<span class="hl kwa">end</span> Fasta<span class="hl opt">;</span>
