<span class="hl com">{ The Computer Language Benchmarks Game</span>
<span class="hl com">  http://benchmarksgame.alioth.debian.org</span>
<span class="hl com"></span>
<span class="hl com">  contributed by Vincent Snijders</span>
<span class="hl com">  gmp headers by Karl-Michael Schindler</span>
<span class="hl com">}</span>

<span class="hl com">{$linklib libgmp.so}</span>
<span class="hl com">{$mode objfpc}</span>

<span class="hl kwa">program</span> pidigits<span class="hl opt">;</span>

<span class="hl kwa">uses</span>
  ctypes<span class="hl opt">;</span>
  
<span class="hl kwa">type</span>

mp_limb_t        <span class="hl opt">=</span> cuint<span class="hl opt">;</span>
mp_ptr           <span class="hl opt">= ^</span>mp_limb_t<span class="hl opt">;</span>

mpz_t <span class="hl opt">=</span> <span class="hl kwa">record</span>
  mp_alloc<span class="hl opt">,</span> mp_size <span class="hl opt">:</span> cint<span class="hl opt">;</span>
  mp_d    <span class="hl opt">:</span> mp_ptr
<span class="hl kwa">end</span><span class="hl opt">;</span>

<span class="hl kwa">procedure</span> <span class="hl kwd">mpz_init</span> <span class="hl opt">(</span><span class="hl kwa">var</span> Dest<span class="hl opt">:</span> mpz_t<span class="hl opt">);</span>
 <span class="hl kwa">cdecl</span><span class="hl opt">;</span> <span class="hl kwa">external</span> name <span class="hl str">'__gmpz_init'</span><span class="hl opt">;</span>

<span class="hl kwa">procedure</span> <span class="hl kwd">mpz_init_set_ui</span> <span class="hl opt">(</span><span class="hl kwa">var</span> Dest<span class="hl opt">:</span> mpz_t<span class="hl opt">;</span> Src<span class="hl opt">:</span> culong<span class="hl opt">);</span>
 <span class="hl kwa">cdecl</span><span class="hl opt">;</span> <span class="hl kwa">external</span> name <span class="hl str">'__gmpz_init_set_ui'</span><span class="hl opt">;</span>

<span class="hl kwa">procedure</span> <span class="hl kwd">mpz_mul_ui</span> <span class="hl opt">(</span><span class="hl kwa">var</span> Dest<span class="hl opt">:</span> mpz_t<span class="hl opt">;</span> <span class="hl kwa">var</span> Src1<span class="hl opt">:</span> mpz_t<span class="hl opt">;</span> Src2<span class="hl opt">:</span> culong<span class="hl opt">);</span>
 <span class="hl kwa">cdecl</span><span class="hl opt">;</span> <span class="hl kwa">external</span> name <span class="hl str">'__gmpz_mul_ui'</span><span class="hl opt">;</span>

<span class="hl kwa">procedure</span> <span class="hl kwd">mpz_mul_si</span> <span class="hl opt">(</span><span class="hl kwa">var</span> Dest<span class="hl opt">:</span> mpz_t<span class="hl opt">;</span> <span class="hl kwa">var</span> Src1<span class="hl opt">:</span> mpz_t<span class="hl opt">;</span> Src2<span class="hl opt">:</span> cint<span class="hl opt">);</span>
 <span class="hl kwa">cdecl</span><span class="hl opt">;</span> <span class="hl kwa">external</span> name <span class="hl str">'__gmpz_mul_si'</span><span class="hl opt">;</span>

<span class="hl kwa">procedure</span> <span class="hl kwd">mpz_add</span> <span class="hl opt">(</span><span class="hl kwa">var</span> Dest<span class="hl opt">:</span> mpz_t<span class="hl opt">;</span> <span class="hl kwa">var</span> Src1<span class="hl opt">,</span> Src2<span class="hl opt">:</span> mpz_t<span class="hl opt">);</span>
 <span class="hl kwa">cdecl</span><span class="hl opt">;</span> <span class="hl kwa">external</span> name <span class="hl str">'__gmpz_add'</span><span class="hl opt">;</span>

<span class="hl kwa">procedure</span> <span class="hl kwd">mpz_tdiv_q</span> <span class="hl opt">(</span><span class="hl kwa">var</span> Dest<span class="hl opt">:</span> mpz_t<span class="hl opt">;</span> <span class="hl kwa">var</span> Src1<span class="hl opt">,</span> Src2<span class="hl opt">:</span> mpz_t<span class="hl opt">);</span>
 <span class="hl kwa">cdecl</span><span class="hl opt">;</span> <span class="hl kwa">external</span> name <span class="hl str">'__gmpz_tdiv_q'</span><span class="hl opt">;</span>

<span class="hl kwa">function</span>  <span class="hl kwd">mpz_get_ui</span> <span class="hl opt">(</span><span class="hl kwa">var</span> Src<span class="hl opt">:</span> mpz_t<span class="hl opt">):</span> culong<span class="hl opt">;</span>
 <span class="hl kwa">cdecl</span><span class="hl opt">;</span> <span class="hl kwa">external</span> name <span class="hl str">'__gmpz_get_ui'</span><span class="hl opt">;</span>

  
<span class="hl kwa">procedure</span> <span class="hl kwd">PrintPiDigits</span><span class="hl opt">(</span>NumDigits<span class="hl opt">:</span> <span class="hl kwb">integer</span><span class="hl opt">);</span>
<span class="hl kwa">var</span>
  q<span class="hl opt">,</span> r<span class="hl opt">,</span> s<span class="hl opt">,</span> t<span class="hl opt">:</span> mpz_t<span class="hl opt">;</span> <span class="hl slc">// Transformation matrix components.</span>
  u<span class="hl opt">,</span> v<span class="hl opt">,</span> w<span class="hl opt">:</span> mpz_t<span class="hl opt">;</span> <span class="hl slc">// Temporary variables</span>
  i<span class="hl opt">,</span> k<span class="hl opt">,</span> digit<span class="hl opt">,</span> c<span class="hl opt">:</span> <span class="hl kwb">integer</span><span class="hl opt">;</span>
  line<span class="hl opt">:</span> <span class="hl kwa">string</span><span class="hl opt">[</span><span class="hl num">10</span><span class="hl opt">];</span>
  
  <span class="hl kwa">function</span> <span class="hl kwd">Extract</span><span class="hl opt">(</span>x<span class="hl opt">:</span><span class="hl kwb">cardinal</span><span class="hl opt">) :</span> <span class="hl kwb">integer</span><span class="hl opt">;</span>
  <span class="hl kwa">begin</span>
    <span class="hl kwd">mpz_mul_ui</span><span class="hl opt">(</span>u<span class="hl opt">,</span> q<span class="hl opt">,</span> x<span class="hl opt">);</span>
    <span class="hl kwd">mpz_add</span><span class="hl opt">(</span>u<span class="hl opt">,</span> u<span class="hl opt">,</span> r<span class="hl opt">);</span>
    <span class="hl kwd">mpz_mul_ui</span><span class="hl opt">(</span>v<span class="hl opt">,</span> s<span class="hl opt">,</span> x<span class="hl opt">);</span>
    <span class="hl kwd">mpz_add</span><span class="hl opt">(</span>v<span class="hl opt">,</span> v<span class="hl opt">,</span> t<span class="hl opt">);</span>
    <span class="hl kwd">mpz_tdiv_q</span><span class="hl opt">(</span>w<span class="hl opt">,</span> u<span class="hl opt">,</span> v<span class="hl opt">);</span>
    result <span class="hl opt">:=</span> <span class="hl kwd">mpz_get_ui</span><span class="hl opt">(</span>w<span class="hl opt">);</span>
  <span class="hl kwa">end</span><span class="hl opt">;</span>

  <span class="hl kwa">function</span> IsSafe <span class="hl opt">:</span> <span class="hl kwb">boolean</span><span class="hl opt">;</span>
  <span class="hl kwa">begin</span>
    result <span class="hl opt">:=</span> digit <span class="hl opt">=</span> <span class="hl kwd">Extract</span><span class="hl opt">(</span><span class="hl num">4</span><span class="hl opt">);</span>
  <span class="hl kwa">end</span><span class="hl opt">;</span>

  <span class="hl kwa">procedure</span> Produce<span class="hl opt">;</span>
  <span class="hl kwa">begin</span>
    <span class="hl kwd">mpz_mul_si</span><span class="hl opt">(</span>r<span class="hl opt">,</span> r<span class="hl opt">,</span> <span class="hl num">10</span><span class="hl opt">);</span>
    <span class="hl kwd">mpz_mul_si</span><span class="hl opt">(</span>v<span class="hl opt">,</span> t<span class="hl opt">, -</span><span class="hl num">10</span> <span class="hl opt">*</span> digit<span class="hl opt">);</span>
    <span class="hl kwd">mpz_add</span><span class="hl opt">(</span>r<span class="hl opt">,</span> r<span class="hl opt">,</span> v<span class="hl opt">);</span>
    <span class="hl kwd">mpz_mul_si</span><span class="hl opt">(</span>q<span class="hl opt">,</span> q<span class="hl opt">,</span> <span class="hl num">10</span><span class="hl opt">);</span>
  <span class="hl kwa">end</span><span class="hl opt">;</span>

  <span class="hl kwa">procedure</span> Consume<span class="hl opt">;</span>
  <span class="hl kwa">begin</span>
    <span class="hl kwd">inc</span><span class="hl opt">(</span>k<span class="hl opt">);</span>
    <span class="hl kwd">mpz_mul_si</span><span class="hl opt">(</span>r<span class="hl opt">,</span> r<span class="hl opt">,</span> <span class="hl num">2</span><span class="hl opt">*</span>k<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">);</span>
    <span class="hl kwd">mpz_mul_si</span><span class="hl opt">(</span>u<span class="hl opt">,</span> q<span class="hl opt">,</span> <span class="hl num">4</span><span class="hl opt">*</span>k<span class="hl opt">+</span><span class="hl num">2</span><span class="hl opt">);</span>
    <span class="hl kwd">mpz_add</span><span class="hl opt">(</span>r<span class="hl opt">,</span> r<span class="hl opt">,</span> u<span class="hl opt">);</span>
    <span class="hl kwd">mpz_mul_si</span><span class="hl opt">(</span>t<span class="hl opt">,</span> t<span class="hl opt">,</span> <span class="hl num">2</span><span class="hl opt">*</span>k<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">);</span>
    <span class="hl kwd">mpz_mul_si</span><span class="hl opt">(</span>v<span class="hl opt">,</span> s<span class="hl opt">,</span> <span class="hl num">4</span><span class="hl opt">*</span>k<span class="hl opt">+</span><span class="hl num">2</span><span class="hl opt">);</span>
    <span class="hl kwd">mpz_add</span><span class="hl opt">(</span>t<span class="hl opt">,</span> t<span class="hl opt">,</span> v<span class="hl opt">);</span>
    <span class="hl kwd">mpz_mul_si</span><span class="hl opt">(</span>s<span class="hl opt">,</span> s<span class="hl opt">,</span> k<span class="hl opt">);</span>
    <span class="hl kwd">mpz_mul_si</span><span class="hl opt">(</span>q<span class="hl opt">,</span> q<span class="hl opt">,</span> k<span class="hl opt">);</span>
  <span class="hl kwa">end</span><span class="hl opt">;</span>

<span class="hl kwa">begin</span>
  k <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span>
  i <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span>
  c <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span>
  <span class="hl kwd">setlength</span><span class="hl opt">(</span>line<span class="hl opt">,</span> <span class="hl num">10</span><span class="hl opt">);</span>
  <span class="hl kwd">mpz_init_set_ui</span><span class="hl opt">(</span>q<span class="hl opt">,</span> <span class="hl num">1</span><span class="hl opt">);</span>
  <span class="hl kwd">mpz_init_set_ui</span><span class="hl opt">(</span>r<span class="hl opt">,</span> <span class="hl num">0</span><span class="hl opt">);</span>
  <span class="hl kwd">mpz_init_set_ui</span><span class="hl opt">(</span>s<span class="hl opt">,</span> <span class="hl num">0</span><span class="hl opt">);</span>
  <span class="hl kwd">mpz_init_set_ui</span><span class="hl opt">(</span>t<span class="hl opt">,</span> <span class="hl num">1</span><span class="hl opt">);</span>
  <span class="hl kwd">mpz_init</span><span class="hl opt">(</span>u<span class="hl opt">);</span>
  <span class="hl kwd">mpz_init</span><span class="hl opt">(</span>v<span class="hl opt">);</span>
  <span class="hl kwd">mpz_init</span><span class="hl opt">(</span>w<span class="hl opt">);</span>
  <span class="hl kwc">while</span> <span class="hl opt">(</span>i<span class="hl opt">&lt;</span>NumDigits<span class="hl opt">)</span> <span class="hl kwc">do</span> <span class="hl kwa">begin</span>
    digit <span class="hl opt">:=</span> <span class="hl kwd">Extract</span><span class="hl opt">(</span><span class="hl num">3</span><span class="hl opt">);</span>
    <span class="hl kwc">while</span> <span class="hl kwa">not</span> IsSafe <span class="hl kwc">do</span> <span class="hl kwa">begin</span>
      Consume<span class="hl opt">;</span>
      digit<span class="hl opt">:=</span> <span class="hl kwd">Extract</span><span class="hl opt">(</span><span class="hl num">3</span><span class="hl opt">);</span>
    <span class="hl kwa">end</span><span class="hl opt">;</span>
    Produce<span class="hl opt">;</span>
    <span class="hl kwd">inc</span><span class="hl opt">(</span>c<span class="hl opt">);</span>
    line<span class="hl opt">[</span>c<span class="hl opt">] :=</span> <span class="hl kwd">chr</span><span class="hl opt">(</span><span class="hl kwd">ord</span><span class="hl opt">(</span><span class="hl str">'0'</span><span class="hl opt">)+</span>digit<span class="hl opt">);</span>
    <span class="hl kwd">inc</span><span class="hl opt">(</span>i<span class="hl opt">);</span>
    <span class="hl kwc">if</span> c<span class="hl opt">=</span><span class="hl num">10</span> <span class="hl kwc">then</span> <span class="hl kwa">begin</span>
      <span class="hl kwd">writeln</span><span class="hl opt">(</span>line<span class="hl opt">,</span> #<span class="hl num">9</span><span class="hl str">':'</span><span class="hl opt">,</span> i<span class="hl opt">);</span>
      c <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span>
    <span class="hl kwa">end</span><span class="hl opt">;</span>
  <span class="hl kwa">end</span><span class="hl opt">;</span>
  <span class="hl kwc">if</span> c<span class="hl opt">&lt;&gt;</span><span class="hl num">0</span> <span class="hl kwc">then</span> <span class="hl kwa">begin</span>
    <span class="hl kwd">SetLength</span><span class="hl opt">(</span>line<span class="hl opt">,</span> c<span class="hl opt">);</span>
    <span class="hl kwd">writeln</span><span class="hl opt">(</span>line<span class="hl opt">);</span>
  <span class="hl kwa">end</span><span class="hl opt">;</span>
<span class="hl kwa">end</span><span class="hl opt">;</span>

<span class="hl kwa">var</span>
  n<span class="hl opt">:</span> <span class="hl kwb">integer</span> <span class="hl opt">=</span> <span class="hl num">27</span><span class="hl opt">;</span>

<span class="hl kwa">begin</span>
  <span class="hl kwc">if</span> <span class="hl opt">(</span>ParamCount<span class="hl opt">=</span><span class="hl num">1</span><span class="hl opt">)</span> <span class="hl kwc">then</span>
    <span class="hl kwd">val</span><span class="hl opt">(</span><span class="hl kwd">ParamStr</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">),</span> n<span class="hl opt">);</span>
  <span class="hl kwd">PrintPiDigits</span><span class="hl opt">(</span>n<span class="hl opt">);</span>
<span class="hl kwa">end</span><span class="hl opt">.</span>

