<span class="hl com">/**</span>
<span class="hl com"> * The Computer Language Benchmarks Game</span>
<span class="hl com"> * http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"> * contributed by Birju Prajapati</span>
<span class="hl com"> */</span>

<span class="hl kwa">import</span> java<span class="hl opt">.</span>util<span class="hl opt">.</span>concurrent<span class="hl opt">.</span>ExecutorService<span class="hl opt">;</span>
<span class="hl kwa">import</span> java<span class="hl opt">.</span>util<span class="hl opt">.</span>concurrent<span class="hl opt">.</span>Executors<span class="hl opt">;</span>

<span class="hl kwa">public class</span> threadring <span class="hl opt">{</span>

    <span class="hl kwa">private static final</span> <span class="hl kwb">int</span> TOTAL_NODES <span class="hl opt">=</span> <span class="hl num">503</span><span class="hl opt">;</span>
    <span class="hl kwa">private static final</span> ExecutorService EXECUTOR <span class="hl opt">=</span> Executors<span class="hl opt">.</span><span class="hl kwd">newFixedThreadPool</span><span class="hl opt">(</span>TOTAL_NODES<span class="hl opt">);</span>
    
    <span class="hl kwa">private static</span> Node firstNode<span class="hl opt">;</span>
    <span class="hl kwa">private static</span> Node lastNode<span class="hl opt">;</span>

    <span class="hl kwa">public static</span> <span class="hl kwb">void</span> <span class="hl kwd">main</span><span class="hl opt">(</span>String<span class="hl opt">[]</span> args<span class="hl opt">) {</span>
        firstNode <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">Node</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">);</span>
        lastNode<span class="hl opt">.</span>next <span class="hl opt">=</span> firstNode<span class="hl opt">;</span>
        firstNode<span class="hl opt">.</span><span class="hl kwd">push</span><span class="hl opt">(</span>Integer<span class="hl opt">.</span><span class="hl kwd">parseInt</span><span class="hl opt">(</span>args<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">]));</span>
    <span class="hl opt">}</span>

    <span class="hl kwa">private static class</span> Node <span class="hl kwa">implements</span> Runnable <span class="hl opt">{</span>

        <span class="hl kwa">private final</span> <span class="hl kwb">int</span> id<span class="hl opt">;</span>
        <span class="hl kwa">private</span> Node next<span class="hl opt">;</span>
        <span class="hl kwa">private</span> <span class="hl kwb">int</span> token<span class="hl opt">;</span>

        <span class="hl kwa">public</span> <span class="hl kwd">Node</span><span class="hl opt">(</span><span class="hl kwb">int</span> id<span class="hl opt">) {</span>
            <span class="hl kwa">this</span><span class="hl opt">.</span>id <span class="hl opt">=</span> id<span class="hl opt">;</span>
            <span class="hl kwa">if</span> <span class="hl opt">(</span>id<span class="hl opt">++ ==</span> TOTAL_NODES<span class="hl opt">) {</span>
                lastNode <span class="hl opt">=</span> <span class="hl kwa">this</span><span class="hl opt">;</span>
            <span class="hl opt">}</span> <span class="hl kwa">else</span> <span class="hl opt">{</span>
                next <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">Node</span><span class="hl opt">(</span>id<span class="hl opt">);</span>
            <span class="hl opt">}</span>
        <span class="hl opt">}</span>

        <span class="hl kwa">private</span> <span class="hl kwb">void</span> <span class="hl kwd">push</span><span class="hl opt">(</span><span class="hl kwb">int</span> token<span class="hl opt">) {</span>
            <span class="hl kwa">this</span><span class="hl opt">.</span>token <span class="hl opt">=</span> token<span class="hl opt">;</span>
            EXECUTOR<span class="hl opt">.</span><span class="hl kwd">execute</span><span class="hl opt">(</span><span class="hl kwa">this</span><span class="hl opt">);</span>
        <span class="hl opt">}</span>

        <span class="hl kwa">public</span> <span class="hl kwb">void</span> <span class="hl kwd">run</span><span class="hl opt">() {</span>
            <span class="hl kwa">if</span> <span class="hl opt">(</span>token<span class="hl opt">-- !=</span> <span class="hl num">0</span><span class="hl opt">) {</span>
                next<span class="hl opt">.</span><span class="hl kwd">push</span><span class="hl opt">(</span>token<span class="hl opt">);</span>
            <span class="hl opt">}</span> <span class="hl kwa">else</span> <span class="hl opt">{</span>
                System<span class="hl opt">.</span>out<span class="hl opt">.</span><span class="hl kwd">println</span><span class="hl opt">(</span>id<span class="hl opt">);</span>
                System<span class="hl opt">.</span><span class="hl kwd">exit</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">);</span>
            <span class="hl opt">}</span>
            
        <span class="hl opt">}</span>
    <span class="hl opt">}</span>
<span class="hl opt">}</span>


