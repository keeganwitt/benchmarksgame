<span class="hl com">/*</span>
<span class="hl com"> * The Computer Language Benchmarks Game</span>
<span class="hl com"> * http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"> * contributed by Rex Kerr</span>
<span class="hl com"> * algorithm follows Java version #4 by Anthony Donnefort</span>
<span class="hl com"> * removed deprecated api by Benedikt Nordhoff</span>
<span class="hl com"> */</span>

<span class="hl kwa">object</span> revcomp <span class="hl kwa">extends</span> java<span class="hl opt">.</span>io<span class="hl opt">.</span>ByteArrayOutputStream <span class="hl opt">{</span>
  <span class="hl kwa">val</span> input <span class="hl opt">=</span> <span class="hl kwa">new</span> Array<span class="hl opt">[</span>Byte<span class="hl opt">](</span><span class="hl num">8192</span><span class="hl opt">)</span>

  <span class="hl kwa">val</span> table <span class="hl opt">=</span> <span class="hl kwa">new</span> Array<span class="hl opt">[</span>Byte<span class="hl opt">](</span><span class="hl num">128</span><span class="hl opt">)</span>
  <span class="hl kwa">for</span> <span class="hl opt">(</span>i <span class="hl opt">&lt;-</span> <span class="hl num">0</span> to <span class="hl num">127</span><span class="hl opt">) {</span> <span class="hl kwd">table</span><span class="hl opt">(</span>i<span class="hl opt">) =</span> i<span class="hl opt">.</span>toByte <span class="hl opt">}</span>
  <span class="hl kwa">for</span> <span class="hl opt">((</span>i<span class="hl opt">,</span>o<span class="hl opt">) &lt;-</span> <span class="hl str">&quot;ACGTUMRWSYKVHDB&quot;</span><span class="hl opt">.</span>toList zip <span class="hl str">&quot;TGCAAKYWSRMBDHVN&quot;</span><span class="hl opt">.</span>toList<span class="hl opt">) {</span>
    <span class="hl kwd">table</span><span class="hl opt">(</span>i<span class="hl opt">) =</span> o<span class="hl opt">.</span>toByte
    <span class="hl kwd">table</span><span class="hl opt">(</span>i<span class="hl opt">.</span>toLower<span class="hl opt">) =</span> o<span class="hl opt">.</span>toByte
  <span class="hl opt">}</span>

  <span class="hl kwa">def</span> rcOut <span class="hl opt">= {</span>
    <span class="hl kwa">if</span> <span class="hl opt">(</span>count <span class="hl opt">&gt;</span> <span class="hl num">0</span><span class="hl opt">) {</span>
      <span class="hl kwa">var</span> begin <span class="hl opt">=</span> <span class="hl num">0</span>
      <span class="hl kwa">var</span> end <span class="hl opt">=</span> count<span class="hl opt">-</span><span class="hl num">1</span>
      <span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwd">buf</span><span class="hl opt">(</span>begin<span class="hl opt">) !=</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span> <span class="hl opt">&amp;&amp;</span> begin <span class="hl opt">&lt;</span> count<span class="hl opt">) {</span> begin <span class="hl opt">+=</span> <span class="hl num">1</span> <span class="hl opt">}</span>
      <span class="hl kwa">while</span> <span class="hl opt">(</span>begin <span class="hl opt">&lt;=</span> end<span class="hl opt">) {</span>
        <span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwd">buf</span><span class="hl opt">(</span>begin<span class="hl opt">) ==</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">)</span> begin <span class="hl opt">+=</span> <span class="hl num">1</span>
        <span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwd">buf</span><span class="hl opt">(</span>end<span class="hl opt">) ==</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">)</span> end <span class="hl opt">-=</span> <span class="hl num">1</span>
        <span class="hl kwa">if</span> <span class="hl opt">(</span>begin<span class="hl opt">&lt;=</span>end<span class="hl opt">) {</span>
          <span class="hl kwa">val</span> temp <span class="hl opt">=</span> <span class="hl kwd">buf</span><span class="hl opt">(</span>begin<span class="hl opt">)</span>
          <span class="hl kwd">buf</span><span class="hl opt">(</span>begin<span class="hl opt">) =</span> <span class="hl kwd">table</span><span class="hl opt">(</span><span class="hl kwd">buf</span><span class="hl opt">(</span>end<span class="hl opt">))</span>
          <span class="hl kwd">buf</span><span class="hl opt">(</span>end<span class="hl opt">) =</span> <span class="hl kwd">table</span><span class="hl opt">(</span>temp<span class="hl opt">)</span>
          begin <span class="hl opt">+=</span> <span class="hl num">1</span>
          end <span class="hl opt">-=</span> <span class="hl num">1</span>
        <span class="hl opt">}</span>
      <span class="hl opt">}</span>
      System<span class="hl opt">.</span>out<span class="hl opt">.</span><span class="hl kwd">write</span><span class="hl opt">(</span>buf<span class="hl opt">,</span><span class="hl num">0</span><span class="hl opt">,</span>count<span class="hl opt">)</span>
    <span class="hl opt">}</span>
  <span class="hl opt">}</span>
  
  <span class="hl kwa">def</span> <span class="hl kwd">main</span><span class="hl opt">(</span>args<span class="hl opt">:</span>Array<span class="hl opt">[</span>String<span class="hl opt">]) = {</span>
    <span class="hl kwa">var</span> n <span class="hl opt">=</span> <span class="hl num">0</span>
    <span class="hl kwa">do</span> <span class="hl opt">{</span>
      n <span class="hl opt">=</span> System<span class="hl opt">.</span><span class="hl kwa">in</span><span class="hl opt">.</span><span class="hl kwd">read</span><span class="hl opt">(</span>input<span class="hl opt">)</span>
      <span class="hl kwa">if</span> <span class="hl opt">(</span>n <span class="hl opt">&gt;</span> <span class="hl num">0</span><span class="hl opt">) {</span>
        <span class="hl kwa">var</span> i <span class="hl opt">=</span> <span class="hl num">0</span>
        <span class="hl kwa">var</span> i0 <span class="hl opt">=</span> <span class="hl num">0</span>
        <span class="hl kwa">while</span> <span class="hl opt">(</span>i <span class="hl opt">&lt;</span> n<span class="hl opt">) {</span>
          <span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwd">input</span><span class="hl opt">(</span>i<span class="hl opt">)==</span><span class="hl str">'&gt;'</span><span class="hl opt">) {</span>
            <span class="hl kwa">if</span> <span class="hl opt">(</span>i<span class="hl opt">&gt;</span>i0<span class="hl opt">)</span> <span class="hl kwd">write</span><span class="hl opt">(</span>input<span class="hl opt">,</span>i0<span class="hl opt">,</span>i<span class="hl opt">-</span>i0<span class="hl opt">)</span>
            rcOut
            reset
            i0 <span class="hl opt">=</span> i
          <span class="hl opt">}</span>
          i <span class="hl opt">+=</span> <span class="hl num">1</span>
        <span class="hl opt">}</span>
        <span class="hl kwa">if</span> <span class="hl opt">(</span>i0<span class="hl opt">&lt;</span>n<span class="hl opt">)</span> <span class="hl kwd">write</span><span class="hl opt">(</span>input<span class="hl opt">,</span>i0<span class="hl opt">,</span>n<span class="hl opt">-</span>i0<span class="hl opt">)</span>
      <span class="hl opt">}</span>
    <span class="hl opt">}</span> <span class="hl kwa">while</span> <span class="hl opt">(</span>n <span class="hl opt">!= -</span><span class="hl num">1</span><span class="hl opt">)</span>
    rcOut
  <span class="hl opt">}</span>
<span class="hl opt">}</span>
