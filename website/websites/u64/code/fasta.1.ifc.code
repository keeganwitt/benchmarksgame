<span class="hl slc">! The Computer Language Benchmarks Game</span>
<span class="hl slc">! http://benchmarksgame.alioth.debian.org/</span>
<span class="hl slc">!</span>
<span class="hl slc">! fasta implementation - translated from the lua program</span>
<span class="hl slc">! contributed by Simon Geard, 18/1/05</span>
<span class="hl slc">!</span>
<span class="hl slc">! Building info.</span>
<span class="hl slc">! ==============</span>
<span class="hl slc">!</span>
<span class="hl slc">! Linux  - using the Intel Fortran90 compiler:</span>
<span class="hl slc">!</span>
<span class="hl slc">!          ifort fasta.f90 -O3 -static-libcxa -o fasta</span>
<span class="hl slc">!</span>
<span class="hl slc">! Run</span>
<span class="hl slc">! ===</span>
<span class="hl slc">!          fasta 1000</span>

<span class="hl kwa">program</span> fasta

 <span class="hl kwa">implicit none</span>
  <span class="hl kwa">integer</span> num<span class="hl opt">,</span> m
  <span class="hl kwa">character</span><span class="hl opt">(</span>len<span class="hl opt">=</span><span class="hl num">8</span><span class="hl opt">)</span> argv
  <span class="hl kwa">logical</span><span class="hl opt">,</span> <span class="hl kwa">dimension</span><span class="hl opt">(:),</span> allocatable <span class="hl opt">::</span> flags
  <span class="hl kwa">integer</span><span class="hl opt">,</span> <span class="hl kwa">parameter</span> <span class="hl opt">::</span> IM <span class="hl opt">=</span> <span class="hl num">139968</span>
  <span class="hl kwa">integer</span><span class="hl opt">,</span> <span class="hl kwa">parameter</span> <span class="hl opt">::</span> IA <span class="hl opt">=</span> <span class="hl num">3877</span>
  <span class="hl kwa">integer</span><span class="hl opt">,</span> <span class="hl kwa">parameter</span> <span class="hl opt">::</span> IC <span class="hl opt">=</span> <span class="hl num">29573</span>
  <span class="hl kwa">character</span><span class="hl opt">(</span>len<span class="hl opt">=*),</span> <span class="hl kwa">parameter</span> <span class="hl opt">::</span> alu <span class="hl opt">= &amp;</span>
<span class="hl str">'GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG'</span> <span class="hl opt">// &amp;</span>
<span class="hl str">'GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA'</span> <span class="hl opt">// &amp;</span>
<span class="hl str">'CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT'</span> <span class="hl opt">// &amp;</span>
<span class="hl str">'ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA'</span> <span class="hl opt">// &amp;</span>
<span class="hl str">'GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG'</span> <span class="hl opt">// &amp;</span>
<span class="hl str">'AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC'</span> <span class="hl opt">// &amp;</span>
<span class="hl str">'AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA'</span>

  <span class="hl kwa">type</span> pair
     <span class="hl kwa">character</span><span class="hl opt">(</span>len<span class="hl opt">=</span><span class="hl num">1</span><span class="hl opt">)</span> c
     <span class="hl kwa">real</span><span class="hl opt">*</span><span class="hl num">8</span> p
  <span class="hl kwa">end type</span> pair
  <span class="hl kwa">type</span><span class="hl opt">(</span>pair<span class="hl opt">),</span> <span class="hl kwa">dimension</span><span class="hl opt">(</span><span class="hl num">15</span><span class="hl opt">) ::</span> iub
  <span class="hl kwa">type</span><span class="hl opt">(</span>pair<span class="hl opt">),</span> <span class="hl kwa">dimension</span><span class="hl opt">(</span><span class="hl num">4</span><span class="hl opt">)  ::</span> homosapiens
  homosapiens <span class="hl opt">= (/</span> <span class="hl kwd">pair</span><span class="hl opt">(</span><span class="hl str">'a'</span><span class="hl opt">,</span> <span class="hl num">0.3029549426680d0</span><span class="hl opt">), &amp;</span>
                   <span class="hl kwd">pair</span><span class="hl opt">(</span><span class="hl str">'c'</span><span class="hl opt">,</span> <span class="hl num">0.1979883004921d0</span><span class="hl opt">), &amp;</span>
                   <span class="hl kwd">pair</span><span class="hl opt">(</span><span class="hl str">'g'</span><span class="hl opt">,</span> <span class="hl num">0.1975473066391d0</span><span class="hl opt">), &amp;</span>
                   <span class="hl kwd">pair</span><span class="hl opt">(</span><span class="hl str">'t'</span><span class="hl opt">,</span> <span class="hl num">0.3015094502008d0</span><span class="hl opt">) /)</span>
  <span class="hl kwa">call</span> <span class="hl kwd">makeCumulative</span><span class="hl opt">(</span>homosapiens<span class="hl opt">)</span>
  
  iub <span class="hl opt">= (/</span> <span class="hl kwd">pair</span><span class="hl opt">(</span><span class="hl str">'a'</span><span class="hl opt">,</span> <span class="hl num">0.27d0</span><span class="hl opt">), &amp;</span>
           <span class="hl kwd">pair</span><span class="hl opt">(</span><span class="hl str">'c'</span><span class="hl opt">,</span> <span class="hl num">0.12d0</span><span class="hl opt">), &amp;</span>
           <span class="hl kwd">pair</span><span class="hl opt">(</span><span class="hl str">'g'</span><span class="hl opt">,</span> <span class="hl num">0.12d0</span><span class="hl opt">), &amp;</span>
           <span class="hl kwd">pair</span><span class="hl opt">(</span><span class="hl str">'t'</span><span class="hl opt">,</span> <span class="hl num">0.27d0</span><span class="hl opt">), &amp;</span>
           <span class="hl kwd">pair</span><span class="hl opt">(</span><span class="hl str">'B'</span><span class="hl opt">,</span> <span class="hl num">0.02d0</span><span class="hl opt">), &amp;</span>
           <span class="hl kwd">pair</span><span class="hl opt">(</span><span class="hl str">'D'</span><span class="hl opt">,</span> <span class="hl num">0.02d0</span><span class="hl opt">), &amp;</span>
           <span class="hl kwd">pair</span><span class="hl opt">(</span><span class="hl str">'H'</span><span class="hl opt">,</span> <span class="hl num">0.02d0</span><span class="hl opt">), &amp;</span>
           <span class="hl kwd">pair</span><span class="hl opt">(</span><span class="hl str">'K'</span><span class="hl opt">,</span> <span class="hl num">0.02d0</span><span class="hl opt">), &amp;</span>
           <span class="hl kwd">pair</span><span class="hl opt">(</span><span class="hl str">'M'</span><span class="hl opt">,</span> <span class="hl num">0.02d0</span><span class="hl opt">), &amp;</span>
           <span class="hl kwd">pair</span><span class="hl opt">(</span><span class="hl str">'N'</span><span class="hl opt">,</span> <span class="hl num">0.02d0</span><span class="hl opt">), &amp;</span>
           <span class="hl kwd">pair</span><span class="hl opt">(</span><span class="hl str">'R'</span><span class="hl opt">,</span> <span class="hl num">0.02d0</span><span class="hl opt">), &amp;</span>
           <span class="hl kwd">pair</span><span class="hl opt">(</span><span class="hl str">'S'</span><span class="hl opt">,</span> <span class="hl num">0.02d0</span><span class="hl opt">), &amp;</span>
           <span class="hl kwd">pair</span><span class="hl opt">(</span><span class="hl str">'V'</span><span class="hl opt">,</span> <span class="hl num">0.02d0</span><span class="hl opt">), &amp;</span>
           <span class="hl kwd">pair</span><span class="hl opt">(</span><span class="hl str">'W'</span><span class="hl opt">,</span> <span class="hl num">0.02d0</span><span class="hl opt">), &amp;</span>
           <span class="hl kwd">pair</span><span class="hl opt">(</span><span class="hl str">'Y'</span><span class="hl opt">,</span> <span class="hl num">0.02d0</span><span class="hl opt">) /)</span>
  <span class="hl kwa">call</span> <span class="hl kwd">makeCumulative</span><span class="hl opt">(</span>iub<span class="hl opt">)</span>

  <span class="hl kwa">call</span> <span class="hl kwd">getarg</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span>argv<span class="hl opt">)</span>
  <span class="hl kwa">read</span><span class="hl opt">(</span>argv<span class="hl opt">,*)</span> num
 

  <span class="hl kwa">call</span> <span class="hl kwd">makeRepeatFasta</span><span class="hl opt">(</span><span class="hl str">'ONE'</span><span class="hl opt">,</span><span class="hl str">'Homo sapiens alu'</span><span class="hl opt">,</span>alu<span class="hl opt">,</span>num<span class="hl opt">*</span><span class="hl num">2</span><span class="hl opt">)</span>

  <span class="hl kwa">call</span> <span class="hl kwd">makeRandomFasta</span><span class="hl opt">(</span><span class="hl str">'TWO'</span><span class="hl opt">,</span><span class="hl str">'IUB ambiguity codes'</span><span class="hl opt">,</span>iub<span class="hl opt">,</span>num<span class="hl opt">*</span><span class="hl num">3</span><span class="hl opt">)</span>

  <span class="hl kwa">call</span> <span class="hl kwd">makeRandomFasta</span><span class="hl opt">(</span><span class="hl str">'THREE'</span><span class="hl opt">,</span><span class="hl str">'Homo sapiens frequency'</span><span class="hl opt">,</span>homosapiens<span class="hl opt">,</span>num<span class="hl opt">*</span><span class="hl num">5</span><span class="hl opt">)</span>

     
<span class="hl kwa">contains</span>

  <span class="hl kwa">real</span><span class="hl opt">*</span><span class="hl num">8</span> <span class="hl kwa">function</span> <span class="hl kwd">getRandom</span> <span class="hl opt">(</span>maxval<span class="hl opt">)</span>
    <span class="hl kwa">real</span><span class="hl opt">*</span><span class="hl num">8</span><span class="hl opt">,</span> <span class="hl kwd">intent</span><span class="hl opt">(</span>in<span class="hl opt">) ::</span> maxval
    <span class="hl kwa">integer</span><span class="hl opt">,</span> <span class="hl kwa">save</span> <span class="hl opt">::</span> last <span class="hl opt">=</span> <span class="hl num">42</span>

    last <span class="hl opt">=</span> <span class="hl kwd">mod</span><span class="hl opt">(</span>last <span class="hl opt">*</span> IA <span class="hl opt">+</span> IC<span class="hl opt">,</span> IM<span class="hl opt">)</span>
    getRandom <span class="hl opt">=</span> maxval <span class="hl opt">*</span> last <span class="hl opt">/</span> IM

  <span class="hl kwa">end function</span> getRandom

  <span class="hl kwa">subroutine</span> <span class="hl kwd">makeCumulative</span><span class="hl opt">(</span>a<span class="hl opt">)</span>
     <span class="hl kwa">type</span><span class="hl opt">(</span>pair<span class="hl opt">),</span> <span class="hl kwa">dimension</span><span class="hl opt">(:),</span> <span class="hl kwd">intent</span><span class="hl opt">(</span>inout<span class="hl opt">) ::</span> a
     <span class="hl kwa">integer</span> i
     <span class="hl kwa">real</span><span class="hl opt">*</span><span class="hl num">8</span> <span class="hl opt">::</span> cp
     
     cp <span class="hl opt">=</span> <span class="hl num">0.0d0</span>
     <span class="hl kwa">do</span> i<span class="hl opt">=</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl kwd">size</span><span class="hl opt">(</span>a<span class="hl opt">)</span>
        cp <span class="hl opt">=</span> cp <span class="hl opt">+</span> <span class="hl kwd">a</span><span class="hl opt">(</span>i<span class="hl opt">)%</span>p
        <span class="hl kwd">a</span><span class="hl opt">(</span>i<span class="hl opt">)%</span>p <span class="hl opt">=</span> cp
     <span class="hl kwa">end do</span>
  <span class="hl kwa">end subroutine</span> makeCumulative
  
  <span class="hl kwa">character</span><span class="hl opt">(</span>len<span class="hl opt">=</span><span class="hl num">1</span><span class="hl opt">)</span> <span class="hl kwa">function</span> <span class="hl kwd">selectRandom</span><span class="hl opt">(</span>a<span class="hl opt">)</span>
      <span class="hl kwa">type</span><span class="hl opt">(</span>pair<span class="hl opt">),</span> <span class="hl kwa">dimension</span><span class="hl opt">(:),</span> <span class="hl kwd">intent</span><span class="hl opt">(</span>inout<span class="hl opt">) ::</span> a
     <span class="hl kwa">integer</span> i
     <span class="hl kwa">real</span><span class="hl opt">*</span><span class="hl num">8</span> <span class="hl opt">::</span> r
     
     r <span class="hl opt">=</span> <span class="hl kwd">getRandom</span><span class="hl opt">(</span><span class="hl num">1.0d0</span><span class="hl opt">)</span>
     selectRandom <span class="hl opt">=</span> <span class="hl str">'J'</span>
     <span class="hl kwa">do</span> i<span class="hl opt">=</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl kwd">size</span><span class="hl opt">(</span>a<span class="hl opt">)</span>
        <span class="hl kwa">if</span> <span class="hl opt">(</span>r <span class="hl opt">&lt;</span> <span class="hl kwd">a</span><span class="hl opt">(</span>i<span class="hl opt">)%</span>p<span class="hl opt">)</span> <span class="hl kwa">then</span>
           selectRandom <span class="hl opt">=</span> <span class="hl kwd">a</span><span class="hl opt">(</span>i<span class="hl opt">)%</span>c
           <span class="hl kwa">return</span>
        <span class="hl kwa">end if</span>
     <span class="hl kwa">end do</span>
  
  <span class="hl kwa">end function</span> selectRandom
  
  <span class="hl kwa">subroutine</span> <span class="hl kwd">makeRandomFasta</span><span class="hl opt">(</span>id<span class="hl opt">,</span>desc<span class="hl opt">,</span>a<span class="hl opt">,</span>n<span class="hl opt">)</span>
     <span class="hl kwa">character</span><span class="hl opt">(</span>len<span class="hl opt">=*),</span> <span class="hl kwd">intent</span><span class="hl opt">(</span>in<span class="hl opt">) ::</span> id
     <span class="hl kwa">character</span><span class="hl opt">(</span>len<span class="hl opt">=*),</span> <span class="hl kwd">intent</span><span class="hl opt">(</span>in<span class="hl opt">) ::</span> desc
     <span class="hl kwa">type</span><span class="hl opt">(</span>pair<span class="hl opt">),</span> <span class="hl kwa">dimension</span><span class="hl opt">(:),</span> <span class="hl kwd">intent</span><span class="hl opt">(</span>inout<span class="hl opt">) ::</span> a
     <span class="hl kwa">integer</span><span class="hl opt">,</span> <span class="hl kwd">intent</span><span class="hl opt">(</span>in<span class="hl opt">) ::</span> n
     <span class="hl kwa">integer</span> <span class="hl opt">::</span> todo<span class="hl opt">,</span> i
     <span class="hl kwa">integer</span><span class="hl opt">,</span> <span class="hl kwa">parameter</span> <span class="hl opt">::</span> length <span class="hl opt">=</span> <span class="hl num">60</span>
     <span class="hl kwa">character</span><span class="hl opt">(</span>len<span class="hl opt">=</span>length<span class="hl opt">) ::</span> buff

     <span class="hl kwa">write</span><span class="hl opt">(*,</span><span class="hl str">'(4a)'</span><span class="hl opt">)</span> <span class="hl str">'&gt;'</span><span class="hl opt">,</span>id<span class="hl opt">,</span><span class="hl str">' '</span><span class="hl opt">,</span>desc
     todo <span class="hl opt">=</span> n
     <span class="hl kwa">do</span>
        <span class="hl kwa">if</span> <span class="hl opt">(</span>todo <span class="hl opt">&lt;=</span> <span class="hl num">0</span><span class="hl opt">)</span> exit
        <span class="hl kwa">if</span> <span class="hl opt">(</span>todo <span class="hl opt">&lt;</span> length<span class="hl opt">)</span> <span class="hl kwa">then</span>
           m <span class="hl opt">=</span> todo
        <span class="hl kwa">else</span>
           m <span class="hl opt">=</span> length
        <span class="hl kwa">end if</span>
        <span class="hl kwa">do</span> i<span class="hl opt">=</span><span class="hl num">1</span><span class="hl opt">,</span>m
           <span class="hl kwd">buff</span><span class="hl opt">(</span>i<span class="hl opt">:</span>i<span class="hl opt">) =</span> <span class="hl kwd">selectRandom</span><span class="hl opt">(</span>a<span class="hl opt">)</span>
        <span class="hl kwa">end do</span>
        <span class="hl kwa">write</span><span class="hl opt">(*,</span><span class="hl str">'(a)'</span><span class="hl opt">)</span> <span class="hl kwd">buff</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">:</span>m<span class="hl opt">)</span>
        todo <span class="hl opt">=</span> todo <span class="hl opt">-</span> length
     <span class="hl kwa">end do</span>
  <span class="hl kwa">end subroutine</span> makeRandomFasta

  <span class="hl kwa">subroutine</span> <span class="hl kwd">makeRepeatFasta</span><span class="hl opt">(</span>id<span class="hl opt">,</span>desc<span class="hl opt">,</span>s<span class="hl opt">,</span>n<span class="hl opt">)</span>
     <span class="hl kwa">character</span><span class="hl opt">(</span>len<span class="hl opt">=*),</span> <span class="hl kwd">intent</span><span class="hl opt">(</span>in<span class="hl opt">) ::</span> id
     <span class="hl kwa">character</span><span class="hl opt">(</span>len<span class="hl opt">=*),</span> <span class="hl kwd">intent</span><span class="hl opt">(</span>in<span class="hl opt">) ::</span> desc
     <span class="hl kwa">character</span><span class="hl opt">(</span>len<span class="hl opt">=*),</span> <span class="hl kwd">intent</span><span class="hl opt">(</span>in<span class="hl opt">) ::</span> s
     <span class="hl kwa">integer</span><span class="hl opt">,</span> <span class="hl kwd">intent</span><span class="hl opt">(</span>in<span class="hl opt">) ::</span> n
     <span class="hl kwa">integer</span> <span class="hl opt">::</span> todo<span class="hl opt">,</span> i<span class="hl opt">,</span> j<span class="hl opt">,</span> k<span class="hl opt">,</span> kn
     <span class="hl kwa">integer</span><span class="hl opt">,</span> <span class="hl kwa">parameter</span> <span class="hl opt">::</span> length <span class="hl opt">=</span> <span class="hl num">60</span>
     <span class="hl kwa">character</span><span class="hl opt">(</span>len<span class="hl opt">=</span>length<span class="hl opt">) ::</span> buff
     <span class="hl kwa">intrinsic</span> len

     <span class="hl kwa">write</span><span class="hl opt">(*,</span><span class="hl str">'(4a)'</span><span class="hl opt">)</span> <span class="hl str">'&gt;'</span><span class="hl opt">,</span>id<span class="hl opt">,</span><span class="hl str">' '</span><span class="hl opt">,</span>desc
     todo <span class="hl opt">=</span> n<span class="hl opt">;</span> k <span class="hl opt">=</span> <span class="hl num">1</span><span class="hl opt">;</span> kn <span class="hl opt">=</span> <span class="hl kwd">len</span><span class="hl opt">(</span>s<span class="hl opt">)</span>
     <span class="hl kwa">do</span>
        <span class="hl kwa">if</span> <span class="hl opt">(</span>todo <span class="hl opt">&lt;=</span> <span class="hl num">0</span><span class="hl opt">)</span> exit
        <span class="hl kwa">if</span> <span class="hl opt">(</span>todo <span class="hl opt">&lt;</span> length<span class="hl opt">)</span> <span class="hl kwa">then</span>
           m <span class="hl opt">=</span> todo
        <span class="hl kwa">else</span>
           m <span class="hl opt">=</span> length
        <span class="hl kwa">end if</span>
        <span class="hl kwa">do</span> j<span class="hl opt">=</span><span class="hl num">1</span><span class="hl opt">,</span>m
           <span class="hl kwa">if</span> <span class="hl opt">(</span>k <span class="hl opt">&gt;</span> kn<span class="hl opt">)</span> <span class="hl kwa">then</span>
              k <span class="hl opt">=</span> <span class="hl num">1</span>
           <span class="hl kwa">endif</span>
           <span class="hl kwd">buff</span><span class="hl opt">(</span>j<span class="hl opt">:</span>j<span class="hl opt">) =</span> <span class="hl kwd">s</span><span class="hl opt">(</span>k<span class="hl opt">:</span>k<span class="hl opt">)</span>
           k <span class="hl opt">=</span> k <span class="hl opt">+</span> <span class="hl num">1</span>
        <span class="hl kwa">end do</span>
        <span class="hl kwa">write</span><span class="hl opt">(*,</span><span class="hl str">'(a)'</span><span class="hl opt">)</span> <span class="hl kwd">buff</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">:</span>m<span class="hl opt">)</span>
        todo <span class="hl opt">=</span> todo <span class="hl opt">-</span> length
     <span class="hl kwa">end do</span>

  <span class="hl kwa">end subroutine</span> makeRepeatFasta

<span class="hl kwa">end program</span> fasta
