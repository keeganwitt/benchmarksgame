<span class="hl slc">-- The Computer Language Benchmarks Game</span>
<span class="hl slc">-- http://benchmarksgame.alioth.debian.org/</span>
<span class="hl slc">-- contributed by Mike Pall (with ideas from Rici Lake)</span>

<span class="hl kwa">local</span> sub <span class="hl opt">=</span> <span class="hl kwb">string</span><span class="hl opt">.</span>sub
iubc <span class="hl opt">=</span> <span class="hl kwd">setmetatable</span><span class="hl opt">({</span>
  A<span class="hl opt">=</span><span class="hl str">&quot;T&quot;</span><span class="hl opt">,</span> C<span class="hl opt">=</span><span class="hl str">&quot;G&quot;</span><span class="hl opt">,</span> B<span class="hl opt">=</span><span class="hl str">&quot;V&quot;</span><span class="hl opt">,</span> D<span class="hl opt">=</span><span class="hl str">&quot;H&quot;</span><span class="hl opt">,</span> K<span class="hl opt">=</span><span class="hl str">&quot;M&quot;</span><span class="hl opt">,</span> R<span class="hl opt">=</span><span class="hl str">&quot;Y&quot;</span><span class="hl opt">,</span>
  a<span class="hl opt">=</span><span class="hl str">&quot;T&quot;</span><span class="hl opt">,</span> c<span class="hl opt">=</span><span class="hl str">&quot;G&quot;</span><span class="hl opt">,</span> b<span class="hl opt">=</span><span class="hl str">&quot;V&quot;</span><span class="hl opt">,</span> d<span class="hl opt">=</span><span class="hl str">&quot;H&quot;</span><span class="hl opt">,</span> k<span class="hl opt">=</span><span class="hl str">&quot;M&quot;</span><span class="hl opt">,</span> r<span class="hl opt">=</span><span class="hl str">&quot;Y&quot;</span><span class="hl opt">,</span>
  T<span class="hl opt">=</span><span class="hl str">&quot;A&quot;</span><span class="hl opt">,</span> G<span class="hl opt">=</span><span class="hl str">&quot;C&quot;</span><span class="hl opt">,</span> V<span class="hl opt">=</span><span class="hl str">&quot;B&quot;</span><span class="hl opt">,</span> H<span class="hl opt">=</span><span class="hl str">&quot;D&quot;</span><span class="hl opt">,</span> M<span class="hl opt">=</span><span class="hl str">&quot;K&quot;</span><span class="hl opt">,</span> Y<span class="hl opt">=</span><span class="hl str">&quot;R&quot;</span><span class="hl opt">,</span> U<span class="hl opt">=</span><span class="hl str">&quot;A&quot;</span><span class="hl opt">,</span>
  t<span class="hl opt">=</span><span class="hl str">&quot;A&quot;</span><span class="hl opt">,</span> g<span class="hl opt">=</span><span class="hl str">&quot;C&quot;</span><span class="hl opt">,</span> v<span class="hl opt">=</span><span class="hl str">&quot;B&quot;</span><span class="hl opt">,</span> h<span class="hl opt">=</span><span class="hl str">&quot;D&quot;</span><span class="hl opt">,</span> m<span class="hl opt">=</span><span class="hl str">&quot;K&quot;</span><span class="hl opt">,</span> y<span class="hl opt">=</span><span class="hl str">&quot;R&quot;</span><span class="hl opt">,</span> u<span class="hl opt">=</span><span class="hl str">&quot;A&quot;</span><span class="hl opt">,</span>
  N<span class="hl opt">=</span><span class="hl str">&quot;N&quot;</span><span class="hl opt">,</span> S<span class="hl opt">=</span><span class="hl str">&quot;S&quot;</span><span class="hl opt">,</span> W<span class="hl opt">=</span><span class="hl str">&quot;W&quot;</span><span class="hl opt">,</span> n<span class="hl opt">=</span><span class="hl str">&quot;N&quot;</span><span class="hl opt">,</span> s<span class="hl opt">=</span><span class="hl str">&quot;S&quot;</span><span class="hl opt">,</span> w<span class="hl opt">=</span><span class="hl str">&quot;W&quot;</span><span class="hl opt">,</span>
<span class="hl opt">}, {</span> __index <span class="hl opt">=</span> <span class="hl kwa">function</span><span class="hl opt">(</span>t<span class="hl opt">,</span> s<span class="hl opt">)</span>
  <span class="hl kwa">local</span> r <span class="hl opt">=</span> t<span class="hl opt">[</span><span class="hl kwd">sub</span><span class="hl opt">(</span>s<span class="hl opt">,</span> <span class="hl num">2</span><span class="hl opt">)]..</span>t<span class="hl opt">[</span><span class="hl kwd">sub</span><span class="hl opt">(</span>s<span class="hl opt">,</span> <span class="hl num">1</span><span class="hl opt">,</span> <span class="hl num">1</span><span class="hl opt">)];</span> t<span class="hl opt">[</span>s<span class="hl opt">] =</span> r<span class="hl opt">;</span> <span class="hl kwa">return</span> r <span class="hl kwa">end</span> <span class="hl opt">})</span>

<span class="hl kwa">local</span> wcode <span class="hl opt">= [=[</span>
<span class="hl kwa">return function</span><span class="hl opt">(</span>t<span class="hl opt">,</span> n<span class="hl opt">)</span>
  <span class="hl kwa">if</span> n <span class="hl opt">==</span> <span class="hl num">1</span> <span class="hl kwa">then return end</span>
  <span class="hl kwa">local</span> iubc<span class="hl opt">,</span> sub<span class="hl opt">,</span> <span class="hl kwb">write</span> <span class="hl opt">=</span> iubc<span class="hl opt">,</span> <span class="hl kwb">string</span><span class="hl opt">.</span>sub<span class="hl opt">,</span> io<span class="hl opt">.</span><span class="hl kwb">write</span>
  <span class="hl kwa">local</span> s <span class="hl opt">=</span> <span class="hl kwb">table</span><span class="hl opt">.</span><span class="hl kwd">concat</span><span class="hl opt">(</span>t<span class="hl opt">,</span> <span class="hl str">&quot;&quot;</span><span class="hl opt">,</span> <span class="hl num">1</span><span class="hl opt">,</span> n<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">)</span>
  <span class="hl kwa">for</span> i<span class="hl opt">=#</span>s<span class="hl opt">-</span><span class="hl num">59</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">,-</span><span class="hl num">60</span> <span class="hl kwa">do</span>
    <span class="hl kwb">write</span><span class="hl opt">(]=]</span>
<span class="hl kwa">for</span> i<span class="hl opt">=</span><span class="hl num">59</span><span class="hl opt">,</span><span class="hl num">3</span><span class="hl opt">,-</span><span class="hl num">4</span> <span class="hl kwa">do</span> wcode <span class="hl opt">=</span> wcode<span class="hl opt">..</span><span class="hl str">&quot;iubc[sub(s, i+&quot;</span><span class="hl opt">..(</span>i<span class="hl opt">-</span><span class="hl num">3</span><span class="hl opt">)..</span><span class="hl str">&quot;, i+&quot;</span><span class="hl opt">..</span>i<span class="hl opt">..</span><span class="hl str">&quot;)], &quot;</span> <span class="hl kwa">end</span>
wcode <span class="hl opt">=</span> wcode<span class="hl opt">..[=[</span><span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">)</span>
  <span class="hl kwa">end</span>
  <span class="hl kwa">local</span> r <span class="hl opt">= #</span>s <span class="hl opt">%</span> <span class="hl num">60</span>
  <span class="hl kwa">if</span> r <span class="hl opt">~=</span> <span class="hl num">0</span> <span class="hl kwa">then</span>
    <span class="hl kwa">for</span> i<span class="hl opt">=</span>r<span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">,-</span><span class="hl num">4</span> <span class="hl kwa">do</span> <span class="hl kwb">write</span><span class="hl opt">(</span>iubc<span class="hl opt">[</span><span class="hl kwd">sub</span><span class="hl opt">(</span>s<span class="hl opt">,</span> i<span class="hl opt">-</span><span class="hl num">3</span> <span class="hl opt">&lt;</span> <span class="hl num">1</span> <span class="hl kwa">and</span> <span class="hl num">1</span> <span class="hl kwa">or</span> i<span class="hl opt">-</span><span class="hl num">3</span><span class="hl opt">,</span> i<span class="hl opt">)])</span> <span class="hl kwa">end</span>
    <span class="hl kwb">write</span><span class="hl opt">(</span><span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">)</span>
  <span class="hl kwa">end</span>
<span class="hl kwa">end</span>
<span class="hl opt">]=]</span>
<span class="hl kwa">local</span> writerev <span class="hl opt">=</span> <span class="hl kwd">loadstring</span><span class="hl opt">(</span>wcode<span class="hl opt">)()</span>

<span class="hl kwa">local</span> t<span class="hl opt">,</span> n <span class="hl opt">= {},</span> <span class="hl num">1</span>
<span class="hl kwa">for</span> line <span class="hl kwa">in</span> io<span class="hl opt">.</span><span class="hl kwd">lines</span><span class="hl opt">()</span> <span class="hl kwa">do</span>
  <span class="hl kwa">local</span> c <span class="hl opt">=</span> <span class="hl kwd">sub</span><span class="hl opt">(</span>line<span class="hl opt">,</span> <span class="hl num">1</span><span class="hl opt">,</span> <span class="hl num">1</span><span class="hl opt">)</span>
  <span class="hl kwa">if</span> c <span class="hl opt">==</span> <span class="hl str">&quot;&gt;&quot;</span> <span class="hl kwa">then</span> <span class="hl kwd">writerev</span><span class="hl opt">(</span>t<span class="hl opt">,</span> n<span class="hl opt">);</span> io<span class="hl opt">.</span><span class="hl kwb">write</span><span class="hl opt">(</span>line<span class="hl opt">,</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">);</span> n <span class="hl opt">=</span> <span class="hl num">1</span>
  <span class="hl kwa">elseif</span> c <span class="hl opt">~=</span> <span class="hl str">&quot;;&quot;</span> <span class="hl kwa">then</span> t<span class="hl opt">[</span>n<span class="hl opt">] =</span> line<span class="hl opt">;</span> n <span class="hl opt">=</span> n <span class="hl opt">+</span> <span class="hl num">1</span> <span class="hl kwa">end</span>
<span class="hl kwa">end</span>
<span class="hl kwd">writerev</span><span class="hl opt">(</span>t<span class="hl opt">,</span> n<span class="hl opt">)</span>
