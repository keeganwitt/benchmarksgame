<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"></span>
<span class="hl com">   contributed by Serge Smith</span>
<span class="hl com">*/</span>

<span class="hl kwa">using</span> System<span class="hl opt">;</span>
<span class="hl kwa">using</span> System<span class="hl opt">.</span>Collections<span class="hl opt">.</span>Generic<span class="hl opt">;</span>
<span class="hl kwa">using</span> System<span class="hl opt">.</span>IO<span class="hl opt">;</span>
<span class="hl kwa">using</span> System<span class="hl opt">.</span>Linq<span class="hl opt">;</span>
<span class="hl kwa">using</span> System<span class="hl opt">.</span>Text<span class="hl opt">;</span>
<span class="hl kwa">using</span> System<span class="hl opt">.</span>Threading<span class="hl opt">.</span>Tasks<span class="hl opt">;</span>

<span class="hl kwa">class</span> Fasta
<span class="hl opt">{</span>
  <span class="hl kwb">const int</span> LineLength <span class="hl opt">=</span> <span class="hl num">60</span><span class="hl opt">;</span>

  <span class="hl kwb">const int</span> IM <span class="hl opt">=</span> <span class="hl num">139968</span><span class="hl opt">;</span>
  <span class="hl kwb">const int</span> IA <span class="hl opt">=</span> <span class="hl num">3877</span><span class="hl opt">;</span>
  <span class="hl kwb">const int</span> IC <span class="hl opt">=</span> <span class="hl num">29573</span><span class="hl opt">;</span>
  <span class="hl kwa">static</span> <span class="hl kwb">int</span> seed <span class="hl opt">=</span> <span class="hl num">42</span><span class="hl opt">;</span>

  <span class="hl kwa">public static</span> <span class="hl kwb">void</span> <span class="hl kwd">Main</span><span class="hl opt">(</span><span class="hl kwb">string</span><span class="hl opt">[]</span> args<span class="hl opt">)</span>
  <span class="hl opt">{</span>
    <span class="hl kwb">int</span> n <span class="hl opt">=</span> args<span class="hl opt">.</span>Length <span class="hl opt">&gt;</span> <span class="hl num">0</span> ? Int32<span class="hl opt">.</span><span class="hl kwd">Parse</span><span class="hl opt">(</span>args<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">]) :</span> <span class="hl num">1000</span><span class="hl opt">;</span>

    <span class="hl kwd">MakeCumulative</span><span class="hl opt">(</span>IUB<span class="hl opt">);</span>
    <span class="hl kwd">MakeCumulative</span><span class="hl opt">(</span>HomoSapiens<span class="hl opt">);</span>

    <span class="hl kwa">using</span> <span class="hl opt">(</span>var s <span class="hl opt">=</span> Console<span class="hl opt">.</span><span class="hl kwd">OpenStandardOutput</span><span class="hl opt">())</span>
    <span class="hl opt">{</span>
      <span class="hl kwd">MakeRepeatFasta</span><span class="hl opt">(</span><span class="hl str">&quot;ONE&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;Homo sapiens alu&quot;</span><span class="hl opt">,</span> Encoding<span class="hl opt">.</span>ASCII<span class="hl opt">.</span><span class="hl kwd">GetBytes</span><span class="hl opt">(</span>ALU<span class="hl opt">),</span> n <span class="hl opt">*</span> <span class="hl num">2</span><span class="hl opt">,</span> s<span class="hl opt">);</span>
      <span class="hl kwd">MakeRandomFasta</span><span class="hl opt">(</span><span class="hl str">&quot;TWO&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;IUB ambiguity codes&quot;</span><span class="hl opt">,</span> IUB<span class="hl opt">,</span> n <span class="hl opt">*</span> <span class="hl num">3</span><span class="hl opt">,</span> s<span class="hl opt">);</span>
      <span class="hl kwd">MakeRandomFasta</span><span class="hl opt">(</span><span class="hl str">&quot;THREE&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;Homo sapiens frequency&quot;</span><span class="hl opt">,</span> HomoSapiens<span class="hl opt">,</span> n <span class="hl opt">*</span> <span class="hl num">5</span><span class="hl opt">,</span> s<span class="hl opt">);</span>
    <span class="hl opt">}</span>

  <span class="hl opt">}</span>
  <span class="hl kwa">static</span> <span class="hl kwb">void</span> <span class="hl kwd">MakeRandomFasta</span><span class="hl opt">(</span><span class="hl kwb">string</span> id<span class="hl opt">,</span> <span class="hl kwb">string</span> desc<span class="hl opt">,</span> Frequency<span class="hl opt">[]</span> a<span class="hl opt">,</span> <span class="hl kwb">int</span> n<span class="hl opt">,</span> Stream s<span class="hl opt">)</span>
  <span class="hl opt">{</span>
    <span class="hl kwb">byte</span><span class="hl opt">[]</span> descStr <span class="hl opt">=</span> Encoding<span class="hl opt">.</span>ASCII<span class="hl opt">.</span><span class="hl kwd">GetBytes</span><span class="hl opt">(</span><span class="hl str">&quot;&gt;&quot;</span> <span class="hl opt">+</span> id <span class="hl opt">+</span> <span class="hl str">&quot; &quot;</span> <span class="hl opt">+</span> desc <span class="hl opt">+</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">);</span>
    s<span class="hl opt">.</span><span class="hl kwd">Write</span><span class="hl opt">(</span>descStr<span class="hl opt">,</span> <span class="hl num">0</span><span class="hl opt">,</span> descStr<span class="hl opt">.</span>Length<span class="hl opt">);</span>

    var res <span class="hl opt">=</span> <span class="hl kwd">RandomSequence</span><span class="hl opt">(</span>n<span class="hl opt">,</span> LineLength <span class="hl opt">*</span> <span class="hl num">40</span><span class="hl opt">)</span>        
      <span class="hl opt">.</span><span class="hl kwd">AsParallel</span><span class="hl opt">()</span>
      <span class="hl opt">.</span><span class="hl kwd">AsOrdered</span><span class="hl opt">()</span>
      <span class="hl opt">.</span><span class="hl kwd">Select</span><span class="hl opt">(</span>rnd <span class="hl opt">=&gt;</span>
        <span class="hl opt">{</span>
          var resLength <span class="hl opt">= (</span>rnd<span class="hl opt">.</span>Length <span class="hl opt">/</span> LineLength<span class="hl opt">) * (</span>LineLength <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">);</span>
          <span class="hl kwa">if</span> <span class="hl opt">(</span>rnd<span class="hl opt">.</span>Length <span class="hl opt">%</span> LineLength <span class="hl opt">!=</span> <span class="hl num">0</span><span class="hl opt">)</span>
          <span class="hl opt">{</span>
            resLength <span class="hl opt">+=</span> rnd<span class="hl opt">.</span>Length <span class="hl opt">%</span> LineLength <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">;</span>
          <span class="hl opt">}</span>

          var buf <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwb">byte</span><span class="hl opt">[</span>resLength<span class="hl opt">];</span>
          var index <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
          <span class="hl kwa">for</span> <span class="hl opt">(</span>var i <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> i <span class="hl opt">&lt;</span> rnd<span class="hl opt">.</span>Length<span class="hl opt">;</span> i <span class="hl opt">+=</span> LineLength<span class="hl opt">)</span>
          <span class="hl opt">{</span>
            var len <span class="hl opt">=</span> Math<span class="hl opt">.</span><span class="hl kwd">Min</span><span class="hl opt">(</span>LineLength<span class="hl opt">,</span> rnd<span class="hl opt">.</span>Length <span class="hl opt">-</span> i<span class="hl opt">);</span>
            <span class="hl kwa">for</span> <span class="hl opt">(</span>var j <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> j <span class="hl opt">&lt;</span> len<span class="hl opt">; ++</span>j<span class="hl opt">)</span>
              buf<span class="hl opt">[</span>index<span class="hl opt">++] =</span> <span class="hl kwd">SelectRandom</span><span class="hl opt">(</span>a<span class="hl opt">,</span> rnd<span class="hl opt">[</span>i <span class="hl opt">+</span> j<span class="hl opt">]);</span>
            buf<span class="hl opt">[</span>index<span class="hl opt">++] = (</span><span class="hl kwb">byte</span><span class="hl opt">)</span><span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">;</span>
          <span class="hl opt">}</span>
          <span class="hl kwa">return</span> buf<span class="hl opt">;</span>
        <span class="hl opt">})</span>
      <span class="hl opt">.</span><span class="hl kwd">AsSequential</span><span class="hl opt">();</span>
    <span class="hl opt">;</span>
    <span class="hl kwa">foreach</span> <span class="hl opt">(</span>var r <span class="hl kwa">in</span> res<span class="hl opt">)</span>
      s<span class="hl opt">.</span><span class="hl kwd">Write</span><span class="hl opt">(</span>r<span class="hl opt">,</span> <span class="hl num">0</span><span class="hl opt">,</span> r<span class="hl opt">.</span>Length<span class="hl opt">);</span>

  <span class="hl opt">}</span>
  <span class="hl kwa">static</span> <span class="hl kwb">void</span> <span class="hl kwd">MakeRepeatFasta</span><span class="hl opt">(</span><span class="hl kwb">string</span> id<span class="hl opt">,</span> <span class="hl kwb">string</span> desc<span class="hl opt">,</span> <span class="hl kwb">byte</span><span class="hl opt">[]</span> alu<span class="hl opt">,</span> <span class="hl kwb">int</span> n<span class="hl opt">,</span> Stream s<span class="hl opt">)</span>
  <span class="hl opt">{</span>
    var index <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
    <span class="hl kwb">int</span> m <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
    <span class="hl kwb">int</span> k <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
    <span class="hl kwb">int</span> kn <span class="hl opt">=</span> alu<span class="hl opt">.</span>Length<span class="hl opt">;</span>
    var buf <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwb">byte</span><span class="hl opt">[</span><span class="hl num">1024</span><span class="hl opt">];</span>

    <span class="hl kwb">byte</span><span class="hl opt">[]</span> descStr <span class="hl opt">=</span> Encoding<span class="hl opt">.</span>ASCII<span class="hl opt">.</span><span class="hl kwd">GetBytes</span><span class="hl opt">(</span><span class="hl str">&quot;&gt;&quot;</span> <span class="hl opt">+</span> id <span class="hl opt">+</span> <span class="hl str">&quot; &quot;</span> <span class="hl opt">+</span> desc <span class="hl opt">+</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">);</span>
    s<span class="hl opt">.</span><span class="hl kwd">Write</span><span class="hl opt">(</span>descStr<span class="hl opt">,</span> <span class="hl num">0</span><span class="hl opt">,</span> descStr<span class="hl opt">.</span>Length<span class="hl opt">);</span>

    <span class="hl kwa">while</span> <span class="hl opt">(</span>n <span class="hl opt">&gt;</span> <span class="hl num">0</span><span class="hl opt">)</span>
    <span class="hl opt">{</span>
      m <span class="hl opt">=</span> n <span class="hl opt">&lt;</span> LineLength ? n <span class="hl opt">:</span> LineLength<span class="hl opt">;</span>

      <span class="hl kwa">if</span> <span class="hl opt">(</span>buf<span class="hl opt">.</span>Length <span class="hl opt">-</span> index <span class="hl opt">&lt;</span> m<span class="hl opt">)</span>
      <span class="hl opt">{</span>
        s<span class="hl opt">.</span><span class="hl kwd">Write</span><span class="hl opt">(</span>buf<span class="hl opt">,</span> <span class="hl num">0</span><span class="hl opt">,</span> index<span class="hl opt">);</span>
        index <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
      <span class="hl opt">}</span>

      <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwb">int</span> i <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> i <span class="hl opt">&lt;</span> m<span class="hl opt">;</span> i<span class="hl opt">++)</span>
      <span class="hl opt">{</span>
        <span class="hl kwa">if</span> <span class="hl opt">(</span>k <span class="hl opt">==</span> kn<span class="hl opt">)</span>
          k <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>

        buf<span class="hl opt">[</span>index<span class="hl opt">++] =</span> alu<span class="hl opt">[</span>k<span class="hl opt">];</span>
        k<span class="hl opt">++;</span>
      <span class="hl opt">}</span>

      buf<span class="hl opt">[</span>index<span class="hl opt">++] = (</span><span class="hl kwb">byte</span><span class="hl opt">)</span><span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">;</span>
      n <span class="hl opt">-=</span> LineLength<span class="hl opt">;</span>
    <span class="hl opt">}</span>

    <span class="hl kwa">if</span> <span class="hl opt">(</span>index <span class="hl opt">!=</span> <span class="hl num">0</span><span class="hl opt">)</span>
      s<span class="hl opt">.</span><span class="hl kwd">Write</span><span class="hl opt">(</span>buf<span class="hl opt">,</span> <span class="hl num">0</span><span class="hl opt">,</span> index<span class="hl opt">);</span>
  <span class="hl opt">}</span>
  <span class="hl kwa">static</span> <span class="hl kwb">byte</span> <span class="hl kwd">SelectRandom</span><span class="hl opt">(</span>Frequency<span class="hl opt">[]</span> a<span class="hl opt">,</span> <span class="hl kwb">int</span> _r<span class="hl opt">)</span>
  <span class="hl opt">{</span>
    <span class="hl slc">//double r = random();</span>
    <span class="hl kwb">double</span> r <span class="hl opt">=</span> _r <span class="hl opt">*</span> <span class="hl num">1.0</span> <span class="hl opt">/</span> IM<span class="hl opt">;</span>

    <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwb">int</span> i <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> i <span class="hl opt">&lt;</span> a<span class="hl opt">.</span>Length<span class="hl opt">;</span> i<span class="hl opt">++)</span>
      <span class="hl kwa">if</span> <span class="hl opt">(</span>r <span class="hl opt">&lt;</span> a<span class="hl opt">[</span>i<span class="hl opt">].</span>p<span class="hl opt">)</span>
        <span class="hl kwa">return</span> a<span class="hl opt">[</span>i<span class="hl opt">].</span>c<span class="hl opt">;</span>

    <span class="hl kwa">return</span> a<span class="hl opt">[</span>a<span class="hl opt">.</span>Length <span class="hl opt">-</span> <span class="hl num">1</span><span class="hl opt">].</span>c<span class="hl opt">;</span>
  <span class="hl opt">}</span>

  <span class="hl kwa">static</span> <span class="hl kwb">void</span> <span class="hl kwd">MakeCumulative</span><span class="hl opt">(</span>Frequency<span class="hl opt">[]</span> a<span class="hl opt">)</span>
  <span class="hl opt">{</span>
    <span class="hl kwb">double</span> cp <span class="hl opt">=</span> <span class="hl num">0.0</span><span class="hl opt">;</span>
    <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwb">int</span> i <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> i <span class="hl opt">&lt;</span> a<span class="hl opt">.</span>Length<span class="hl opt">;</span> i<span class="hl opt">++)</span>
    <span class="hl opt">{</span>
      cp <span class="hl opt">+=</span> a<span class="hl opt">[</span>i<span class="hl opt">].</span>p<span class="hl opt">;</span>
      a<span class="hl opt">[</span>i<span class="hl opt">].</span>p <span class="hl opt">=</span> cp<span class="hl opt">;</span>
    <span class="hl opt">}</span>
  <span class="hl opt">}</span>

  <span class="hl kwa">static</span> <span class="hl kwb">string</span> ALU <span class="hl opt">=</span>
    <span class="hl str">&quot;GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG&quot;</span> <span class="hl opt">+</span>
    <span class="hl str">&quot;GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA&quot;</span> <span class="hl opt">+</span>
    <span class="hl str">&quot;CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT&quot;</span> <span class="hl opt">+</span>
    <span class="hl str">&quot;ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA&quot;</span> <span class="hl opt">+</span>
    <span class="hl str">&quot;GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG&quot;</span> <span class="hl opt">+</span>
    <span class="hl str">&quot;AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC&quot;</span> <span class="hl opt">+</span>
    <span class="hl str">&quot;AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA&quot;</span><span class="hl opt">;</span>

  <span class="hl kwa">class</span> Frequency
  <span class="hl opt">{</span>
    <span class="hl kwa">public readonly</span> <span class="hl kwb">byte</span> c<span class="hl opt">;</span>
    <span class="hl kwa">public</span> <span class="hl kwb">double</span> p<span class="hl opt">;</span>

    <span class="hl kwa">public</span> <span class="hl kwd">Frequency</span><span class="hl opt">(</span><span class="hl kwb">char</span> c<span class="hl opt">,</span> <span class="hl kwb">double</span> p<span class="hl opt">)</span>
    <span class="hl opt">{</span>
      <span class="hl kwa">this</span><span class="hl opt">.</span>c <span class="hl opt">= (</span><span class="hl kwb">byte</span><span class="hl opt">)</span>c<span class="hl opt">;</span>
      <span class="hl kwa">this</span><span class="hl opt">.</span>p <span class="hl opt">=</span> p<span class="hl opt">;</span>
    <span class="hl opt">}</span>
  <span class="hl opt">}</span>

  <span class="hl kwa">static</span> Frequency<span class="hl opt">[]</span> IUB <span class="hl opt">= {</span>
	<span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'a'</span><span class="hl opt">,</span> <span class="hl num">0.27</span><span class="hl opt">)</span>
		<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'c'</span><span class="hl opt">,</span> <span class="hl num">0.12</span><span class="hl opt">)</span>
		<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'g'</span><span class="hl opt">,</span> <span class="hl num">0.12</span><span class="hl opt">)</span>
		<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'t'</span><span class="hl opt">,</span> <span class="hl num">0.27</span><span class="hl opt">)</span>

		<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'B'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">)</span>
		<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'D'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">)</span>
		<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'H'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">)</span>
		<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'K'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">)</span>
		<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'M'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">)</span>
		<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'N'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">)</span>
		<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'R'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">)</span>
		<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'S'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">)</span>
		<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'V'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">)</span>
		<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'W'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">)</span>
		<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'Y'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">)</span>
<span class="hl opt">};</span>

  <span class="hl kwa">static</span> Frequency<span class="hl opt">[]</span> HomoSapiens <span class="hl opt">= {</span>
	<span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'a'</span><span class="hl opt">,</span> <span class="hl num">0.3029549426680</span><span class="hl opt">)</span>
		<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'c'</span><span class="hl opt">,</span> <span class="hl num">0.1979883004921</span><span class="hl opt">)</span>
		<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'g'</span><span class="hl opt">,</span> <span class="hl num">0.1975473066391</span><span class="hl opt">)</span>
		<span class="hl opt">,</span><span class="hl kwa">new</span> <span class="hl kwd">Frequency</span> <span class="hl opt">(</span><span class="hl str">'t'</span><span class="hl opt">,</span> <span class="hl num">0.3015094502008</span><span class="hl opt">)</span>
<span class="hl opt">};</span>


  <span class="hl kwa">static</span> <span class="hl kwb">int</span><span class="hl opt">[]</span> <span class="hl kwd">random</span><span class="hl opt">(</span><span class="hl kwb">int</span> count<span class="hl opt">)</span>
  <span class="hl opt">{</span>
    <span class="hl kwb">int</span><span class="hl opt">[]</span> result <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwb">int</span><span class="hl opt">[</span>count<span class="hl opt">];</span>
    <span class="hl kwa">for</span> <span class="hl opt">(</span>var i <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> i <span class="hl opt">&lt;</span> result<span class="hl opt">.</span>Length<span class="hl opt">; ++</span>i<span class="hl opt">)</span>
    <span class="hl opt">{</span>
      seed <span class="hl opt">= (</span>seed <span class="hl opt">*</span> IA <span class="hl opt">+</span> IC<span class="hl opt">) %</span> IM<span class="hl opt">;</span>
      result<span class="hl opt">[</span>i<span class="hl opt">] =</span> seed<span class="hl opt">;</span>
    <span class="hl opt">}</span>
    <span class="hl kwa">return</span> result<span class="hl opt">;</span>
  <span class="hl opt">}</span>
  <span class="hl kwa">static</span> IEnumerable<span class="hl opt">&lt;</span><span class="hl kwb">int</span><span class="hl opt">[]&gt;</span> <span class="hl kwd">RandomSequence</span><span class="hl opt">(</span><span class="hl kwb">int</span> count<span class="hl opt">,</span> <span class="hl kwb">int</span> len <span class="hl opt">=</span> <span class="hl num">1024</span><span class="hl opt">)</span>
  <span class="hl opt">{</span>
    <span class="hl kwa">for</span> <span class="hl opt">(</span>var i <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> i <span class="hl opt">&lt;</span> count<span class="hl opt">;</span> i <span class="hl opt">+=</span> len<span class="hl opt">)</span>
    <span class="hl opt">{</span>
      var rnd <span class="hl opt">=</span> <span class="hl kwd">random</span><span class="hl opt">(</span>Math<span class="hl opt">.</span><span class="hl kwd">Min</span><span class="hl opt">(</span>len<span class="hl opt">,</span> count <span class="hl opt">-</span> i<span class="hl opt">));</span>
      yield <span class="hl kwa">return</span> rnd<span class="hl opt">;</span>
    <span class="hl opt">}</span>
  <span class="hl opt">}</span>

<span class="hl opt">}</span>
