<span class="hl slc">-- The Computer Language Shootout</span>
<span class="hl slc">-- http://shootout.alioth.debian.org/</span>
<span class="hl slc">-- contributed by Mike Pall</span>
<span class="hl slc">-- modified by Sokolov yura</span>

<span class="hl kwb">collectgarbage</span><span class="hl sym">(</span><span class="hl str">&quot;setstepmul&quot;</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">)</span> <span class="hl slc">-- sometimes it helps much. For this benchmark ~ 10%</span>

<span class="hl kwa">local function</span> <span class="hl kwd">BottomUpTree</span><span class="hl sym">(</span>item<span class="hl sym">,</span> depth<span class="hl sym">)</span>
  <span class="hl kwa">if</span> depth <span class="hl sym">&gt;</span> <span class="hl num">0</span> <span class="hl kwa">then</span>
    <span class="hl kwa">local</span> i <span class="hl sym">=</span> item <span class="hl sym">+</span> item
    depth <span class="hl sym">=</span> depth <span class="hl sym">-</span> <span class="hl num">1</span>
    <span class="hl kwa">local</span> left<span class="hl sym">,</span> right <span class="hl sym">=</span> <span class="hl kwd">BottomUpTree</span><span class="hl sym">(</span>i<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">,</span> depth<span class="hl sym">),</span> <span class="hl kwd">BottomUpTree</span><span class="hl sym">(</span>i<span class="hl sym">,</span> depth<span class="hl sym">)</span>
    <span class="hl kwa">return</span> <span class="hl sym">{</span> item<span class="hl sym">,</span> left<span class="hl sym">,</span> right <span class="hl sym">}</span>
  <span class="hl kwa">else</span>
    <span class="hl kwa">return</span> <span class="hl sym">{</span> item <span class="hl sym">}</span> <span class="hl slc">-- Faster for LuaJIT: return { item, false }</span>
  <span class="hl kwa">end</span>
<span class="hl kwa">end</span>

<span class="hl kwa">local function</span> <span class="hl kwd">ItemCheck</span><span class="hl sym">(</span>tree<span class="hl sym">)</span>
  <span class="hl kwa">if</span> <span class="hl sym">#</span>tree <span class="hl sym">==</span> <span class="hl num">3</span> <span class="hl kwa">then</span> <span class="hl slc">-- Faster for LuaJIT: if tree[2] then</span>
    <span class="hl kwa">return</span> tree<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">] +</span> <span class="hl kwd">ItemCheck</span><span class="hl sym">(</span>tree<span class="hl sym">[</span><span class="hl num">2</span><span class="hl sym">]) -</span> <span class="hl kwd">ItemCheck</span><span class="hl sym">(</span>tree<span class="hl sym">[</span><span class="hl num">3</span><span class="hl sym">])</span>
  <span class="hl kwa">else</span>
    <span class="hl kwa">return</span> tree<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]</span>
  <span class="hl kwa">end</span>
<span class="hl kwa">end</span>

<span class="hl kwa">local</span> N <span class="hl sym">=</span> <span class="hl kwb">tonumber</span><span class="hl sym">(</span>arg <span class="hl kwa">and</span> arg<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">])</span> <span class="hl kwa">or</span> <span class="hl num">0</span>
<span class="hl kwa">local</span> mindepth <span class="hl sym">=</span> <span class="hl num">4</span>
<span class="hl kwa">local</span> maxdepth <span class="hl sym">=</span> mindepth <span class="hl sym">+</span> <span class="hl num">2</span>
<span class="hl kwa">if</span> maxdepth <span class="hl sym">&lt;</span> N <span class="hl kwa">then</span> maxdepth <span class="hl sym">=</span> N <span class="hl kwa">end</span>

<span class="hl kwa">do</span>
  <span class="hl kwa">local</span> stretchdepth <span class="hl sym">=</span> maxdepth <span class="hl sym">+</span> <span class="hl num">1</span>
  <span class="hl kwa">local</span> stretchtree <span class="hl sym">=</span> <span class="hl kwd">BottomUpTree</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> stretchdepth<span class="hl sym">)</span>
  io<span class="hl sym">.</span><span class="hl kwb">write</span><span class="hl sym">(</span><span class="hl kwb">string</span><span class="hl sym">.</span><span class="hl kwb">format</span><span class="hl sym">(</span><span class="hl str">&quot;stretch tree of depth %d</span><span class="hl esc">\t</span> <span class="hl str">check: %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span>
    stretchdepth<span class="hl sym">,</span> <span class="hl kwd">ItemCheck</span><span class="hl sym">(</span>stretchtree<span class="hl sym">)))</span>
<span class="hl kwa">end</span>

<span class="hl kwa">local</span> longlivedtree <span class="hl sym">=</span> <span class="hl kwd">BottomUpTree</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> maxdepth<span class="hl sym">)</span>

<span class="hl kwa">for</span> depth<span class="hl sym">=</span>mindepth<span class="hl sym">,</span>maxdepth<span class="hl sym">,</span><span class="hl num">2</span> <span class="hl kwa">do</span>
  <span class="hl kwa">local</span> iterations <span class="hl sym">=</span> <span class="hl num">2</span> ^ <span class="hl sym">(</span>maxdepth <span class="hl sym">-</span> depth <span class="hl sym">+</span> mindepth<span class="hl sym">)</span>
  <span class="hl kwa">local</span> check <span class="hl sym">=</span> <span class="hl num">0</span>
  <span class="hl kwa">for</span> i<span class="hl sym">=</span><span class="hl num">1</span><span class="hl sym">,</span>iterations <span class="hl kwa">do</span>
    check <span class="hl sym">=</span> check <span class="hl sym">+</span> <span class="hl kwd">ItemCheck</span><span class="hl sym">(</span><span class="hl kwd">BottomUpTree</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span> depth<span class="hl sym">)) +</span>
            <span class="hl kwd">ItemCheck</span><span class="hl sym">(</span><span class="hl kwd">BottomUpTree</span><span class="hl sym">(-</span><span class="hl num">1</span><span class="hl sym">,</span> depth<span class="hl sym">))</span>
  <span class="hl kwa">end</span>
  io<span class="hl sym">.</span><span class="hl kwb">write</span><span class="hl sym">(</span><span class="hl kwb">string</span><span class="hl sym">.</span><span class="hl kwb">format</span><span class="hl sym">(</span><span class="hl str">&quot;%d</span><span class="hl esc">\t</span> <span class="hl str">trees of depth %d</span><span class="hl esc">\t</span> <span class="hl str">check: %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span>
    iterations<span class="hl sym">*</span><span class="hl num">2</span><span class="hl sym">,</span> depth<span class="hl sym">,</span> check<span class="hl sym">))</span>
<span class="hl kwa">end</span>

io<span class="hl sym">.</span><span class="hl kwb">write</span><span class="hl sym">(</span><span class="hl kwb">string</span><span class="hl sym">.</span><span class="hl kwb">format</span><span class="hl sym">(</span><span class="hl str">&quot;long lived tree of depth %d</span><span class="hl esc">\t</span> <span class="hl str">check: %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span>
  maxdepth<span class="hl sym">,</span> <span class="hl kwd">ItemCheck</span><span class="hl sym">(</span>longlivedtree<span class="hl sym">)))</span>

