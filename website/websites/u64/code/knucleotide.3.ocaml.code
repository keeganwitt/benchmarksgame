<span class="hl com">(* The Computer Language Benchmarks Game</span>
<span class="hl com"> * http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"> *</span>
<span class="hl com"> * contributed by Troestler Christophe</span>
<span class="hl com"> * modified by Mauricio Fernandez</span>
<span class="hl com"> * optimized by Fabrice Le Fessant</span>
<span class="hl com"> *)</span>

<span class="hl kwa">let</span> tab <span class="hl opt">=</span> <span class="hl kwc">Array</span><span class="hl opt">.</span>create <span class="hl num">256 0</span>
<span class="hl kwa">let</span> _ <span class="hl opt">=</span>
  tab<span class="hl opt">.(</span><span class="hl kwc">Char</span><span class="hl opt">.</span>code <span class="hl str">'A'</span><span class="hl opt">) &lt;-</span> <span class="hl num">0</span><span class="hl opt">;</span>
  tab<span class="hl opt">.(</span><span class="hl kwc">Char</span><span class="hl opt">.</span>code <span class="hl str">'a'</span><span class="hl opt">) &lt;-</span> <span class="hl num">0</span><span class="hl opt">;</span>
  tab<span class="hl opt">.(</span><span class="hl kwc">Char</span><span class="hl opt">.</span>code <span class="hl str">'T'</span><span class="hl opt">) &lt;-</span> <span class="hl num">1</span><span class="hl opt">;</span>
  tab<span class="hl opt">.(</span><span class="hl kwc">Char</span><span class="hl opt">.</span>code <span class="hl str">'t'</span><span class="hl opt">) &lt;-</span> <span class="hl num">1</span><span class="hl opt">;</span>
  tab<span class="hl opt">.(</span><span class="hl kwc">Char</span><span class="hl opt">.</span>code <span class="hl str">'C'</span><span class="hl opt">) &lt;-</span> <span class="hl num">2</span><span class="hl opt">;</span>
  tab<span class="hl opt">.(</span><span class="hl kwc">Char</span><span class="hl opt">.</span>code <span class="hl str">'c'</span><span class="hl opt">) &lt;-</span> <span class="hl num">2</span><span class="hl opt">;</span>
  tab<span class="hl opt">.(</span><span class="hl kwc">Char</span><span class="hl opt">.</span>code <span class="hl str">'g'</span><span class="hl opt">) &lt;-</span> <span class="hl num">3</span><span class="hl opt">;</span>
  tab<span class="hl opt">.(</span><span class="hl kwc">Char</span><span class="hl opt">.</span>code <span class="hl str">'G'</span><span class="hl opt">) &lt;-</span> <span class="hl num">3</span>

<span class="hl kwa">let</span> uppercase line <span class="hl opt">=</span>
  <span class="hl kwa">let</span> len <span class="hl opt">=</span> <span class="hl kwc">String</span><span class="hl opt">.</span>length line <span class="hl kwa">in</span>
    <span class="hl kwa">for</span> i <span class="hl opt">=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> len<span class="hl opt">-</span> <span class="hl num">1</span> <span class="hl kwa">do</span>
      <span class="hl kwa">let</span> c <span class="hl opt">=</span>  line<span class="hl opt">.[</span>i<span class="hl opt">]</span> <span class="hl kwa">in</span>
	line<span class="hl opt">.[</span>i<span class="hl opt">] &lt;-</span> <span class="hl kwc">Char</span><span class="hl opt">.</span>unsafe_chr tab<span class="hl opt">.(</span><span class="hl kwc">Char</span><span class="hl opt">.</span>code c<span class="hl opt">)</span>
    <span class="hl kwa">done</span>

    <span class="hl com">(* Extract DNA sequence &quot;THREE&quot; from stdin *)</span>
    <span class="hl kwa">let</span> dna <span class="hl opt">=</span>
      <span class="hl kwa">let</span> is_not_three s <span class="hl opt">=</span> <span class="hl kwc">String</span><span class="hl opt">.</span>length s <span class="hl opt">&lt;</span> <span class="hl num">6</span> || <span class="hl kwc">String</span><span class="hl opt">.</span>sub s <span class="hl num">0 6</span> <span class="hl opt">&lt;&gt;</span> <span class="hl str">&quot;&gt;THREE&quot;</span> <span class="hl kwa">in</span>
	<span class="hl kwa">while</span> is_not_three<span class="hl opt">(</span>input_line stdin<span class="hl opt">)</span> <span class="hl kwa">do</span> <span class="hl opt">()</span> <span class="hl kwa">done</span><span class="hl opt">;</span>
	<span class="hl kwa">let</span> buf <span class="hl opt">=</span> <span class="hl kwc">Buffer</span><span class="hl opt">.</span>create <span class="hl num">130_000_000</span> <span class="hl kwa">in</span>
	  <span class="hl com">(* Skip possible comment *)</span>
	  <span class="hl opt">(</span><span class="hl kwa">try</span>
	     <span class="hl kwa">while true do</span>
	       <span class="hl kwa">let</span> line <span class="hl opt">=</span> input_line stdin <span class="hl kwa">in</span>
		 <span class="hl kwa">if</span> line<span class="hl opt">.[</span><span class="hl num">0</span><span class="hl opt">] &lt;&gt;</span> <span class="hl str">';'</span> <span class="hl kwa">then begin</span>
		   uppercase line<span class="hl opt">;</span>
		   <span class="hl kwc">Buffer</span><span class="hl opt">.</span>add_string buf line<span class="hl opt">;</span>
		   raise <span class="hl kwd">Exit</span>
		 <span class="hl kwa">end</span>
	     <span class="hl kwa">done with</span> _ <span class="hl opt">-&gt; ());</span>
	  <span class="hl com">(* Read the DNA sequence *)</span>
	  <span class="hl opt">(</span><span class="hl kwa">try while true do</span>
	     <span class="hl kwa">let</span> line <span class="hl opt">=</span> input_line stdin <span class="hl kwa">in</span>
	       <span class="hl kwa">if</span> line<span class="hl opt">.[</span><span class="hl num">0</span><span class="hl opt">] =</span> <span class="hl str">'&gt;'</span> <span class="hl kwa">then</span> raise <span class="hl kwd">End_of_file</span><span class="hl opt">;</span>
	       uppercase line<span class="hl opt">;</span>
	       <span class="hl kwc">Buffer</span><span class="hl opt">.</span>add_string buf line
	   <span class="hl kwa">done with</span> <span class="hl kwd">End_of_file</span> <span class="hl opt">-&gt; ());</span>
	  <span class="hl kwc">Buffer</span><span class="hl opt">.</span>contents buf


    <span class="hl kwa">module</span> <span class="hl kwd">K15</span> <span class="hl opt">=</span> <span class="hl kwa">struct</span>
      <span class="hl kwa">type</span> t <span class="hl opt">=</span> <span class="hl kwb">int</span>
      <span class="hl kwa">let</span> equal k1 k2 <span class="hl opt">=</span> k1 <span class="hl opt">=</span> k2
      <span class="hl kwa">let</span> hash n <span class="hl opt">=</span> n
    <span class="hl kwa">end</span>

    <span class="hl kwa">module</span> <span class="hl kwd">K16</span> <span class="hl opt">=</span> <span class="hl kwa">struct</span>
      <span class="hl kwa">type</span> t <span class="hl opt">=</span> <span class="hl kwb">int</span> <span class="hl opt">*</span> <span class="hl kwb">int</span>
      <span class="hl kwa">let</span> equal <span class="hl opt">(</span>a1<span class="hl opt">,</span>a2<span class="hl opt">) (</span>b1<span class="hl opt">,</span>b2<span class="hl opt">) =</span> a1 <span class="hl opt">=</span> b1 <span class="hl opt">&amp;&amp;</span> a2 <span class="hl opt">=</span> b2
      <span class="hl kwa">let</span> hash <span class="hl opt">(</span>a1<span class="hl opt">,</span> _<span class="hl opt">) =</span> a1
    <span class="hl kwa">end</span>

    <span class="hl kwa">type</span> entry <span class="hl opt">= {</span>
      <span class="hl kwa">mutable</span> count <span class="hl opt">:</span> <span class="hl kwb">int</span><span class="hl opt">;</span>
    <span class="hl opt">}</span>

    <span class="hl kwa">let</span> threshold15 <span class="hl opt">=</span>
      <span class="hl kwa">match</span> <span class="hl kwc">Sys</span><span class="hl opt">.</span>word_size <span class="hl kwa">with</span>
	  <span class="hl num">32</span> <span class="hl opt">-&gt;</span> <span class="hl num">15</span>
	| <span class="hl num">64</span> <span class="hl opt">-&gt;</span> <span class="hl num">31</span>
	| _ <span class="hl opt">-&gt;</span> <span class="hl kwa">assert false</span>
    <span class="hl kwa">let</span> threshold16 <span class="hl opt">=</span> threshold15 <span class="hl opt">+</span> <span class="hl num">1</span>

    <span class="hl kwa">let</span> c <span class="hl opt">=</span> <span class="hl num">0x40000</span><span class="hl opt">-</span><span class="hl num">1</span>
    <span class="hl kwa">module</span> <span class="hl kwd">H15</span> <span class="hl opt">=</span> <span class="hl kwc">Hashtbl</span><span class="hl opt">.</span><span class="hl kwd">Make</span><span class="hl opt">(</span><span class="hl kwd">K15</span><span class="hl opt">)</span>
    <span class="hl kwa">module</span> <span class="hl kwd">H16</span> <span class="hl opt">=</span> <span class="hl kwc">Hashtbl</span><span class="hl opt">.</span><span class="hl kwd">Make</span><span class="hl opt">(</span><span class="hl kwd">K16</span><span class="hl opt">)</span>
    <span class="hl kwa">let</span> h15 <span class="hl opt">=</span> <span class="hl kwc">H15</span><span class="hl opt">.</span>create c
    <span class="hl kwa">let</span> h16 <span class="hl opt">=</span> <span class="hl kwc">H16</span><span class="hl opt">.</span>create c

    <span class="hl kwa">let rec</span> pack_word n k h <span class="hl opt">=</span>
      <span class="hl kwa">let</span> b <span class="hl opt">=</span> <span class="hl kwc">Char</span><span class="hl opt">.</span>code dna<span class="hl opt">.[</span>n<span class="hl opt">]</span> <span class="hl kwa">in</span>
      <span class="hl kwa">let</span> h <span class="hl opt">=</span> h <span class="hl opt">*</span> <span class="hl num">4</span> <span class="hl opt">+</span> b <span class="hl kwa">in</span>
	<span class="hl kwa">if</span> k <span class="hl opt">&gt;</span> <span class="hl num">1</span> <span class="hl kwa">then</span>
	  pack_word <span class="hl opt">(</span>n<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">) (</span>k<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">)</span> h
	<span class="hl kwa">else</span> h

    <span class="hl kwa">let</span> pack15 k n <span class="hl opt">=</span>
      pack_word n k <span class="hl num">0</span>

    <span class="hl kwa">let</span> pack16 k n <span class="hl opt">=</span>
      <span class="hl kwa">let</span> h1 <span class="hl opt">=</span> pack_word n threshold15 <span class="hl num">0</span> <span class="hl kwa">in</span>
      <span class="hl kwa">let</span> h2 <span class="hl opt">=</span> pack_word <span class="hl opt">(</span>n<span class="hl opt">+</span> threshold15<span class="hl opt">) (</span>k<span class="hl opt">-</span> threshold15<span class="hl opt">)</span> <span class="hl num">0</span> <span class="hl kwa">in</span>
	<span class="hl opt">(</span>h1<span class="hl opt">,</span> h2<span class="hl opt">)</span>

    <span class="hl kwa">let rec</span> pack_word_in dna n k h <span class="hl opt">=</span>
      <span class="hl kwa">let</span> b <span class="hl opt">=</span> dna<span class="hl opt">.[</span>n<span class="hl opt">]</span> <span class="hl kwa">in</span>
      <span class="hl kwa">let</span> b <span class="hl opt">=</span> tab<span class="hl opt">.(</span><span class="hl kwc">Char</span><span class="hl opt">.</span>code b<span class="hl opt">)</span> <span class="hl kwa">in</span>
      <span class="hl kwa">let</span> h <span class="hl opt">=</span> h <span class="hl opt">*</span> <span class="hl num">4</span> <span class="hl opt">+</span> b <span class="hl kwa">in</span>
	<span class="hl kwa">if</span> k <span class="hl opt">&gt;</span> <span class="hl num">1</span> <span class="hl kwa">then</span>
	  pack_word_in dna <span class="hl opt">(</span>n<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">) (</span>k<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">)</span> h
	<span class="hl kwa">else</span> h

    <span class="hl kwa">let</span> pack_key15 seq <span class="hl opt">=</span>
      <span class="hl kwa">let</span> k <span class="hl opt">=</span> <span class="hl kwc">String</span><span class="hl opt">.</span>length seq <span class="hl kwa">in</span>
	pack_word_in seq <span class="hl num">0</span> k <span class="hl num">0</span>

    <span class="hl kwa">let</span> pack_key16 seq <span class="hl opt">=</span>
      <span class="hl kwa">let</span> k <span class="hl opt">=</span> <span class="hl kwc">String</span><span class="hl opt">.</span>length seq <span class="hl kwa">in</span>
      <span class="hl kwa">let</span> h1 <span class="hl opt">=</span> pack_word_in seq <span class="hl num">0</span> threshold15 <span class="hl num">0</span> <span class="hl kwa">in</span>
      <span class="hl kwa">let</span> h2 <span class="hl opt">=</span> pack_word_in seq threshold15 <span class="hl opt">(</span>k<span class="hl opt">-</span> threshold15<span class="hl opt">)</span> <span class="hl num">0</span> <span class="hl kwa">in</span>
	<span class="hl opt">(</span>h1<span class="hl opt">,</span> h2<span class="hl opt">)</span>

    <span class="hl kwa">let</span> char <span class="hl opt">= [</span>| <span class="hl str">'A'</span><span class="hl opt">;</span> <span class="hl str">'T'</span><span class="hl opt">;</span> <span class="hl str">'C'</span><span class="hl opt">;</span> <span class="hl str">'G'</span> |<span class="hl opt">]</span>

    <span class="hl kwa">let rec</span> unpack h s pos k <span class="hl opt">=</span>
      <span class="hl kwa">let</span> pos <span class="hl opt">=</span> pos <span class="hl opt">-</span> <span class="hl num">1</span> <span class="hl kwa">in</span>
	s<span class="hl opt">.[</span>pos<span class="hl opt">] &lt;-</span> char<span class="hl opt">.(</span>h <span class="hl kwa">land</span> <span class="hl num">3</span><span class="hl opt">);</span>
	<span class="hl kwa">if</span> k <span class="hl opt">&gt;</span> <span class="hl num">1</span> <span class="hl kwa">then</span>
	  unpack <span class="hl opt">(</span>h <span class="hl kwa">lsr</span> <span class="hl num">2</span><span class="hl opt">)</span> s pos <span class="hl opt">(</span>k<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">)</span>

    <span class="hl kwa">let</span> unpack15 k h1 <span class="hl opt">=</span>
      <span class="hl kwa">let</span> s <span class="hl opt">=</span> <span class="hl kwc">String</span><span class="hl opt">.</span>create k <span class="hl kwa">in</span>
	unpack h1 s k k<span class="hl opt">;</span>
	s

    <span class="hl kwa">let</span> unpack16 k <span class="hl opt">(</span>h1<span class="hl opt">,</span> h2<span class="hl opt">) =</span>
      <span class="hl kwa">let</span> s <span class="hl opt">=</span> <span class="hl kwc">String</span><span class="hl opt">.</span>create k <span class="hl kwa">in</span>
	unpack h1 s threshold15 threshold15<span class="hl opt">;</span>
	unpack h2 s k <span class="hl opt">(</span>k<span class="hl opt">-</span> threshold15<span class="hl opt">);</span>
	s

    <span class="hl kwa">let</span> count15 k <span class="hl opt">=</span>
      <span class="hl kwa">for</span> i <span class="hl opt">=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> <span class="hl kwc">String</span><span class="hl opt">.</span>length dna <span class="hl opt">-</span> k <span class="hl opt">-</span> <span class="hl num">1</span> <span class="hl kwa">do</span>
	<span class="hl kwa">let</span> packed <span class="hl opt">=</span> pack15 k i <span class="hl kwa">in</span>
	  <span class="hl kwa">try</span>
	    <span class="hl kwa">let</span> key <span class="hl opt">=</span> <span class="hl kwc">H15</span><span class="hl opt">.</span>find h15 packed <span class="hl kwa">in</span>
	      key<span class="hl opt">.</span>count <span class="hl opt">&lt;-</span> key<span class="hl opt">.</span>count <span class="hl opt">+</span> <span class="hl num">1</span>
	  <span class="hl kwa">with</span> <span class="hl kwd">Not_found</span> <span class="hl opt">-&gt;</span>
	    <span class="hl kwc">H15</span><span class="hl opt">.</span>add h15 packed <span class="hl opt">{</span> count <span class="hl opt">=</span> <span class="hl num">1</span> <span class="hl opt">}</span>
      <span class="hl kwa">done</span>

    <span class="hl kwa">let</span> count16 k <span class="hl opt">=</span>
      <span class="hl kwa">for</span> i <span class="hl opt">=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> <span class="hl kwc">String</span><span class="hl opt">.</span>length dna <span class="hl opt">-</span> k <span class="hl opt">-</span> <span class="hl num">1</span> <span class="hl kwa">do</span>
	<span class="hl kwa">let</span> packed <span class="hl opt">=</span> pack16 k i <span class="hl kwa">in</span>
	  <span class="hl kwa">try</span>
	    <span class="hl kwa">let</span> key <span class="hl opt">=</span> <span class="hl kwc">H16</span><span class="hl opt">.</span>find h16 packed <span class="hl kwa">in</span>
	      key<span class="hl opt">.</span>count <span class="hl opt">&lt;-</span> key<span class="hl opt">.</span>count <span class="hl opt">+</span> <span class="hl num">1</span>
	  <span class="hl kwa">with</span> <span class="hl kwd">Not_found</span> <span class="hl opt">-&gt;</span>
	    <span class="hl kwc">H16</span><span class="hl opt">.</span>add h16 packed <span class="hl opt">{</span> count <span class="hl opt">=</span> <span class="hl num">1</span> <span class="hl opt">}</span>
      <span class="hl kwa">done</span>

    <span class="hl kwa">let</span> count k <span class="hl opt">=</span>
      <span class="hl kwa">if</span> k <span class="hl opt">&lt;</span> threshold16 <span class="hl kwa">then</span> count15 k <span class="hl kwa">else</span> count16 k

    <span class="hl kwa">let</span> compare_freq <span class="hl opt">((</span>k1<span class="hl opt">:</span><span class="hl kwb">string</span><span class="hl opt">),(</span>f1<span class="hl opt">:</span><span class="hl kwb">float</span><span class="hl opt">)) (</span>k2<span class="hl opt">,</span> f2<span class="hl opt">) =</span>
      <span class="hl kwa">if</span> f1 <span class="hl opt">&gt;</span> f2 <span class="hl kwa">then</span> <span class="hl opt">-</span><span class="hl num">1</span> <span class="hl kwa">else if</span> f1 <span class="hl opt">&lt;</span> f2 <span class="hl kwa">then</span> <span class="hl num">1</span> <span class="hl kwa">else</span> <span class="hl kwc">String</span><span class="hl opt">.</span>compare k1 k2

    <span class="hl kwa">let</span> write_frequencies15 k <span class="hl opt">=</span>
      count15 k<span class="hl opt">;</span>
      <span class="hl kwa">let</span> tot <span class="hl opt">=</span> <span class="hl kwb">float</span><span class="hl opt">(</span><span class="hl kwc">H15</span><span class="hl opt">.</span>fold <span class="hl opt">(</span><span class="hl kwa">fun</span> _ n t <span class="hl opt">-&gt;</span> n<span class="hl opt">.</span>count <span class="hl opt">+</span> t<span class="hl opt">)</span> h15 <span class="hl num">0</span><span class="hl opt">)</span> <span class="hl kwa">in</span>
      <span class="hl kwa">let</span> frq <span class="hl opt">=</span>
	<span class="hl kwc">H15</span><span class="hl opt">.</span>fold <span class="hl opt">(</span><span class="hl kwa">fun</span> h n l <span class="hl opt">-&gt;</span>
		  <span class="hl opt">(</span>unpack15 k h<span class="hl opt">,</span> <span class="hl num">100</span><span class="hl opt">. *.</span> <span class="hl kwb">float</span> n<span class="hl opt">.</span>count <span class="hl opt">/.</span> tot<span class="hl opt">) ::</span> l<span class="hl opt">)</span> h15 <span class="hl opt">[]</span> <span class="hl kwa">in</span>
      <span class="hl kwa">let</span> frq <span class="hl opt">=</span> <span class="hl kwc">List</span><span class="hl opt">.</span>sort compare_freq frq <span class="hl kwa">in</span>
	<span class="hl kwc">String</span><span class="hl opt">.</span>concat <span class="hl str">&quot;&quot;</span>
	  <span class="hl opt">(</span><span class="hl kwc">List</span><span class="hl opt">.</span>map <span class="hl opt">(</span><span class="hl kwa">fun</span> <span class="hl opt">(</span>k<span class="hl opt">,</span>f<span class="hl opt">) -&gt;</span> <span class="hl kwc">Printf</span><span class="hl opt">.</span>sprintf <span class="hl str">&quot;%s %.3f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> k f<span class="hl opt">)</span> frq<span class="hl opt">)</span>

    <span class="hl kwa">let</span> write_frequencies16 k <span class="hl opt">=</span>
      count16 k<span class="hl opt">;</span>
      <span class="hl kwa">let</span> tot <span class="hl opt">=</span> <span class="hl kwb">float</span><span class="hl opt">(</span><span class="hl kwc">H16</span><span class="hl opt">.</span>fold <span class="hl opt">(</span><span class="hl kwa">fun</span> _ n t <span class="hl opt">-&gt;</span> n<span class="hl opt">.</span>count <span class="hl opt">+</span> t<span class="hl opt">)</span> h16 <span class="hl num">0</span><span class="hl opt">)</span> <span class="hl kwa">in</span>
      <span class="hl kwa">let</span> frq <span class="hl opt">=</span>
	<span class="hl kwc">H16</span><span class="hl opt">.</span>fold <span class="hl opt">(</span><span class="hl kwa">fun</span> h n l <span class="hl opt">-&gt;</span>
		  <span class="hl opt">(</span>unpack16 k h<span class="hl opt">,</span> <span class="hl num">100</span><span class="hl opt">. *.</span> <span class="hl kwb">float</span> n<span class="hl opt">.</span>count <span class="hl opt">/.</span> tot<span class="hl opt">) ::</span> l<span class="hl opt">)</span> h16 <span class="hl opt">[]</span> <span class="hl kwa">in</span>
      <span class="hl kwa">let</span> frq <span class="hl opt">=</span> <span class="hl kwc">List</span><span class="hl opt">.</span>sort compare_freq frq <span class="hl kwa">in</span>
	<span class="hl kwc">String</span><span class="hl opt">.</span>concat <span class="hl str">&quot;&quot;</span>
	  <span class="hl opt">(</span><span class="hl kwc">List</span><span class="hl opt">.</span>map <span class="hl opt">(</span><span class="hl kwa">fun</span> <span class="hl opt">(</span>k<span class="hl opt">,</span>f<span class="hl opt">) -&gt;</span> <span class="hl kwc">Printf</span><span class="hl opt">.</span>sprintf <span class="hl str">&quot;%s %.3f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> k f<span class="hl opt">)</span> frq<span class="hl opt">)</span>

    <span class="hl kwa">let</span> write_count15 k seq <span class="hl opt">=</span>
	count15 k<span class="hl opt">;</span>
	<span class="hl kwc">Printf</span><span class="hl opt">.</span>sprintf <span class="hl str">&quot;%d</span><span class="hl esc">\t</span><span class="hl str">%s&quot;</span> <span class="hl opt">(</span><span class="hl kwa">try</span> <span class="hl opt">(</span><span class="hl kwc">H15</span><span class="hl opt">.</span>find h15 <span class="hl opt">(</span>pack_key15 seq<span class="hl opt">)).</span>count <span class="hl kwa">with</span> <span class="hl kwd">Not_found</span> <span class="hl opt">-&gt;</span> <span class="hl num">0</span><span class="hl opt">)</span> seq

    <span class="hl kwa">let</span> write_count16 k seq <span class="hl opt">=</span>
	count16 k<span class="hl opt">;</span>
	<span class="hl kwc">Printf</span><span class="hl opt">.</span>sprintf <span class="hl str">&quot;%d</span><span class="hl esc">\t</span><span class="hl str">%s&quot;</span> <span class="hl opt">(</span><span class="hl kwa">try</span> <span class="hl opt">(</span><span class="hl kwc">H16</span><span class="hl opt">.</span>find h16 <span class="hl opt">(</span>pack_key16 seq<span class="hl opt">)).</span>count <span class="hl kwa">with</span> <span class="hl kwd">Not_found</span> <span class="hl opt">-&gt;</span> <span class="hl num">0</span><span class="hl opt">)</span> seq

    <span class="hl kwa">let</span> write_frequencies k <span class="hl opt">=</span>
	<span class="hl kwa">if</span> k <span class="hl opt">&lt;</span> threshold16 <span class="hl kwa">then</span> write_frequencies15 k
	<span class="hl kwa">else</span> write_frequencies16 k

    <span class="hl kwa">let</span> write_count seq <span class="hl opt">=</span>
      <span class="hl kwa">let</span> k <span class="hl opt">=</span> <span class="hl kwc">String</span><span class="hl opt">.</span>length seq <span class="hl kwa">in</span>
	<span class="hl kwa">if</span> k <span class="hl opt">&lt;</span> threshold16 <span class="hl kwa">then</span> write_count15 k seq
	<span class="hl kwa">else</span> write_count16 k seq

    <span class="hl kwa">type</span> t <span class="hl opt">=</span> <span class="hl kwd">Size</span> <span class="hl kwa">of</span> <span class="hl kwb">int</span> | <span class="hl kwd">Dna</span> <span class="hl kwa">of</span> <span class="hl kwb">string</span>

<span class="hl kwa">let</span> invoke <span class="hl opt">(</span>f <span class="hl opt">:</span> t <span class="hl opt">-&gt;</span> <span class="hl kwb">string</span><span class="hl opt">)</span> x <span class="hl opt">:</span> <span class="hl kwb">unit</span> <span class="hl opt">-&gt;</span> <span class="hl kwb">string</span> <span class="hl opt">=</span>
  <span class="hl kwa">let</span> input<span class="hl opt">,</span> output <span class="hl opt">=</span> <span class="hl kwc">Unix</span><span class="hl opt">.</span>pipe<span class="hl opt">()</span> <span class="hl kwa">in</span>
  <span class="hl kwa">match</span> <span class="hl kwc">Unix</span><span class="hl opt">.</span>fork<span class="hl opt">()</span> <span class="hl kwa">with</span>
  | <span class="hl opt">-</span><span class="hl num">1</span> <span class="hl opt">-&gt;</span> <span class="hl kwc">Unix</span><span class="hl opt">.</span>close input<span class="hl opt">;</span> <span class="hl kwc">Unix</span><span class="hl opt">.</span>close output<span class="hl opt">; (</span><span class="hl kwa">let</span> v <span class="hl opt">=</span> f x <span class="hl kwa">in fun</span> <span class="hl opt">() -&gt;</span> v<span class="hl opt">)</span>
  | <span class="hl num">0</span> <span class="hl opt">-&gt;</span>
      <span class="hl kwc">Unix</span><span class="hl opt">.</span>close input<span class="hl opt">;</span>
      <span class="hl kwa">let</span> output <span class="hl opt">=</span> <span class="hl kwc">Unix</span><span class="hl opt">.</span>out_channel_of_descr output <span class="hl kwa">in</span>
        <span class="hl kwc">Marshal</span><span class="hl opt">.</span>to_channel output <span class="hl opt">(</span>f x<span class="hl opt">) [];</span>
        close_out output<span class="hl opt">;</span>
        exit <span class="hl num">0</span>
  | pid <span class="hl opt">-&gt;</span>
      <span class="hl kwc">Unix</span><span class="hl opt">.</span>close output<span class="hl opt">;</span>
      <span class="hl kwa">let</span> input <span class="hl opt">=</span> <span class="hl kwc">Unix</span><span class="hl opt">.</span>in_channel_of_descr input <span class="hl kwa">in fun</span> <span class="hl opt">() -&gt;</span>
        <span class="hl kwa">let</span> v <span class="hl opt">=</span> <span class="hl kwc">Marshal</span><span class="hl opt">.</span>from_channel input <span class="hl kwa">in</span>
        ignore <span class="hl opt">(</span><span class="hl kwc">Unix</span><span class="hl opt">.</span>waitpid <span class="hl opt">[]</span> pid<span class="hl opt">);</span>
        close_in input<span class="hl opt">;</span>
	v

<span class="hl kwa">let</span> parallelize f l <span class="hl opt">=</span>
  <span class="hl kwa">let</span> list <span class="hl opt">=</span> <span class="hl kwc">List</span><span class="hl opt">.</span>map <span class="hl opt">(</span>invoke f<span class="hl opt">) (</span><span class="hl kwc">List</span><span class="hl opt">.</span>rev l<span class="hl opt">)</span> <span class="hl kwa">in</span>
  <span class="hl kwc">List</span><span class="hl opt">.</span>iter <span class="hl opt">(</span><span class="hl kwa">fun</span> g <span class="hl opt">-&gt;</span> print_endline <span class="hl opt">(</span>g <span class="hl opt">())) (</span><span class="hl kwc">List</span><span class="hl opt">.</span>rev list<span class="hl opt">)</span>

<span class="hl kwa">let</span> <span class="hl opt">() =</span>
  parallelize
    <span class="hl opt">(</span><span class="hl kwa">fun</span> i <span class="hl opt">-&gt;</span>
       <span class="hl kwa">match</span> i <span class="hl kwa">with</span>
	   <span class="hl kwd">Size</span> i <span class="hl opt">-&gt;</span>
             write_frequencies i
	 | <span class="hl kwd">Dna</span> k <span class="hl opt">-&gt;</span>
             write_count k
    <span class="hl opt">) [</span><span class="hl kwd">Size</span> <span class="hl num">1</span><span class="hl opt">;</span>
       <span class="hl kwd">Size</span> <span class="hl num">2</span><span class="hl opt">;</span>
       <span class="hl kwd">Dna</span> <span class="hl str">&quot;GGT&quot;</span><span class="hl opt">;</span>
       <span class="hl kwd">Dna</span> <span class="hl str">&quot;GGTA&quot;</span><span class="hl opt">;</span>
       <span class="hl kwd">Dna</span> <span class="hl str">&quot;GGTATT&quot;</span><span class="hl opt">;</span>
       <span class="hl kwd">Dna</span> <span class="hl str">&quot;GGTATTTTAATT&quot;</span><span class="hl opt">;</span>
       <span class="hl kwd">Dna</span> <span class="hl str">&quot;GGTATTTTAATTTATAGT&quot;</span><span class="hl opt">]</span>
