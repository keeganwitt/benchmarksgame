<span class="hl slc">;; The Computer Language Benchmarks Game</span>
<span class="hl slc">;; http://benchmarksgame.alioth.debian.org/</span>
<span class="hl slc">;;</span>
<span class="hl slc">;; contributed by Jesse Rosenstock</span>

<span class="hl opt">(</span><span class="hl kwa">ns</span> threadring
  <span class="hl opt">(:</span>gen-class<span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">set</span><span class="hl opt">! *</span>warn-on-reflection<span class="hl opt">*</span> true<span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defn</span> pass-message
  <span class="hl opt">[</span>the-agent
   ^Integer value
   first-agent<span class="hl opt">]</span>
  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">zero</span>? value<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">do</span> <span class="hl opt">(</span><span class="hl kwa">println</span> <span class="hl opt">(:</span>num the-agent<span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">shutdown-agents</span><span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">System</span><span class="hl opt">/</span>exit <span class="hl num">0</span><span class="hl opt">))</span>
    <span class="hl slc">; Pass to the next agent if we're not at the end of the line,</span>
    <span class="hl slc">; otherwise back to the first.</span>
    <span class="hl opt">(</span><span class="hl kwa">send</span> <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(:</span>next the-agent<span class="hl opt">) (:</span>next the-agent<span class="hl opt">)</span> first-agent<span class="hl opt">)</span>
          pass-message <span class="hl opt">(</span><span class="hl kwa">dec</span> value<span class="hl opt">)</span> first-agent<span class="hl opt">))</span>
  the-agent<span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defn</span> pass-messages
  <span class="hl opt">[</span>^Integer num-agents
   ^Integer num-messages<span class="hl opt">]</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">[</span>first-agent <span class="hl opt">(</span><span class="hl kwa">reduce</span> <span class="hl opt">(</span><span class="hl kwa">fn</span> <span class="hl opt">[</span>next-agent agent-num<span class="hl opt">]</span>
                              <span class="hl opt">(</span><span class="hl kwa">agent</span> <span class="hl opt">{:</span>next next-agent <span class="hl opt">:</span>num agent-num<span class="hl opt">}))</span>
                            nil
                            <span class="hl opt">(</span><span class="hl kwa">range</span> num-agents <span class="hl num">0</span> -<span class="hl num">1</span><span class="hl opt">))]</span>
    <span class="hl opt">(</span><span class="hl kwa">send</span> first-agent pass-message num-messages first-agent<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defn</span> -main <span class="hl opt">[&amp;</span> args<span class="hl opt">]</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">[</span>num-messages <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">empty</span>? args<span class="hl opt">)</span>
                       <span class="hl num">1000</span>
                       <span class="hl opt">(</span><span class="hl kwa">Integer</span><span class="hl opt">/</span>valueOf <span class="hl opt">(</span><span class="hl kwa">first</span> args<span class="hl opt">)))]</span>
    <span class="hl opt">(</span><span class="hl kwa">pass-messages</span> <span class="hl num">503</span> num-messages<span class="hl opt">)))</span>
