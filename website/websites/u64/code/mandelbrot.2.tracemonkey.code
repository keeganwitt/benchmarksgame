<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com">   contributed by Thomas GODART (based on Greg Buchholz's C program)</span>
<span class="hl com">   modified by TA</span>
<span class="hl com">*/</span>
<span class="hl kwa">var</span> i<span class="hl sym">,</span> x<span class="hl sym">,</span> y<span class="hl sym">,</span>
    bit_num <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">,</span>
    byte_acc <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">,</span>
    iter <span class="hl sym">=</span> <span class="hl num">50</span><span class="hl sym">,</span>
    limit <span class="hl sym">=</span> <span class="hl num">4</span><span class="hl sym">,</span>
    Zr<span class="hl sym">,</span> Zi<span class="hl sym">,</span> Cr<span class="hl sym">,</span> Ci<span class="hl sym">,</span> Tr<span class="hl sym">,</span> Ti<span class="hl sym">,</span>
    d <span class="hl sym">= +</span>arguments<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">];</span>

<span class="hl kwd">print</span><span class="hl sym">(</span><span class="hl str">&quot;P4</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> <span class="hl sym">+</span> d <span class="hl sym">+</span> <span class="hl str">&quot; &quot;</span> <span class="hl sym">+</span> d <span class="hl sym">+</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">);</span>

<span class="hl kwa">for</span> <span class="hl sym">(</span>y <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> y <span class="hl sym">&lt;</span> d<span class="hl sym">;</span> y <span class="hl sym">+=</span> <span class="hl num">1</span><span class="hl sym">) {</span>
  <span class="hl kwa">for</span> <span class="hl sym">(</span>x <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> x <span class="hl sym">&lt;</span> d<span class="hl sym">;</span> x <span class="hl sym">+=</span> <span class="hl num">1</span><span class="hl sym">) {</span>
    Zr <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">,</span>
    Zi <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">,</span>
    Tr <span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">,</span>
    Ti <span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">,</span>
    Cr <span class="hl sym">=</span> <span class="hl num">2</span> <span class="hl sym">*</span> x <span class="hl sym">/</span> d <span class="hl sym">-</span> <span class="hl num">1.5</span><span class="hl sym">,</span>
    Ci <span class="hl sym">=</span> <span class="hl num">2</span> <span class="hl sym">*</span> y <span class="hl sym">/</span> d <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">;</span>

    <span class="hl kwa">for</span> <span class="hl sym">(</span>i <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> i <span class="hl sym">&lt;</span> iter <span class="hl sym">&amp;&amp;</span> Tr <span class="hl sym">+</span> Ti <span class="hl sym">&lt;=</span> limit<span class="hl sym">;</span> i <span class="hl sym">+=</span> <span class="hl num">1</span><span class="hl sym">) {</span>
      Zi <span class="hl sym">=</span> <span class="hl num">2</span> <span class="hl sym">*</span> Zr <span class="hl sym">*</span> Zi <span class="hl sym">+</span> Ci<span class="hl sym">,</span>
      Zr <span class="hl sym">=</span> Tr <span class="hl sym">-</span> Ti <span class="hl sym">+</span> Cr<span class="hl sym">,</span>
      Tr <span class="hl sym">=</span> Zr <span class="hl sym">*</span> Zr<span class="hl sym">,</span>
      Ti <span class="hl sym">=</span> Zi <span class="hl sym">*</span> Zi<span class="hl sym">;</span>
    <span class="hl sym">}</span>

    byte_acc <span class="hl sym">&lt;&lt;=</span> <span class="hl num">1</span><span class="hl sym">;</span>

    <span class="hl kwa">if</span> <span class="hl sym">(</span>Tr <span class="hl sym">+</span> Ti <span class="hl sym">&lt;=</span> limit<span class="hl sym">) {</span>
      byte_acc <span class="hl sym">|=</span>  <span class="hl num">1</span><span class="hl sym">;</span>
    <span class="hl sym">}</span>

    bit_num <span class="hl sym">+=</span> <span class="hl num">1</span><span class="hl sym">;</span>

    <span class="hl kwa">if</span> <span class="hl sym">(</span>bit_num <span class="hl sym">===</span> <span class="hl num">8</span><span class="hl sym">) {</span>
      <span class="hl kwd">print</span><span class="hl sym">(</span>String<span class="hl sym">.</span><span class="hl kwd">fromCharCode</span><span class="hl sym">(</span>byte_acc<span class="hl sym">));</span>
      byte_acc <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">,</span>
      bit_num <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
    <span class="hl sym">}</span> <span class="hl kwa">else if</span> <span class="hl sym">(</span>x <span class="hl sym">===</span> d <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">) {</span>
      byte_acc <span class="hl sym">&lt;&lt;=</span> <span class="hl num">8</span> <span class="hl sym">-</span> d <span class="hl sym">%</span> <span class="hl num">8</span><span class="hl sym">;</span>
      <span class="hl kwd">print</span><span class="hl sym">(</span>String<span class="hl sym">.</span><span class="hl kwd">fromCharCode</span><span class="hl sym">(</span>byte_acc<span class="hl sym">));</span>
      byte_acc <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">,</span>
      bit_num <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
    <span class="hl sym">}</span>
  <span class="hl sym">}</span>
<span class="hl sym">}</span>
