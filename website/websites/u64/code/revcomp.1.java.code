<span class="hl com">/*</span>
<span class="hl com"> * The Computer Language Benchmarks Game</span>
<span class="hl com"> * http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"> * contributed by Anthony Donnefort</span>
<span class="hl com"> * redone by Enotus 2010-11-20</span>
<span class="hl com"> */</span>

<span class="hl kwa">import</span> java<span class="hl opt">.</span>io<span class="hl opt">.*;</span>

<span class="hl kwa">public final class</span> revcomp <span class="hl opt">{</span>

    <span class="hl kwa">static final</span> <span class="hl kwb">byte</span><span class="hl opt">[]</span> map<span class="hl opt">=</span><span class="hl kwa">new</span> <span class="hl kwb">byte</span><span class="hl opt">[</span><span class="hl num">128</span><span class="hl opt">];</span>
        <span class="hl kwa">static</span><span class="hl opt">{</span>
        String<span class="hl opt">[]</span> mm<span class="hl opt">={</span><span class="hl str">&quot;ACBDGHK</span><span class="hl esc">\n</span><span class="hl str">MNSRUTWVYacbdghkmnsrutwvy&quot;</span><span class="hl opt">,</span><span class="hl str">&quot;TGVHCDM</span><span class="hl esc">\n</span><span class="hl str">KNSYAAWBRTGVHCDMKNSYAAWBR&quot;</span><span class="hl opt">};</span>
        <span class="hl kwa">for</span><span class="hl opt">(</span><span class="hl kwb">int</span> i<span class="hl opt">=</span><span class="hl num">0</span><span class="hl opt">;</span>i<span class="hl opt">&lt;</span>mm<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">].</span><span class="hl kwd">length</span><span class="hl opt">();</span>i<span class="hl opt">++)</span> map<span class="hl opt">[</span>mm<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">].</span><span class="hl kwd">charAt</span><span class="hl opt">(</span>i<span class="hl opt">)]=(</span><span class="hl kwb">byte</span><span class="hl opt">)</span>mm<span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">].</span><span class="hl kwd">charAt</span><span class="hl opt">(</span>i<span class="hl opt">);</span>
    <span class="hl opt">}</span> 

    <span class="hl kwa">static</span> <span class="hl kwb">void</span> <span class="hl kwd">reverse</span><span class="hl opt">(</span><span class="hl kwb">byte</span><span class="hl opt">[]</span> buf<span class="hl opt">,</span><span class="hl kwb">int</span> begin<span class="hl opt">,</span><span class="hl kwb">int</span> end<span class="hl opt">){</span>
        <span class="hl kwa">while</span><span class="hl opt">(</span>true<span class="hl opt">){</span>
            <span class="hl kwb">byte</span> bb<span class="hl opt">=</span>buf<span class="hl opt">[</span>begin<span class="hl opt">];</span><span class="hl kwa">if</span><span class="hl opt">(</span>bb<span class="hl opt">==</span><span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">)</span> bb<span class="hl opt">=</span>buf<span class="hl opt">[++</span>begin<span class="hl opt">];</span>
            <span class="hl kwb">byte</span> be<span class="hl opt">=</span>buf<span class="hl opt">[</span>end<span class="hl opt">];</span><span class="hl kwa">if</span><span class="hl opt">(</span>be<span class="hl opt">==</span><span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">)</span> be<span class="hl opt">=</span>buf<span class="hl opt">[--</span>end<span class="hl opt">];</span>
            <span class="hl kwa">if</span><span class="hl opt">(</span>begin<span class="hl opt">&gt;</span>end<span class="hl opt">)</span> <span class="hl kwa">break</span><span class="hl opt">;</span>
            buf<span class="hl opt">[</span>begin<span class="hl opt">++]=</span>map<span class="hl opt">[</span>be<span class="hl opt">];</span>
            buf<span class="hl opt">[</span>end<span class="hl opt">--]=</span>map<span class="hl opt">[</span>bb<span class="hl opt">];</span>
        <span class="hl opt">}</span>
    <span class="hl opt">}</span>
      
    <span class="hl kwa">public static</span> <span class="hl kwb">void</span> <span class="hl kwd">main</span><span class="hl opt">(</span>String<span class="hl opt">[]</span> args<span class="hl opt">)</span> <span class="hl kwa">throws</span> IOException<span class="hl opt">{</span>
        <span class="hl kwa">final</span> <span class="hl kwb">byte</span><span class="hl opt">[]</span> buf<span class="hl opt">=</span><span class="hl kwa">new</span> <span class="hl kwb">byte</span><span class="hl opt">[</span>System<span class="hl opt">.</span><span class="hl kwa">in</span><span class="hl opt">.</span><span class="hl kwd">available</span><span class="hl opt">()];</span>
        System<span class="hl opt">.</span><span class="hl kwa">in</span><span class="hl opt">.</span><span class="hl kwd">read</span><span class="hl opt">(</span>buf<span class="hl opt">);</span>

        <span class="hl kwa">for</span><span class="hl opt">(</span><span class="hl kwb">int</span> i<span class="hl opt">=</span><span class="hl num">0</span><span class="hl opt">;</span>i<span class="hl opt">&lt;</span>buf<span class="hl opt">.</span>length<span class="hl opt">;){</span>
            <span class="hl kwa">while</span><span class="hl opt">(</span>buf<span class="hl opt">[</span>i<span class="hl opt">++]!=</span><span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">);</span>
            <span class="hl kwb">int</span> data<span class="hl opt">=</span>i<span class="hl opt">;</span> <span class="hl kwa">while</span><span class="hl opt">(</span>i<span class="hl opt">&lt;</span>buf<span class="hl opt">.</span>length <span class="hl opt">&amp;&amp;</span> buf<span class="hl opt">[</span>i<span class="hl opt">++]!=</span><span class="hl str">'&gt;'</span><span class="hl opt">);</span>
            <span class="hl kwd">reverse</span><span class="hl opt">(</span>buf<span class="hl opt">,</span>data<span class="hl opt">,</span>i<span class="hl opt">-</span><span class="hl num">2</span><span class="hl opt">);</span>
        <span class="hl opt">}</span>

        System<span class="hl opt">.</span>out<span class="hl opt">.</span><span class="hl kwd">write</span><span class="hl opt">(</span>buf<span class="hl opt">);</span>
    <span class="hl opt">}</span>
<span class="hl opt">}</span>
