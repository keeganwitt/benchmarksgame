<span class="hl slc">;;; The Computer Language Benchmarks Game</span>
<span class="hl slc">;;; http://shootout.alioth.debian.org/</span>
<span class="hl slc">;;; contributed by Matthew Flatt</span>

#lang scheme<span class="hl sym">/</span>base
<span class="hl sym">(</span>require scheme<span class="hl sym">/</span>cmdline<span class="hl sym">)</span>

<span class="hl slc">;; Each thread runs this loop:</span>
<span class="hl sym">(</span>define <span class="hl sym">(</span>run id next<span class="hl sym">)</span>
  <span class="hl sym">(</span>let <span class="hl sym">([</span>v <span class="hl sym">(</span>thread<span class="hl sym">-</span>receive<span class="hl sym">)])</span>
    <span class="hl sym">(</span>cond
     <span class="hl sym">[(</span>zero? v<span class="hl sym">)</span> <span class="hl slc">;; Done</span>
      <span class="hl sym">(</span>printf <span class="hl str">&quot;~a</span><span class="hl esc">\</span><span class="hl str">n&quot;</span> id<span class="hl sym">)</span>
      <span class="hl sym">(</span>exit<span class="hl sym">)]</span>
     <span class="hl sym">[</span>else <span class="hl slc">;; Keep going</span>
      <span class="hl sym">(</span>thread<span class="hl sym">-</span>send next <span class="hl sym">(</span>sub1 v<span class="hl sym">))</span>
      <span class="hl sym">(</span>run id next<span class="hl sym">)])))</span>
                       

<span class="hl sym">(</span>let <span class="hl sym">([</span>n <span class="hl sym">(</span>command<span class="hl sym">-</span>line #<span class="hl sym">:</span>args <span class="hl sym">(</span>n<span class="hl sym">) (</span>string<span class="hl sym">-&gt;</span>number n<span class="hl sym">))])</span>
  <span class="hl slc">;; The original thread is #503. Create the rest:</span>
  <span class="hl sym">(</span>let <span class="hl sym">([</span>t1 <span class="hl sym">(</span>for<span class="hl sym">/</span>fold <span class="hl sym">([</span>next <span class="hl sym">(</span>current<span class="hl sym">-</span>thread<span class="hl sym">)])</span>
                      <span class="hl sym">([</span>id <span class="hl sym">(</span>in<span class="hl sym">-</span>range <span class="hl num">502 0</span> <span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)])</span>
              <span class="hl sym">(</span>thread <span class="hl sym">(</span>lambda <span class="hl sym">() (</span>run id next<span class="hl sym">))))])</span>
    <span class="hl slc">;; Start:</span>
    <span class="hl sym">(</span>thread<span class="hl sym">-</span>send t1 n<span class="hl sym">)</span>
    <span class="hl sym">(</span>run <span class="hl num">503</span> t1<span class="hl sym">)))</span>
