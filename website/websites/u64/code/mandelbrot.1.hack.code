<span class="hl opt">&lt;</span>?hh
<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com">   contributed by Thomas GODART (based on Greg Buchholz's C program) </span>
<span class="hl com">   modified by anon</span>
<span class="hl com">   PHP as HHVM/Hack by Isaac Gouy</span>
<span class="hl com">*/</span>

<span class="hl kwd">ob_implicit_flush</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">);</span>
<span class="hl kwd">ob_start</span><span class="hl opt">(</span>NULL<span class="hl opt">,</span> <span class="hl num">4096</span><span class="hl opt">);</span>


<span class="hl kwc">$h</span> <span class="hl opt">= (</span><span class="hl kwc">$argc</span> <span class="hl opt">==</span> <span class="hl num">2</span><span class="hl opt">)</span> ? <span class="hl opt">((</span><span class="hl kwb">int</span><span class="hl opt">)</span><span class="hl kwc">$argv</span><span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">]) :</span> <span class="hl num">600</span><span class="hl opt">;</span>
<span class="hl kwc">$w</span> <span class="hl opt">=</span> <span class="hl kwc">$h</span><span class="hl opt">;</span>

<span class="hl kwd">printf</span> <span class="hl opt">(</span><span class="hl str">&quot;P4</span><span class="hl esc">\n</span><span class="hl str">%d %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">,</span> <span class="hl kwc">$w</span><span class="hl opt">,</span> <span class="hl kwc">$h</span><span class="hl opt">);</span>

<span class="hl kwc">$bit_num</span> <span class="hl opt">=</span> <span class="hl num">128</span><span class="hl opt">;</span>
<span class="hl kwc">$byte_acc</span> <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>

<span class="hl kwc">$yfac</span> <span class="hl opt">=</span> <span class="hl num">2.0</span> <span class="hl opt">/</span> <span class="hl kwc">$h</span><span class="hl opt">;</span>
<span class="hl kwc">$xfac</span> <span class="hl opt">=</span> <span class="hl num">2.0</span> <span class="hl opt">/</span> <span class="hl kwc">$w</span><span class="hl opt">;</span>

<span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwc">$y</span> <span class="hl opt">=</span> <span class="hl num">0</span> <span class="hl opt">;</span> <span class="hl kwc">$y</span> <span class="hl opt">&lt;</span> <span class="hl kwc">$h</span> <span class="hl opt">;</span> ++<span class="hl kwc">$y</span><span class="hl opt">)</span>
<span class="hl opt">{</span>
   <span class="hl kwc">$result</span> <span class="hl opt">=</span> <span class="hl kwa">array</span><span class="hl opt">(</span><span class="hl str">'c*'</span><span class="hl opt">);</span>

   <span class="hl kwc">$Ci</span> <span class="hl opt">=</span> <span class="hl kwc">$y</span> <span class="hl opt">*</span> <span class="hl kwc">$yfac</span> <span class="hl opt">-</span> <span class="hl num">1.0</span><span class="hl opt">;</span>

   <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwc">$x</span> <span class="hl opt">=</span> <span class="hl num">0</span> <span class="hl opt">;</span> <span class="hl kwc">$x</span> <span class="hl opt">&lt;</span> <span class="hl kwc">$w</span> <span class="hl opt">;</span> ++<span class="hl kwc">$x</span><span class="hl opt">)</span>
   <span class="hl opt">{</span>
      <span class="hl kwc">$Zr</span> <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> <span class="hl kwc">$Zi</span> <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> <span class="hl kwc">$Tr</span> <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> <span class="hl kwc">$Ti</span> <span class="hl opt">=</span> <span class="hl num">0.0</span><span class="hl opt">;</span>

      <span class="hl kwc">$Cr</span> <span class="hl opt">=</span> <span class="hl kwc">$x</span> <span class="hl opt">*</span> <span class="hl kwc">$xfac</span> <span class="hl opt">-</span> <span class="hl num">1.5</span><span class="hl opt">;</span>

      <span class="hl kwa">do</span> <span class="hl opt">{</span>
         <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwc">$i</span> <span class="hl opt">=</span> <span class="hl num">0</span> <span class="hl opt">;</span> <span class="hl kwc">$i</span> <span class="hl opt">&lt;</span> <span class="hl num">50</span> <span class="hl opt">;</span> ++<span class="hl kwc">$i</span><span class="hl opt">)</span>
         <span class="hl opt">{</span>
            <span class="hl kwc">$Zi</span> <span class="hl opt">=</span> <span class="hl num">2.0</span> <span class="hl opt">*</span> <span class="hl kwc">$Zr</span> <span class="hl opt">*</span> <span class="hl kwc">$Zi</span> + <span class="hl kwc">$Ci</span><span class="hl opt">;</span>
            <span class="hl kwc">$Zr</span> <span class="hl opt">=</span> <span class="hl kwc">$Tr</span> <span class="hl opt">-</span> <span class="hl kwc">$Ti</span> + <span class="hl kwc">$Cr</span><span class="hl opt">;</span>
            <span class="hl kwc">$Tr</span> <span class="hl opt">=</span> <span class="hl kwc">$Zr</span> <span class="hl opt">*</span> <span class="hl kwc">$Zr</span><span class="hl opt">;</span>
            <span class="hl kwa">if</span> <span class="hl opt">((</span><span class="hl kwc">$Tr</span>+<span class="hl opt">(</span><span class="hl kwc">$Ti</span> <span class="hl opt">=</span> <span class="hl kwc">$Zi</span> <span class="hl opt">*</span> <span class="hl kwc">$Zi</span><span class="hl opt">)) &gt;</span> <span class="hl num">4.0</span><span class="hl opt">)</span> <span class="hl kwa">break</span> <span class="hl num">2</span><span class="hl opt">;</span>
         <span class="hl opt">}</span>
         <span class="hl kwc">$byte_acc</span> +<span class="hl opt">=</span> <span class="hl kwc">$bit_num</span><span class="hl opt">;</span>
      <span class="hl opt">}</span> <span class="hl kwa">while</span> <span class="hl opt">(</span>FALSE<span class="hl opt">);</span>

      <span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwc">$bit_num</span> <span class="hl opt">===</span> <span class="hl num">1</span><span class="hl opt">) {</span>
         <span class="hl kwc">$result</span><span class="hl opt">[] =</span> <span class="hl kwc">$byte_acc</span><span class="hl opt">;</span>
         <span class="hl kwc">$bit_num</span> <span class="hl opt">=</span> <span class="hl num">128</span><span class="hl opt">;</span>
         <span class="hl kwc">$byte_acc</span> <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
      <span class="hl opt">}</span> <span class="hl kwa">else</span> <span class="hl opt">{</span>
         <span class="hl kwc">$bit_num</span> <span class="hl opt">&gt;&gt;=</span> <span class="hl num">1</span><span class="hl opt">;</span>
      <span class="hl opt">}</span>
   <span class="hl opt">}</span>
   <span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwc">$bit_num</span> <span class="hl opt">!==</span> <span class="hl num">128</span><span class="hl opt">) {</span>
      <span class="hl kwc">$result</span><span class="hl opt">[] =</span> <span class="hl kwc">$byte_acc</span><span class="hl opt">;</span>
      <span class="hl kwc">$bit_num</span> <span class="hl opt">=</span> <span class="hl num">128</span><span class="hl opt">;</span>
      <span class="hl kwc">$byte_acc</span> <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
   <span class="hl opt">}</span>
   <span class="hl kwa">echo</span> <span class="hl kwd">call_user_func_array</span><span class="hl opt">(</span><span class="hl str">'pack'</span><span class="hl opt">,</span> <span class="hl kwc">$result</span><span class="hl opt">);</span>
<span class="hl opt">}</span>

