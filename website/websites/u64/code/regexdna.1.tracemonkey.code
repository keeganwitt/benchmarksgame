<span class="hl slc">// The Computer Language Shootout</span>
<span class="hl slc">// http://shootout.alioth.debian.org/</span>
<span class="hl slc">//</span>
<span class="hl slc">// contributed by Jesse Millikan</span>
<span class="hl slc">// Base on the Ruby version by jose fco. gonzalez</span>

<span class="hl kwa">var</span> l<span class="hl sym">,</span> input <span class="hl sym">=</span> <span class="hl str">&quot;&quot;</span><span class="hl sym">,</span> ilen<span class="hl sym">,</span> clen<span class="hl sym">,</span> 
 seqs <span class="hl sym">= [</span>
  <span class="hl sym">/</span>agggtaaa<span class="hl sym">|</span>tttaccct<span class="hl sym">/</span>ig<span class="hl sym">,</span>
  <span class="hl sym">/[</span>cgt<span class="hl sym">]</span>gggtaaa<span class="hl sym">|</span>tttaccc<span class="hl sym">[</span>acg<span class="hl sym">]/</span>ig<span class="hl sym">,</span>
  <span class="hl sym">/</span>a<span class="hl sym">[</span>act<span class="hl sym">]</span>ggtaaa<span class="hl sym">|</span>tttacc<span class="hl sym">[</span>agt<span class="hl sym">]</span>t<span class="hl sym">/</span>ig<span class="hl sym">,</span>
  <span class="hl sym">/</span>ag<span class="hl sym">[</span>act<span class="hl sym">]</span>gtaaa<span class="hl sym">|</span>tttac<span class="hl sym">[</span>agt<span class="hl sym">]</span>ct<span class="hl sym">/</span>ig<span class="hl sym">,</span>
  <span class="hl sym">/</span>agg<span class="hl sym">[</span>act<span class="hl sym">]</span>taaa<span class="hl sym">|</span>ttta<span class="hl sym">[</span>agt<span class="hl sym">]</span>cct<span class="hl sym">/</span>ig<span class="hl sym">,</span>
  <span class="hl sym">/</span>aggg<span class="hl sym">[</span>acg<span class="hl sym">]</span>aaa<span class="hl sym">|</span>ttt<span class="hl sym">[</span>cgt<span class="hl sym">]</span>ccct<span class="hl sym">/</span>ig<span class="hl sym">,</span>
  <span class="hl sym">/</span>agggt<span class="hl sym">[</span>cgt<span class="hl sym">]</span>aa<span class="hl sym">|</span>tt<span class="hl sym">[</span>acg<span class="hl sym">]</span>accct<span class="hl sym">/</span>ig<span class="hl sym">,</span>
  <span class="hl sym">/</span>agggta<span class="hl sym">[</span>cgt<span class="hl sym">]</span>a<span class="hl sym">|</span>t<span class="hl sym">[</span>acg<span class="hl sym">]</span>taccct<span class="hl sym">/</span>ig<span class="hl sym">,</span>
  <span class="hl sym">/</span>agggtaa<span class="hl sym">[</span>cgt<span class="hl sym">]|[</span>acg<span class="hl sym">]</span>ttaccct<span class="hl sym">/</span>ig<span class="hl sym">],</span>
 subs <span class="hl sym">= {</span> 
  B<span class="hl sym">:</span> <span class="hl str">'(c|g|t)'</span><span class="hl sym">,</span> D<span class="hl sym">:</span> <span class="hl str">'(a|g|t)'</span><span class="hl sym">,</span> H<span class="hl sym">:</span> <span class="hl str">'(a|c|t)'</span><span class="hl sym">,</span> K<span class="hl sym">:</span> <span class="hl str">'(g|t)'</span><span class="hl sym">,</span> 
  M<span class="hl sym">:</span> <span class="hl str">'(a|c)'</span><span class="hl sym">,</span> N<span class="hl sym">:</span> <span class="hl str">'(a|c|g|t)'</span><span class="hl sym">,</span> R<span class="hl sym">:</span> <span class="hl str">'(a|g)'</span><span class="hl sym">,</span> S<span class="hl sym">:</span> <span class="hl str">'(c|t)'</span><span class="hl sym">,</span> 
  V<span class="hl sym">:</span> <span class="hl str">'(a|c|g)'</span><span class="hl sym">,</span> W<span class="hl sym">:</span> <span class="hl str">'(a|t)'</span><span class="hl sym">,</span> Y<span class="hl sym">:</span> <span class="hl str">'(c|t)'</span> <span class="hl sym">}</span>
 
<span class="hl slc">// readline strips the newline...</span>
<span class="hl kwa">while</span><span class="hl sym">(</span>l <span class="hl sym">=</span> <span class="hl kwd">readline</span><span class="hl sym">())</span> input <span class="hl sym">+=</span> l <span class="hl sym">+</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span>
ilen <span class="hl sym">=</span> input<span class="hl sym">.</span>length

<span class="hl slc">// There is no in-place substitution</span>
input <span class="hl sym">=</span> input<span class="hl sym">.</span><span class="hl kwd">replace</span><span class="hl sym">(/&gt;.*</span>\n<span class="hl sym">|</span>\n<span class="hl sym">/</span>g<span class="hl sym">,</span><span class="hl str">&quot;&quot;</span><span class="hl sym">)</span>
clen <span class="hl sym">=</span> input<span class="hl sym">.</span>length

<span class="hl kwa">for</span><span class="hl sym">(</span>i <span class="hl kwa">in</span> seqs<span class="hl sym">)</span>
 <span class="hl kwd">print</span><span class="hl sym">(</span>seqs<span class="hl sym">[</span>i<span class="hl sym">].</span>source<span class="hl sym">, (</span>input<span class="hl sym">.</span><span class="hl kwd">match</span><span class="hl sym">(</span>seqs<span class="hl sym">[</span>i<span class="hl sym">]) || []).</span>length<span class="hl sym">)</span>
 <span class="hl slc">// match returns null if no matches, so replace with empty</span>

<span class="hl kwa">for</span><span class="hl sym">(</span>k <span class="hl kwa">in</span> subs<span class="hl sym">)</span>
 input <span class="hl sym">=</span> input<span class="hl sym">.</span><span class="hl kwd">replace</span><span class="hl sym">(</span>k<span class="hl sym">,</span> subs<span class="hl sym">[</span>k<span class="hl sym">],</span> <span class="hl str">&quot;g&quot;</span><span class="hl sym">)</span>
 <span class="hl slc">// search string, replacement string, flags</span>

<span class="hl kwd">print</span><span class="hl sym">()</span>
<span class="hl kwd">print</span><span class="hl sym">(</span>ilen<span class="hl sym">)</span>
<span class="hl kwd">print</span><span class="hl sym">(</span>clen<span class="hl sym">)</span>
<span class="hl kwd">print</span><span class="hl sym">(</span>input<span class="hl sym">.</span>length<span class="hl sym">)</span>

