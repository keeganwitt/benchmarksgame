<span class="hl com">/* The Great Computer Language Shootout</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com">   contributed by Isaac Gouy */</span>

<span class="hl kwa">function</span> <span class="hl kwd">TreeNode</span><span class="hl sym">(</span>left<span class="hl sym">,</span>right<span class="hl sym">,</span>item<span class="hl sym">){</span>
   <span class="hl kwa">this</span><span class="hl sym">.</span>left <span class="hl sym">=</span> left<span class="hl sym">;</span>
   <span class="hl kwa">this</span><span class="hl sym">.</span>right <span class="hl sym">=</span> right<span class="hl sym">;</span>
   <span class="hl kwa">this</span><span class="hl sym">.</span>item <span class="hl sym">=</span> item<span class="hl sym">;</span>
<span class="hl sym">}</span>

TreeNode<span class="hl sym">.</span><span class="hl kwa">prototype</span><span class="hl sym">.</span>itemCheck <span class="hl sym">=</span> <span class="hl kwa">function</span><span class="hl sym">(){</span>
   <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwa">this</span><span class="hl sym">.</span>left<span class="hl sym">==</span><span class="hl kwa">null</span><span class="hl sym">)</span> <span class="hl kwa">return this</span><span class="hl sym">.</span>item<span class="hl sym">;</span>
   <span class="hl kwa">else return this</span><span class="hl sym">.</span>item <span class="hl sym">+</span> <span class="hl kwa">this</span><span class="hl sym">.</span>left<span class="hl sym">.</span><span class="hl kwd">itemCheck</span><span class="hl sym">() -</span> <span class="hl kwa">this</span><span class="hl sym">.</span>right<span class="hl sym">.</span><span class="hl kwd">itemCheck</span><span class="hl sym">();</span>
<span class="hl sym">}</span>

<span class="hl kwa">function</span> <span class="hl kwd">bottomUpTree</span><span class="hl sym">(</span>item<span class="hl sym">,</span>depth<span class="hl sym">){</span>
   <span class="hl kwa">if</span> <span class="hl sym">(</span>depth<span class="hl sym">&gt;</span><span class="hl num">0</span><span class="hl sym">){</span>
      <span class="hl kwa">return new</span> <span class="hl kwd">TreeNode</span><span class="hl sym">(</span>
          <span class="hl kwd">bottomUpTree</span><span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">*</span>item<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">,</span> depth<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)</span>
         <span class="hl sym">,</span><span class="hl kwd">bottomUpTree</span><span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">*</span>item<span class="hl sym">,</span> depth<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)</span>
         <span class="hl sym">,</span>item
      <span class="hl sym">);</span>
   <span class="hl sym">}</span>
   <span class="hl kwa">else</span> <span class="hl sym">{</span>
      <span class="hl kwa">return new</span> <span class="hl kwd">TreeNode</span><span class="hl sym">(</span><span class="hl kwa">null</span><span class="hl sym">,</span><span class="hl kwa">null</span><span class="hl sym">,</span>item<span class="hl sym">);</span>
   <span class="hl sym">}</span>
<span class="hl sym">}</span>


<span class="hl kwa">var</span> minDepth <span class="hl sym">=</span> <span class="hl num">4</span><span class="hl sym">;</span>
<span class="hl kwa">var</span> n <span class="hl sym">=</span> arguments<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">];</span>
<span class="hl kwa">var</span> maxDepth <span class="hl sym">=</span> Math<span class="hl sym">.</span><span class="hl kwd">max</span><span class="hl sym">(</span>minDepth <span class="hl sym">+</span> <span class="hl num">2</span><span class="hl sym">,</span> n<span class="hl sym">);</span>
<span class="hl kwa">var</span> stretchDepth <span class="hl sym">=</span> maxDepth <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>

<span class="hl kwa">var</span> check <span class="hl sym">=</span> <span class="hl kwd">bottomUpTree</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span>stretchDepth<span class="hl sym">).</span><span class="hl kwd">itemCheck</span><span class="hl sym">();</span>
<span class="hl kwd">print</span><span class="hl sym">(</span><span class="hl str">&quot;stretch tree of depth &quot;</span> <span class="hl sym">+</span> stretchDepth <span class="hl sym">+</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span> <span class="hl str">check: &quot;</span> <span class="hl sym">+</span> check<span class="hl sym">);</span>

<span class="hl kwa">var</span> longLivedTree <span class="hl sym">=</span> <span class="hl kwd">bottomUpTree</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span>maxDepth<span class="hl sym">);</span>
<span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwa">var</span> depth<span class="hl sym">=</span>minDepth<span class="hl sym">;</span> depth<span class="hl sym">&lt;=</span>maxDepth<span class="hl sym">;</span> depth<span class="hl sym">+=</span><span class="hl num">2</span><span class="hl sym">){</span>
   <span class="hl kwa">var</span> iterations <span class="hl sym">=</span> <span class="hl num">1</span> <span class="hl sym">&lt;&lt; (</span>maxDepth <span class="hl sym">-</span> depth <span class="hl sym">+</span> minDepth<span class="hl sym">);</span>

   check <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
   <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwa">var</span> i<span class="hl sym">=</span><span class="hl num">1</span><span class="hl sym">;</span> i<span class="hl sym">&lt;=</span>iterations<span class="hl sym">;</span> i<span class="hl sym">++){</span>
      check <span class="hl sym">+=</span> <span class="hl kwd">bottomUpTree</span><span class="hl sym">(</span>i<span class="hl sym">,</span>depth<span class="hl sym">).</span><span class="hl kwd">itemCheck</span><span class="hl sym">();</span>
      check <span class="hl sym">+=</span> <span class="hl kwd">bottomUpTree</span><span class="hl sym">(-</span>i<span class="hl sym">,</span>depth<span class="hl sym">).</span><span class="hl kwd">itemCheck</span><span class="hl sym">();</span>
   <span class="hl sym">}</span>
   <span class="hl kwd">print</span><span class="hl sym">(</span>iterations<span class="hl sym">*</span><span class="hl num">2</span> <span class="hl sym">+</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span> <span class="hl str">trees of depth &quot;</span> <span class="hl sym">+</span> depth <span class="hl sym">+</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span> <span class="hl str">check: &quot;</span> <span class="hl sym">+</span> check<span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwd">print</span><span class="hl sym">(</span><span class="hl str">&quot;long lived tree of depth &quot;</span> <span class="hl sym">+</span> maxDepth <span class="hl sym">+</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span> <span class="hl str">check: &quot;</span> 
   <span class="hl sym">+</span> longLivedTree<span class="hl sym">.</span><span class="hl kwd">itemCheck</span><span class="hl sym">());</span>
