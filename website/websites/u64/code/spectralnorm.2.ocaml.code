<span class="hl com">(* The Computer Language Benchmarks Game</span>
<span class="hl com"> * http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"> *</span>
<span class="hl com"> * Contributed by Sebastien Loisel</span>
<span class="hl com"> * Cleanup by Troestler Christophe</span>
<span class="hl com"> * Modified by Mauricio Fernandez</span>
<span class="hl com"> *)</span>

<span class="hl kwa">let</span> eval_A i j <span class="hl opt">=</span> <span class="hl num">1</span><span class="hl opt">. /.</span> <span class="hl kwb">float</span><span class="hl opt">((</span>i<span class="hl opt">+</span>j<span class="hl opt">)*(</span>i<span class="hl opt">+</span>j<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)/</span><span class="hl num">2</span><span class="hl opt">+</span>i<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span>

<span class="hl kwa">let</span> eval_A_times_u u v <span class="hl opt">=</span>
  <span class="hl kwa">let</span> n <span class="hl opt">=</span> <span class="hl kwc">Array</span><span class="hl opt">.</span>length v <span class="hl opt">-</span> <span class="hl num">1</span> <span class="hl kwa">in</span>
  <span class="hl kwa">for</span> i <span class="hl opt">=</span> <span class="hl num">0</span> <span class="hl kwa">to</span>  n <span class="hl kwa">do</span>
    <span class="hl kwa">let</span> vi <span class="hl opt">=</span> <span class="hl kwb">ref</span> <span class="hl num">0</span><span class="hl opt">.</span> <span class="hl kwa">in</span>
      <span class="hl kwa">for</span> j <span class="hl opt">=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> n <span class="hl kwa">do</span> vi <span class="hl opt">:= !</span>vi <span class="hl opt">+.</span> eval_A i j <span class="hl opt">*.</span> u<span class="hl opt">.(</span>j<span class="hl opt">)</span> <span class="hl kwa">done</span><span class="hl opt">;</span>
      v<span class="hl opt">.(</span>i<span class="hl opt">) &lt;- !</span>vi
  <span class="hl kwa">done</span>

<span class="hl kwa">let</span> eval_At_times_u u v <span class="hl opt">=</span>
  <span class="hl kwa">let</span> n <span class="hl opt">=</span> <span class="hl kwc">Array</span><span class="hl opt">.</span>length v <span class="hl opt">-</span><span class="hl num">1</span> <span class="hl kwa">in</span>
  <span class="hl kwa">for</span> i <span class="hl opt">=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> n <span class="hl kwa">do</span>
    <span class="hl kwa">let</span> vi <span class="hl opt">=</span> <span class="hl kwb">ref</span> <span class="hl num">0</span><span class="hl opt">.</span> <span class="hl kwa">in</span>
      <span class="hl kwa">for</span> j <span class="hl opt">=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> n <span class="hl kwa">do</span> vi <span class="hl opt">:= !</span>vi <span class="hl opt">+.</span> eval_A j i <span class="hl opt">*.</span> u<span class="hl opt">.(</span>j<span class="hl opt">)</span> <span class="hl kwa">done</span><span class="hl opt">;</span>
      v<span class="hl opt">.(</span>i<span class="hl opt">) &lt;- !</span>vi
  <span class="hl kwa">done</span>

<span class="hl kwa">let</span> eval_AtA_times_u u v <span class="hl opt">=</span>
  <span class="hl kwa">let</span> w <span class="hl opt">=</span> <span class="hl kwc">Array</span><span class="hl opt">.</span>make <span class="hl opt">(</span><span class="hl kwc">Array</span><span class="hl opt">.</span>length u<span class="hl opt">)</span> <span class="hl num">0.0</span> <span class="hl kwa">in</span>
  eval_A_times_u u w<span class="hl opt">;</span> eval_At_times_u w v


<span class="hl kwa">let</span> <span class="hl opt">() =</span>
  <span class="hl kwa">let</span> n <span class="hl opt">=</span> <span class="hl kwa">try</span> int_of_string<span class="hl opt">(</span><span class="hl kwc">Array</span><span class="hl opt">.</span>get <span class="hl kwc">Sys</span><span class="hl opt">.</span>argv <span class="hl num">1</span><span class="hl opt">)</span> <span class="hl kwa">with</span> _ <span class="hl opt">-&gt;</span>  <span class="hl num">2000</span> <span class="hl kwa">in</span>
  <span class="hl kwa">let</span> u <span class="hl opt">=</span> <span class="hl kwc">Array</span><span class="hl opt">.</span>make n <span class="hl num">1.0</span>  <span class="hl kwa">and</span>  v <span class="hl opt">=</span> <span class="hl kwc">Array</span><span class="hl opt">.</span>make n <span class="hl num">0.0</span> <span class="hl kwa">in</span>
  <span class="hl kwa">for</span> i <span class="hl opt">=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> <span class="hl num">9</span> <span class="hl kwa">do</span>
    eval_AtA_times_u u v<span class="hl opt">;</span> eval_AtA_times_u v u
  <span class="hl kwa">done</span><span class="hl opt">;</span>

  <span class="hl kwa">let</span> vv <span class="hl opt">=</span> <span class="hl kwb">ref</span> <span class="hl num">0.0</span>  <span class="hl kwa">and</span>  vBv <span class="hl opt">=</span> <span class="hl kwb">ref</span> <span class="hl num">0.0</span> <span class="hl kwa">in</span>
  <span class="hl kwa">for</span> i<span class="hl opt">=</span><span class="hl num">0</span> <span class="hl kwa">to</span> n<span class="hl opt">-</span><span class="hl num">1</span> <span class="hl kwa">do</span>
    vv <span class="hl opt">:= !</span>vv <span class="hl opt">+.</span> v<span class="hl opt">.(</span>i<span class="hl opt">) *.</span> v<span class="hl opt">.(</span>i<span class="hl opt">);</span>
    vBv <span class="hl opt">:= !</span>vBv <span class="hl opt">+.</span> u<span class="hl opt">.(</span>i<span class="hl opt">) *.</span> v<span class="hl opt">.(</span>i<span class="hl opt">)</span>
  <span class="hl kwa">done</span><span class="hl opt">;</span>
  <span class="hl kwc">Printf</span><span class="hl opt">.</span>printf <span class="hl str">&quot;%0.9f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> <span class="hl opt">(</span>sqrt<span class="hl opt">(!</span>vBv <span class="hl opt">/. !</span>vv<span class="hl opt">))</span>
