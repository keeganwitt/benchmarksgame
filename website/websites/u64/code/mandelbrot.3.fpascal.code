<span class="hl com">{ The Computer Language Benchmarks Game</span>
<span class="hl com">  http://benchmarksgame.alioth.debian.org</span>
<span class="hl com"></span>
<span class="hl com">  contributed by Ales Katona</span>
<span class="hl com">  modified by Vincent Snijders</span>
<span class="hl com">}</span>

<span class="hl kwa">program</span> mandelbrot<span class="hl opt">;</span>

<span class="hl kwa">var</span> n<span class="hl opt">:</span> <span class="hl kwb">longint</span><span class="hl opt">;</span>
    TextBuf<span class="hl opt">:</span> <span class="hl kwa">array</span><span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">..</span><span class="hl num">$FFF</span><span class="hl opt">]</span> <span class="hl kwa">of</span> <span class="hl kwb">byte</span><span class="hl opt">;</span>
    OutFile<span class="hl opt">:</span> PText<span class="hl opt">;</span>
    

<span class="hl kwa">procedure</span> run<span class="hl opt">;</span>
<span class="hl kwa">var</span>
  Cy<span class="hl opt">,</span> Step<span class="hl opt">:</span> <span class="hl kwb">double</span><span class="hl opt">;</span>
  x<span class="hl opt">,</span> y<span class="hl opt">,</span> bits<span class="hl opt">,</span>bit<span class="hl opt">:</span> <span class="hl kwb">Longint</span><span class="hl opt">;</span>
  <span class="hl kwa">function</span> <span class="hl kwd">CalculatePoint</span><span class="hl opt">(</span>Cx<span class="hl opt">,</span> Cy<span class="hl opt">:</span> <span class="hl kwb">double</span><span class="hl opt">):</span> <span class="hl kwb">boolean</span><span class="hl opt">;</span> nostackframe<span class="hl opt">;</span> <span class="hl kwa">inline</span><span class="hl opt">;</span>
  <span class="hl kwa">const</span>
    Limit <span class="hl opt">=</span> <span class="hl num">4</span><span class="hl opt">;</span>
  <span class="hl kwa">var</span>
    i<span class="hl opt">:</span> <span class="hl kwb">longint</span><span class="hl opt">;</span>
    Zr<span class="hl opt">,</span> Zi<span class="hl opt">,</span> Ti<span class="hl opt">,</span> Tr<span class="hl opt">:</span> <span class="hl kwb">Double</span><span class="hl opt">;</span>

  <span class="hl kwa">begin</span>
    Zr <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span>  Zi <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span> Tr <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span> Ti <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span>
    <span class="hl kwc">for</span> i <span class="hl opt">:=</span> <span class="hl num">1</span> <span class="hl kwc">to</span> <span class="hl num">50</span> <span class="hl kwc">do</span> <span class="hl kwa">begin</span>
      Zi <span class="hl opt">:=</span> <span class="hl num">2</span><span class="hl opt">*</span>Zr<span class="hl opt">*</span>Zi <span class="hl opt">+</span> Cy<span class="hl opt">;</span>
      Zr <span class="hl opt">:=</span> Tr <span class="hl opt">-</span> Ti <span class="hl opt">+</span> Cx<span class="hl opt">;</span>
      Ti <span class="hl opt">:=</span> Zi <span class="hl opt">*</span> Zi<span class="hl opt">;</span>
      Tr <span class="hl opt">:=</span> Zr <span class="hl opt">*</span> Zr<span class="hl opt">;</span>
      <span class="hl kwc">if</span> <span class="hl opt">(</span>Tr <span class="hl opt">+</span> Ti<span class="hl opt">&gt;=</span>limit<span class="hl opt">)</span> <span class="hl kwc">then</span> <span class="hl kwd">exit</span><span class="hl opt">(</span><span class="hl kwb">true</span><span class="hl opt">);</span>
    <span class="hl kwa">end</span><span class="hl opt">;</span>

    CalculatePoint <span class="hl opt">:=</span> <span class="hl kwb">false</span><span class="hl opt">;</span>
  <span class="hl kwa">end</span><span class="hl opt">;</span>

<span class="hl kwa">begin</span>
  Step <span class="hl opt">:=</span> <span class="hl num">2</span><span class="hl opt">/</span>n<span class="hl opt">;</span>
  <span class="hl kwc">for</span> y <span class="hl opt">:=</span> <span class="hl num">0</span> <span class="hl kwc">to</span> n<span class="hl opt">-</span><span class="hl num">1</span> <span class="hl kwc">do</span>
  <span class="hl kwa">begin</span>
    Cy <span class="hl opt">:=</span> y <span class="hl opt">*</span> Step <span class="hl opt">-</span> <span class="hl num">1</span><span class="hl opt">;</span>
    bits <span class="hl opt">:=</span> <span class="hl num">255</span><span class="hl opt">;</span>  bit <span class="hl opt">:=</span> <span class="hl num">128</span><span class="hl opt">;</span>
    <span class="hl kwc">for</span> x <span class="hl opt">:=</span> <span class="hl num">0</span> <span class="hl kwc">to</span> n<span class="hl opt">-</span><span class="hl num">1</span> <span class="hl kwc">do</span>
    <span class="hl kwa">begin</span>
      <span class="hl kwc">if</span> <span class="hl kwd">CalculatePoint</span><span class="hl opt">(</span>x <span class="hl opt">*</span> Step  <span class="hl opt">-</span> <span class="hl num">1.5</span><span class="hl opt">,</span> Cy<span class="hl opt">)</span> <span class="hl kwc">then</span>
        bits <span class="hl opt">:=</span> bits <span class="hl kwa">xor</span> bit<span class="hl opt">;</span>

      <span class="hl kwc">if</span> bit <span class="hl opt">&gt;</span> <span class="hl num">1</span> <span class="hl kwc">then</span>
        bit <span class="hl opt">:=</span> bit <span class="hl kwa">shr</span> <span class="hl num">1</span>
      <span class="hl kwc">else</span>
      <span class="hl kwa">begin</span>
        <span class="hl kwd">write</span><span class="hl opt">(</span>OutFile<span class="hl opt">^,</span> <span class="hl kwd">chr</span><span class="hl opt">(</span>bits<span class="hl opt">));</span>
        bits <span class="hl opt">:=</span> <span class="hl num">255</span><span class="hl opt">;</span>  bit <span class="hl opt">:=</span> <span class="hl num">128</span><span class="hl opt">;</span>
      <span class="hl kwa">end</span><span class="hl opt">;</span>
    <span class="hl kwa">end</span><span class="hl opt">;</span>
    <span class="hl kwc">if</span> bit <span class="hl opt">&lt;</span> <span class="hl num">128</span> <span class="hl kwc">then</span> <span class="hl kwd">write</span><span class="hl opt">(</span>OutFile<span class="hl opt">^,</span> <span class="hl kwd">chr</span><span class="hl opt">(</span>bits <span class="hl kwa">xor</span><span class="hl opt">((</span>bit <span class="hl kwa">shl</span> <span class="hl num">1</span><span class="hl opt">)-</span><span class="hl num">1</span><span class="hl opt">)));</span>
  <span class="hl kwa">end</span><span class="hl opt">;</span>
<span class="hl kwa">end</span><span class="hl opt">;</span>

<span class="hl kwa">begin</span>
  OutFile <span class="hl opt">:= &#64;</span>Output<span class="hl opt">;</span>
  <span class="hl kwd">SetTextBuf</span><span class="hl opt">(</span>OutFile<span class="hl opt">^,</span> TextBuf<span class="hl opt">);</span>

  <span class="hl kwd">Val</span><span class="hl opt">(</span><span class="hl kwd">ParamStr</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">),</span> n<span class="hl opt">);</span>
  <span class="hl kwd">writeln</span><span class="hl opt">(</span>OutFile<span class="hl opt">^,</span> <span class="hl str">'P4'</span><span class="hl opt">);</span>
  <span class="hl kwd">writeln</span><span class="hl opt">(</span>OutFile<span class="hl opt">^,</span> n<span class="hl opt">,</span><span class="hl str">' '</span><span class="hl opt">,</span>n<span class="hl opt">);</span>
  run<span class="hl opt">;</span>
<span class="hl kwa">end</span><span class="hl opt">.</span>
