<span class="hl com">&quot;* The Computer Language Benchmarks Game</span>
<span class="hl com">    http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com">    contributed by Paolo Bonzini *&quot;</span><span class="hl opt">!</span>

<span class="hl opt">!</span><span class="hl kwc">Tests</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'benchmarking'</span><span class="hl opt">!</span>
<span class="hl kwb">mandelbrot2:</span> extent <span class="hl kwb">to:</span> output
   <span class="hl kwd">| limit2 m bits zr zi cr ci i tr stepr stepi |</span>
   limit2 <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">4.0</span>d0<span class="hl opt">.</span>
   m <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">50</span><span class="hl opt">.</span>

   stepr <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">2.0</span>d0 <span class="hl kwb">/</span> extent<span class="hl opt">.</span>
   stepi <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">2.0</span>d0 <span class="hl kwb">/</span> extent<span class="hl opt">.</span>

   <span class="hl num">0</span> <span class="hl kwb">to:</span> extent <span class="hl kwb">-</span> <span class="hl num">1</span> <span class="hl kwb">do:</span> <span class="hl opt">[</span> <span class="hl kwd">:y</span> |
       bits <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">0</span><span class="hl opt">.</span>
       ci <span class="hl opt">:</span><span class="hl kwb">=</span> stepi <span class="hl kwb">*</span> y <span class="hl kwb">asFloat -</span> <span class="hl num">1.0</span>d0<span class="hl opt">.</span>
       <span class="hl num">0</span> <span class="hl kwb">to:</span> extent <span class="hl kwb">-</span> <span class="hl num">1</span> <span class="hl kwb">do:</span> <span class="hl opt">[</span> <span class="hl kwd">:x</span> |
           cr <span class="hl opt">:</span><span class="hl kwb">=</span> stepr <span class="hl kwb">*</span> x <span class="hl kwb">asFloat -</span> <span class="hl num">1.5</span>d0<span class="hl opt">.</span>
           zr <span class="hl opt">:</span><span class="hl kwb">=</span> cr<span class="hl opt">.</span> zi <span class="hl opt">:</span><span class="hl kwb">=</span> ci<span class="hl opt">.</span>

           bits <span class="hl opt">:</span><span class="hl kwb">=</span> bits <span class="hl kwb">bitShift:</span> <span class="hl num">1</span><span class="hl opt">.</span>
           i <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">1</span><span class="hl opt">.</span>  
           <span class="hl opt">[</span>
               tr <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl opt">(</span>zr<span class="hl kwb">*</span>zr<span class="hl opt">)</span> <span class="hl kwb">-</span> <span class="hl opt">(</span>zi<span class="hl kwb">*</span>zi<span class="hl opt">)</span> <span class="hl kwb">+</span> cr<span class="hl opt">.</span>
               zi <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">2.0</span>d0 <span class="hl kwb">*</span> zr <span class="hl kwb">*</span> zi <span class="hl kwb">+</span> ci<span class="hl opt">.</span>
               zr <span class="hl opt">:</span><span class="hl kwb">=</span> tr<span class="hl opt">.</span>
               <span class="hl opt">(</span>zr<span class="hl kwb">*</span>zr<span class="hl opt">)</span> <span class="hl kwb">+</span> <span class="hl opt">(</span>zi<span class="hl kwb">*</span>zi<span class="hl opt">)</span> &lt; <span class="hl kwb">limit</span><span class="hl num">2</span> <span class="hl kwb">and:</span> <span class="hl opt">[ (</span>i <span class="hl opt">:</span><span class="hl kwb">=</span> i <span class="hl kwb">+</span> <span class="hl num">1</span><span class="hl opt">)</span> &lt; <span class="hl kwb">m</span> <span class="hl opt">]</span>
           <span class="hl opt">]</span> <span class="hl kwb">whileTrue</span><span class="hl opt">.</span>

           i <span class="hl kwb">=</span> m <span class="hl kwb">ifTrue:</span> <span class="hl opt">[</span> bits <span class="hl opt">:</span><span class="hl kwb">=</span> bits <span class="hl kwb">+</span> <span class="hl num">1</span> <span class="hl opt">].</span>
           <span class="hl opt">(</span>x <span class="hl kwb">bitAnd:</span> <span class="hl num">7</span><span class="hl opt">)</span> <span class="hl kwb">==</span> <span class="hl num">7</span> <span class="hl kwb">ifTrue:</span> <span class="hl opt">[</span>
               output <span class="hl kwb">nextPut:</span> bits<span class="hl opt">.</span>
               bits <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">0</span><span class="hl opt">.</span>
           <span class="hl opt">]</span>
       <span class="hl opt">].</span> 
       <span class="hl opt">(</span>extent <span class="hl kwb">bitAnd:</span> <span class="hl num">7</span><span class="hl opt">)</span> <span class="hl kwb">==</span> <span class="hl num">0</span> <span class="hl kwb">ifFalse:</span> <span class="hl opt">[</span>
           bits <span class="hl opt">:</span><span class="hl kwb">=</span> bits <span class="hl kwb">bitShift:</span> <span class="hl num">8</span> <span class="hl kwb">-</span> <span class="hl opt">(</span>extent <span class="hl kwb">bitAnd:</span> <span class="hl num">7</span><span class="hl opt">).</span>
           output <span class="hl kwb">nextPut:</span> bits<span class="hl opt">.</span>
       <span class="hl opt">]</span>
   <span class="hl opt">]! !</span>


<span class="hl opt">!</span><span class="hl kwc">Tests</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'benchmark scripts'</span><span class="hl opt">!</span>
<span class="hl kwb">mandelbrot2</span>
   <span class="hl kwd">| n output |</span>
   n <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl kwa">self</span> <span class="hl kwb">arg</span><span class="hl opt">.</span>
   <span class="hl opt">(</span>output <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl kwa">self</span> <span class="hl kwb">stdout</span><span class="hl opt">)</span>
      <span class="hl kwb">nextPutAll:</span> <span class="hl str">'P4'</span><span class="hl opt">;</span> <span class="hl kwb">nl</span><span class="hl opt">;</span> <span class="hl kwb">print:</span> n<span class="hl opt">;</span> <span class="hl kwb">space</span><span class="hl opt">;</span> <span class="hl kwb">print:</span> n<span class="hl opt">;</span> <span class="hl kwb">nl</span><span class="hl opt">;</span>
      binary<span class="hl opt">.</span>

   <span class="hl kwa">self</span> <span class="hl kwb">mandelbrot2:</span> n <span class="hl kwb">to:</span> output<span class="hl opt">.</span>
   <span class="hl opt">^</span><span class="hl str">''</span><span class="hl opt">! !</span>

