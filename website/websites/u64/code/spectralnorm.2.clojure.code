<span class="hl slc">;; The Computer Language Benchmarks Game</span>
<span class="hl slc">;; http://shootout.alioth.debian.org/</span>
<span class="hl slc">;;</span>
<span class="hl slc">;; contributed by Jesse Rosenstock</span>

<span class="hl opt">(</span><span class="hl kwa">ns</span> spectralnorm
  <span class="hl opt">(:</span>gen-class<span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">set</span><span class="hl opt">! *</span>warn-on-reflection<span class="hl opt">*</span> true<span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defmacro</span> eval-a <span class="hl opt">[</span>i j<span class="hl opt">]</span>
  <span class="hl opt">`(</span><span class="hl kwa">let</span> <span class="hl opt">[</span>n<span class="hl opt"># (+</span> ~i ~j<span class="hl opt">)</span>
         n<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt"># (+</span> n<span class="hl opt">#</span> <span class="hl num">1</span><span class="hl opt">)]</span>
     <span class="hl opt">(/</span> <span class="hl num">1.0</span>
        <span class="hl opt">(+ (</span><span class="hl kwa">bit-shift-right</span> <span class="hl opt">(*</span> n<span class="hl opt">#</span> n<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">#)</span> <span class="hl num">1</span><span class="hl opt">)</span>
           ~i
           <span class="hl num">1</span><span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defn</span> multiply-a-v <span class="hl opt">[</span>^doubles v
                    ^doubles av<span class="hl opt">]</span>
  <span class="hl opt">(</span><span class="hl kwa">dotimes</span> <span class="hl opt">[</span>i <span class="hl opt">(</span><span class="hl kwa">alength</span> av<span class="hl opt">)]</span>
    <span class="hl opt">(</span><span class="hl kwa">aset</span> av i <span class="hl opt">(</span><span class="hl kwa">areduce</span> v j sum <span class="hl num">0.0</span> <span class="hl opt">(+</span> sum <span class="hl opt">(* (</span><span class="hl kwa">eval-a</span> i j<span class="hl opt">) (</span><span class="hl kwa">aget</span> v j<span class="hl opt">)))))))</span>

<span class="hl opt">(</span><span class="hl kwa">defn</span> multiply-at-v <span class="hl opt">[</span>^doubles v
                     ^doubles atv<span class="hl opt">]</span>
  <span class="hl opt">(</span><span class="hl kwa">dotimes</span> <span class="hl opt">[</span>i <span class="hl opt">(</span><span class="hl kwa">alength</span> atv<span class="hl opt">)]</span>
    <span class="hl opt">(</span><span class="hl kwa">aset</span> atv i <span class="hl opt">(</span><span class="hl kwa">areduce</span> v j sum <span class="hl num">0.0</span> <span class="hl opt">(+</span> sum <span class="hl opt">(* (</span><span class="hl kwa">eval-a</span> j i<span class="hl opt">) (</span><span class="hl kwa">aget</span> v j<span class="hl opt">)))))))</span>

<span class="hl opt">(</span><span class="hl kwa">defn</span> multiply-at-a-v <span class="hl opt">[</span>^doubles v
                       ^doubles tmp
                       ^doubles at-av<span class="hl opt">]</span>
  <span class="hl opt">(</span><span class="hl kwa">multiply-a-v</span> v tmp<span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">multiply-at-v</span> tmp at-av<span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">defn</span> dot-product <span class="hl opt">[</span>^doubles u
                   ^doubles v<span class="hl opt">]</span>
  <span class="hl opt">(</span><span class="hl kwa">areduce</span> u i sum <span class="hl num">0.0</span> <span class="hl opt">(+</span> sum <span class="hl opt">(* (</span><span class="hl kwa">aget</span> u i<span class="hl opt">) (</span><span class="hl kwa">aget</span> v i<span class="hl opt">)))))</span>

<span class="hl opt">(</span><span class="hl kwa">defn</span> run-game <span class="hl opt">[</span>n<span class="hl opt">]</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">[</span>u <span class="hl opt">(</span><span class="hl kwa">double-array</span> n <span class="hl num">1.0</span><span class="hl opt">)</span>
        tmp <span class="hl opt">(</span><span class="hl kwa">double-array</span> n <span class="hl num">0.0</span><span class="hl opt">)</span>
        v <span class="hl opt">(</span><span class="hl kwa">double-array</span> n <span class="hl num">0.0</span><span class="hl opt">)]</span>
    <span class="hl opt">(</span><span class="hl kwa">dotimes</span> <span class="hl opt">[</span>_ <span class="hl num">10</span><span class="hl opt">]</span>
      <span class="hl opt">(</span><span class="hl kwa">multiply-at-a-v</span> u tmp v<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">multiply-at-a-v</span> v tmp u<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">[</span>vbv <span class="hl opt">(</span><span class="hl kwa">dot-product</span> u v<span class="hl opt">)</span>
          vv <span class="hl opt">(</span><span class="hl kwa">dot-product</span> v v<span class="hl opt">)]</span>
      <span class="hl opt">(</span><span class="hl kwa">Math</span><span class="hl opt">/</span>sqrt <span class="hl opt">(/</span> vbv vv<span class="hl opt">)))))</span>

<span class="hl opt">(</span><span class="hl kwa">defn</span> -main <span class="hl opt">[&amp;</span> args<span class="hl opt">]</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">[</span>n <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">empty</span>? args<span class="hl opt">)</span>
            <span class="hl num">2500</span>
            <span class="hl opt">(</span><span class="hl kwa">Integer</span><span class="hl opt">/</span>valueOf <span class="hl opt">(</span><span class="hl kwa">first</span> args<span class="hl opt">)))]</span>
    <span class="hl opt">(</span><span class="hl kwa">println</span> <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;%.9f&quot;</span> <span class="hl opt">(</span><span class="hl kwa">run-game</span> n<span class="hl opt">)))))</span>
