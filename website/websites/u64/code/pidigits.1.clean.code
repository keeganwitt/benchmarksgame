<span class="hl com">/* The Great Computer Language Shootout</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com"> </span>
<span class="hl com">   contributed by Diederik van Arkel</span>
<span class="hl com">*/</span>
 
<span class="hl kwa">module</span> pidigits

<span class="hl kwa">import</span> StdEnv<span class="hl opt">,</span> LanguageShootout<span class="hl opt">,</span> BigInt

Start world
   <span class="hl opt">#</span> n           <span class="hl opt">=</span> argi
   <span class="hl opt"># (</span>io<span class="hl opt">,</span>world<span class="hl opt">)  =</span> stdio world
   <span class="hl opt">#</span> io          <span class="hl opt">=</span> digit <span class="hl num">1</span> <span class="hl opt">(</span>toBigInt <span class="hl num">1</span><span class="hl opt">,</span>toBigInt <span class="hl num">0</span><span class="hl opt">,</span>toBigInt <span class="hl num">0</span><span class="hl opt">,</span>toBigInt <span class="hl num">1</span><span class="hl opt">)</span> n <span class="hl num">0 0</span> io
   <span class="hl opt"># (</span>err<span class="hl opt">,</span>world<span class="hl opt">) =</span> fclose io world
   <span class="hl opt">=</span> world

digit <span class="hl opt">::</span> <span class="hl kwb">Int</span> <span class="hl opt">(</span>BigInt<span class="hl opt">,</span>BigInt<span class="hl opt">,</span>BigInt<span class="hl opt">,</span>BigInt<span class="hl opt">)</span> <span class="hl kwb">Int Int Int</span> <span class="hl opt">*</span><span class="hl kwb">File</span> <span class="hl opt">-&gt; *</span><span class="hl kwb">File</span>
digit k z <span class="hl num">0</span> row col io
   <span class="hl opt">=</span> io <span class="hl opt">&lt;&lt;&lt;</span> toString <span class="hl opt">(</span>repeatn <span class="hl opt">(</span><span class="hl num">10</span><span class="hl opt">-</span>col<span class="hl opt">) ' ') &lt;&lt;&lt;</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">:&quot;</span> <span class="hl opt">&lt;&lt;&lt; (</span>row<span class="hl opt">+</span>col<span class="hl opt">) &lt;&lt;&lt;</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span>
digit k z n row col io
   | safe z y
      | col <span class="hl opt">==</span> <span class="hl num">10</span>
         <span class="hl opt">#</span> row` <span class="hl opt">=</span> row <span class="hl opt">+</span> <span class="hl num">10</span>
         <span class="hl opt">#</span> io   <span class="hl opt">=</span> io <span class="hl opt">&lt;&lt;&lt;</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">:&quot;</span> <span class="hl opt">&lt;&lt;&lt;</span> row` <span class="hl opt">&lt;&lt;&lt;</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> <span class="hl opt">&lt;&lt;&lt;</span> toString y
         <span class="hl opt">=</span> digit k <span class="hl opt">(</span>prod z y<span class="hl opt">) (</span>n<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">)</span> row` <span class="hl num">1</span> io
         <span class="hl opt">#</span> io <span class="hl opt">=</span> io <span class="hl opt">&lt;&lt;&lt;</span> toString y
         <span class="hl opt">=</span> digit k <span class="hl opt">(</span>prod z y<span class="hl opt">) (</span>n<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">)</span> row <span class="hl opt">(</span>col<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span> io
      <span class="hl opt">=</span> digit <span class="hl opt">(</span>k<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">) (</span>cons z k<span class="hl opt">)</span> n row col io
<span class="hl kwa">where</span>
   y <span class="hl opt">=</span> next z
   prod z n <span class="hl opt">=</span> comp <span class="hl opt">(</span>toBigInt <span class="hl num">10</span><span class="hl opt">,</span>toBigInt <span class="hl opt">-</span><span class="hl num">10</span> <span class="hl opt">*</span> n<span class="hl opt">,</span> toBigInt <span class="hl num">0</span><span class="hl opt">,</span> toBigInt <span class="hl num">1</span><span class="hl opt">)</span> z

floor_ev <span class="hl opt">:: (</span>BigInt<span class="hl opt">,</span>BigInt<span class="hl opt">,</span>BigInt<span class="hl opt">,</span>BigInt<span class="hl opt">)</span> BigInt <span class="hl opt">-&gt;</span> BigInt
floor_ev <span class="hl opt">(</span>q<span class="hl opt">,</span> r<span class="hl opt">,</span> s<span class="hl opt">,</span> t<span class="hl opt">)</span> x <span class="hl opt">= (</span>q<span class="hl opt">*</span>x <span class="hl opt">+</span> r<span class="hl opt">) / (</span>s<span class="hl opt">*</span>x <span class="hl opt">+</span> t<span class="hl opt">)</span>
comp <span class="hl opt">:: (</span>BigInt<span class="hl opt">,</span>BigInt<span class="hl opt">,</span>BigInt<span class="hl opt">,</span>BigInt<span class="hl opt">) (</span>BigInt<span class="hl opt">,</span>BigInt<span class="hl opt">,</span>BigInt<span class="hl opt">,</span>BigInt<span class="hl opt">) -&gt; (</span>BigInt<span class="hl opt">,</span>BigInt<span class="hl opt">,</span>BigInt<span class="hl opt">,</span>BigInt<span class="hl opt">)</span>
comp <span class="hl opt">(</span>q<span class="hl opt">,</span>r<span class="hl opt">,</span>s<span class="hl opt">,</span>t<span class="hl opt">) (</span>q`<span class="hl opt">,</span>r`<span class="hl opt">,</span>s`<span class="hl opt">,</span>t`<span class="hl opt">) = (</span>q<span class="hl opt">*</span>q` <span class="hl opt">+</span> r<span class="hl opt">*</span>s`<span class="hl opt">,</span> q<span class="hl opt">*</span>r` <span class="hl opt">+</span> r<span class="hl opt">*</span>t`<span class="hl opt">,</span> s<span class="hl opt">*</span>q` <span class="hl opt">+</span> t<span class="hl opt">*</span>s`<span class="hl opt">,</span> s<span class="hl opt">*</span>r` <span class="hl opt">+</span> t<span class="hl opt">*</span>t`<span class="hl opt">)</span>
next <span class="hl opt">:: (</span>BigInt<span class="hl opt">,</span>BigInt<span class="hl opt">,</span>BigInt<span class="hl opt">,</span>BigInt<span class="hl opt">) -&gt;</span> BigInt
next z <span class="hl opt">=</span> floor_ev z <span class="hl opt">(</span>toBigInt <span class="hl num">3</span><span class="hl opt">)</span>

safe z n <span class="hl opt">=</span> n <span class="hl opt">==</span> floor_ev z <span class="hl opt">(</span>toBigInt <span class="hl num">4</span><span class="hl opt">)</span>
cons z k <span class="hl opt">=</span> <span class="hl kwa">let</span> den <span class="hl opt">=</span> <span class="hl num">2</span><span class="hl opt">*</span>k<span class="hl opt">+</span><span class="hl num">1</span> <span class="hl kwa">in</span> comp z <span class="hl opt">(</span>toBigInt k<span class="hl opt">,</span> toBigInt <span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">*</span>den<span class="hl opt">),</span> toBigInt <span class="hl num">0</span><span class="hl opt">,</span> toBigInt den<span class="hl opt">)</span>
