<span class="hl slc">// The Great Computer Language Shootout</span>
<span class="hl slc">//  http://shootout.alioth.debian.org</span>
<span class="hl slc">//</span>
<span class="hl slc">//  Contributed by Ian Osgood</span>

<span class="hl kwa">var</span> last <span class="hl sym">=</span> <span class="hl num">42</span><span class="hl sym">,</span> A <span class="hl sym">=</span> <span class="hl num">3877</span><span class="hl sym">,</span> C <span class="hl sym">=</span> <span class="hl num">29573</span><span class="hl sym">,</span> M <span class="hl sym">=</span> <span class="hl num">139968</span><span class="hl sym">;</span>

<span class="hl kwa">function</span> <span class="hl kwd">rand</span><span class="hl sym">(</span>max<span class="hl sym">) {</span>
  last <span class="hl sym">= (</span>last <span class="hl sym">*</span> A <span class="hl sym">+</span> C<span class="hl sym">) %</span> M<span class="hl sym">;</span>
  <span class="hl kwa">return</span> max <span class="hl sym">*</span> last <span class="hl sym">/</span> M<span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwa">var</span> ALU <span class="hl sym">=</span>
  <span class="hl str">&quot;GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG&quot;</span> <span class="hl sym">+</span>
  <span class="hl str">&quot;GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA&quot;</span> <span class="hl sym">+</span>
  <span class="hl str">&quot;CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT&quot;</span> <span class="hl sym">+</span>
  <span class="hl str">&quot;ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA&quot;</span> <span class="hl sym">+</span>
  <span class="hl str">&quot;GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG&quot;</span> <span class="hl sym">+</span>
  <span class="hl str">&quot;AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC&quot;</span> <span class="hl sym">+</span>
  <span class="hl str">&quot;AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA&quot;</span><span class="hl sym">;</span>

<span class="hl kwa">var</span> IUB <span class="hl sym">= {</span>
  a<span class="hl sym">:</span><span class="hl num">0.27</span><span class="hl sym">,</span> c<span class="hl sym">:</span><span class="hl num">0.12</span><span class="hl sym">,</span> g<span class="hl sym">:</span><span class="hl num">0.12</span><span class="hl sym">,</span> t<span class="hl sym">:</span><span class="hl num">0.27</span><span class="hl sym">,</span>
  B<span class="hl sym">:</span><span class="hl num">0.02</span><span class="hl sym">,</span> D<span class="hl sym">:</span><span class="hl num">0.02</span><span class="hl sym">,</span> H<span class="hl sym">:</span><span class="hl num">0.02</span><span class="hl sym">,</span> K<span class="hl sym">:</span><span class="hl num">0.02</span><span class="hl sym">,</span>
  M<span class="hl sym">:</span><span class="hl num">0.02</span><span class="hl sym">,</span> N<span class="hl sym">:</span><span class="hl num">0.02</span><span class="hl sym">,</span> R<span class="hl sym">:</span><span class="hl num">0.02</span><span class="hl sym">,</span> S<span class="hl sym">:</span><span class="hl num">0.02</span><span class="hl sym">,</span>
  V<span class="hl sym">:</span><span class="hl num">0.02</span><span class="hl sym">,</span> W<span class="hl sym">:</span><span class="hl num">0.02</span><span class="hl sym">,</span> Y<span class="hl sym">:</span><span class="hl num">0.02</span>
<span class="hl sym">}</span>

<span class="hl kwa">var</span> HomoSap <span class="hl sym">= {</span>
  a<span class="hl sym">:</span> <span class="hl num">0.3029549426680</span><span class="hl sym">,</span>
  c<span class="hl sym">:</span> <span class="hl num">0.1979883004921</span><span class="hl sym">,</span>
  g<span class="hl sym">:</span> <span class="hl num">0.1975473066391</span><span class="hl sym">,</span>
  t<span class="hl sym">:</span> <span class="hl num">0.3015094502008</span>
<span class="hl sym">}</span>

<span class="hl kwa">function</span> <span class="hl kwd">makeCumulative</span><span class="hl sym">(</span>table<span class="hl sym">) {</span>
  <span class="hl kwa">var</span> last <span class="hl sym">=</span> <span class="hl kwa">null</span><span class="hl sym">;</span>
  <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwa">var</span> c <span class="hl kwa">in</span> table<span class="hl sym">) {</span>
    <span class="hl kwa">if</span> <span class="hl sym">(</span>last<span class="hl sym">)</span> table<span class="hl sym">[</span>c<span class="hl sym">] +=</span> table<span class="hl sym">[</span>last<span class="hl sym">];</span>
    last <span class="hl sym">=</span> c<span class="hl sym">;</span>
  <span class="hl sym">}</span>
<span class="hl sym">}</span>

<span class="hl kwa">function</span> <span class="hl kwd">fastaRepeat</span><span class="hl sym">(</span>n<span class="hl sym">,</span> seq<span class="hl sym">) {</span>
  <span class="hl kwa">var</span> seqi <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">,</span> lenOut <span class="hl sym">=</span> <span class="hl num">60</span><span class="hl sym">;</span>
  <span class="hl kwa">while</span> <span class="hl sym">(</span>n<span class="hl sym">&gt;</span><span class="hl num">0</span><span class="hl sym">) {</span>
    <span class="hl kwa">if</span> <span class="hl sym">(</span>n<span class="hl sym">&lt;</span>lenOut<span class="hl sym">)</span> lenOut <span class="hl sym">=</span> n<span class="hl sym">;</span>
    <span class="hl kwa">if</span> <span class="hl sym">(</span>seqi <span class="hl sym">+</span> lenOut <span class="hl sym">&lt;</span> seq<span class="hl sym">.</span>length<span class="hl sym">) {</span>
      <span class="hl kwd">print</span><span class="hl sym">(</span> seq<span class="hl sym">.</span><span class="hl kwd">substring</span><span class="hl sym">(</span>seqi<span class="hl sym">,</span> seqi<span class="hl sym">+</span>lenOut<span class="hl sym">) );</span>
      seqi <span class="hl sym">+=</span> lenOut<span class="hl sym">;</span>
    <span class="hl sym">}</span> <span class="hl kwa">else</span> <span class="hl sym">{</span>
      <span class="hl kwa">var</span> s <span class="hl sym">=</span> seq<span class="hl sym">.</span><span class="hl kwd">substring</span><span class="hl sym">(</span>seqi<span class="hl sym">);</span>
      seqi <span class="hl sym">=</span> lenOut <span class="hl sym">-</span> s<span class="hl sym">.</span>length<span class="hl sym">;</span>
      <span class="hl kwd">print</span><span class="hl sym">(</span> s <span class="hl sym">+</span> seq<span class="hl sym">.</span><span class="hl kwd">substring</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> seqi<span class="hl sym">) );</span>
    <span class="hl sym">}</span>
    n <span class="hl sym">-=</span> lenOut<span class="hl sym">;</span>
  <span class="hl sym">}</span>
<span class="hl sym">}</span>

<span class="hl kwa">function</span> <span class="hl kwd">fastaRandom</span><span class="hl sym">(</span>n<span class="hl sym">,</span> table<span class="hl sym">) {</span>
  <span class="hl kwa">var</span> line <span class="hl sym">=</span> <span class="hl kwa">new</span> <span class="hl kwd">Array</span><span class="hl sym">(</span><span class="hl num">60</span><span class="hl sym">);</span>
  <span class="hl kwd">makeCumulative</span><span class="hl sym">(</span>table<span class="hl sym">);</span>
  <span class="hl kwa">while</span> <span class="hl sym">(</span>n<span class="hl sym">&gt;</span><span class="hl num">0</span><span class="hl sym">) {</span>
    <span class="hl kwa">if</span> <span class="hl sym">(</span>n<span class="hl sym">&lt;</span>line<span class="hl sym">.</span>length<span class="hl sym">)</span> line <span class="hl sym">=</span> <span class="hl kwa">new</span> <span class="hl kwd">Array</span><span class="hl sym">(</span>n<span class="hl sym">);</span>
    <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwa">var</span> i<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span> i<span class="hl sym">&lt;</span>line<span class="hl sym">.</span>length<span class="hl sym">;</span> i<span class="hl sym">++) {</span>
      <span class="hl kwa">var</span> r <span class="hl sym">=</span> <span class="hl kwd">rand</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">);</span>
      <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwa">var</span> c <span class="hl kwa">in</span> table<span class="hl sym">) {</span>
        <span class="hl kwa">if</span> <span class="hl sym">(</span>r <span class="hl sym">&lt;</span> table<span class="hl sym">[</span>c<span class="hl sym">]) {</span>
          line<span class="hl sym">[</span>i<span class="hl sym">] =</span> c<span class="hl sym">;</span>
          <span class="hl kwa">break</span><span class="hl sym">;</span>
        <span class="hl sym">}</span>
      <span class="hl sym">}</span>
    <span class="hl sym">}</span>
    <span class="hl kwd">print</span><span class="hl sym">(</span> line<span class="hl sym">.</span><span class="hl kwd">join</span><span class="hl sym">(</span><span class="hl str">''</span><span class="hl sym">) );</span>
    n <span class="hl sym">-=</span> line<span class="hl sym">.</span>length<span class="hl sym">;</span>
  <span class="hl sym">}</span>
<span class="hl sym">}</span>

<span class="hl kwa">var</span> n <span class="hl sym">=</span> arguments<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]</span>

<span class="hl kwd">print</span><span class="hl sym">(</span><span class="hl str">&quot;&gt;ONE Homo sapiens alu&quot;</span><span class="hl sym">)</span>
<span class="hl kwd">fastaRepeat</span><span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">*</span>n<span class="hl sym">,</span> ALU<span class="hl sym">)</span>

<span class="hl kwd">print</span><span class="hl sym">(</span><span class="hl str">&quot;&gt;TWO IUB ambiguity codes&quot;</span><span class="hl sym">)</span>
<span class="hl kwd">fastaRandom</span><span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">*</span>n<span class="hl sym">,</span> IUB<span class="hl sym">)</span>

<span class="hl kwd">print</span><span class="hl sym">(</span><span class="hl str">&quot;&gt;THREE Homo sapiens frequency&quot;</span><span class="hl sym">)</span>
<span class="hl kwd">fastaRandom</span><span class="hl sym">(</span><span class="hl num">5</span><span class="hl sym">*</span>n<span class="hl sym">,</span> HomoSap<span class="hl sym">)</span>
