<span class="hl com">&quot;* The Computer Language Benchmarks Game</span>
<span class="hl com">    http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com">    contributed by Paolo Bonzini *&quot;</span><span class="hl opt">!</span>

<span class="hl opt">!</span><span class="hl kwc">Array</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'benchmarking'</span><span class="hl opt">!</span>
<span class="hl kwb">multiplyAtAv</span>
   <span class="hl opt">^(</span><span class="hl kwa">self</span> <span class="hl kwb">multiplyAv</span><span class="hl opt">)</span> <span class="hl kwb">multiplyAtv</span><span class="hl opt">! !</span>

<span class="hl opt">!</span><span class="hl kwc">Array</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'benchmarking'</span><span class="hl opt">!</span>
<span class="hl kwb">multiplyAtv</span>
   <span class="hl kwd">| n atv sum |</span>
   n <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl kwa">self</span> <span class="hl kwb">size</span><span class="hl opt">.</span>
   atv <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl kwc">Array</span> <span class="hl kwb">new:</span> n<span class="hl opt">.</span>
   <span class="hl num">1</span> <span class="hl kwb">to:</span> n <span class="hl kwb">do:</span> <span class="hl opt">[</span><span class="hl kwd">:i</span>|
      sum <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">0.0</span>d0<span class="hl opt">.</span>
      <span class="hl num">1</span> <span class="hl kwb">to:</span> n <span class="hl kwb">do:</span> <span class="hl opt">[</span><span class="hl kwd">:j</span>|
         sum <span class="hl opt">:</span><span class="hl kwb">=</span> sum <span class="hl kwb">+</span> <span class="hl opt">((</span>j <span class="hl kwb">matrixA:</span> i<span class="hl opt">)</span> <span class="hl kwb">*</span> <span class="hl opt">(</span><span class="hl kwa">self</span> <span class="hl kwb">at:</span> j<span class="hl opt">)) ].</span>
      atv <span class="hl kwb">at:</span> i <span class="hl kwb">put:</span> sum<span class="hl opt">].</span>
   <span class="hl opt">^</span>atv<span class="hl opt">! !</span>

<span class="hl opt">!</span><span class="hl kwc">Array</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'benchmarking'</span><span class="hl opt">!</span>
<span class="hl kwb">multiplyAv</span>
   <span class="hl kwd">| n av sum |</span>
   n <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl kwa">self</span> <span class="hl kwb">size</span><span class="hl opt">.</span>
   av <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl kwc">Array</span> <span class="hl kwb">new:</span> n<span class="hl opt">.</span>
   <span class="hl num">1</span> <span class="hl kwb">to:</span> n <span class="hl kwb">do:</span> <span class="hl opt">[</span><span class="hl kwd">:i</span>|
      sum <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">0.0</span>d0<span class="hl opt">.</span>
      <span class="hl num">1</span> <span class="hl kwb">to:</span> n <span class="hl kwb">do:</span> <span class="hl opt">[</span><span class="hl kwd">:j</span>|
         sum <span class="hl opt">:</span><span class="hl kwb">=</span> sum <span class="hl kwb">+</span> <span class="hl opt">((</span>i <span class="hl kwb">matrixA:</span> j<span class="hl opt">)</span> <span class="hl kwb">*</span> <span class="hl opt">(</span><span class="hl kwa">self</span> <span class="hl kwb">at:</span> j<span class="hl opt">)) ].</span>
      av <span class="hl kwb">at:</span> i <span class="hl kwb">put:</span> sum<span class="hl opt">].</span>
   <span class="hl opt">^</span>av<span class="hl opt">! !</span>


<span class="hl opt">!</span><span class="hl kwc">SmallInteger</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'benchmarking'</span><span class="hl opt">!</span>
<span class="hl kwb">matrixA:</span> anInteger
   <span class="hl opt">^</span><span class="hl num">1.0</span>d0 <span class="hl kwb">/</span> <span class="hl opt">((</span><span class="hl kwa">self</span> <span class="hl kwb">+</span> anInteger <span class="hl kwb">-</span> <span class="hl num">2</span><span class="hl opt">)</span> <span class="hl kwb">*</span> <span class="hl opt">(</span><span class="hl kwa">self</span> <span class="hl kwb">+</span> anInteger <span class="hl kwb">-</span> <span class="hl num">1</span><span class="hl opt">)</span> <span class="hl kwb">/</span><span class="hl num">2</span>  <span class="hl kwb">+</span> <span class="hl kwa">self</span><span class="hl opt">)! !</span>


<span class="hl opt">!</span><span class="hl kwc">Tests</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'benchmarking'</span><span class="hl opt">!</span>
<span class="hl kwb">spectralnorm:</span> n
   <span class="hl kwd">| u v vBv vv |</span>
   u <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl kwc">Array</span> <span class="hl kwb">new:</span> n <span class="hl kwb">withAll:</span> <span class="hl num">1.0</span>d0<span class="hl opt">.</span>
   <span class="hl num">10</span> <span class="hl kwb">timesRepeat:</span>
      <span class="hl opt">[</span>v <span class="hl opt">:</span><span class="hl kwb">=</span> u <span class="hl kwb">multiplyAtAv</span><span class="hl opt">.</span>
       u <span class="hl opt">:</span><span class="hl kwb">=</span> v <span class="hl kwb">multiplyAtAv</span><span class="hl opt">].</span>
   vBv <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">0.0</span>d0<span class="hl opt">.</span>
   vv <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">0.0</span>d0<span class="hl opt">.</span>
   <span class="hl num">1</span> <span class="hl kwb">to:</span> n <span class="hl kwb">do:</span>
      <span class="hl opt">[</span><span class="hl kwd">:i</span> |
       vBv <span class="hl opt">:</span><span class="hl kwb">=</span> vBv <span class="hl kwb">+</span> <span class="hl opt">((</span>u <span class="hl kwb">at:</span> i<span class="hl opt">)</span> <span class="hl kwb">*</span> <span class="hl opt">(</span>v <span class="hl kwb">at:</span> i<span class="hl opt">)).</span>
       vv <span class="hl opt">:</span><span class="hl kwb">=</span> vv <span class="hl kwb">+</span> <span class="hl opt">((</span>v <span class="hl kwb">at:</span> i<span class="hl opt">)</span> <span class="hl kwb">*</span> <span class="hl opt">(</span>v <span class="hl kwb">at:</span> i<span class="hl opt">))].</span>
   <span class="hl opt">^(</span>vBv <span class="hl kwb">/</span> vv<span class="hl opt">)</span> <span class="hl kwb">sqrt</span><span class="hl opt">! !</span>


<span class="hl opt">!</span><span class="hl kwc">Tests</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'benchmark scripts'</span><span class="hl opt">!</span>
<span class="hl kwb">spectralnorm2</span>
   <span class="hl kwa">self</span> <span class="hl kwb">stdout print:</span> <span class="hl opt">(</span><span class="hl kwa">self</span> <span class="hl kwb">spectralnorm:</span> <span class="hl kwa">self</span> <span class="hl kwb">arg</span><span class="hl opt">)</span> <span class="hl kwb">digits:</span> <span class="hl num">9</span><span class="hl opt">;</span> <span class="hl kwb">nl</span><span class="hl opt">.</span>
   <span class="hl opt">^</span><span class="hl str">''</span><span class="hl opt">! !</span>
