<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://benchmarksgame.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc"># Contributed by Bradford Powell</span>
<span class="hl slc"># Fixed slow print substr-solution, by Kjetil Skotheim</span>


<span class="hl kwa">use</span> strict<span class="hl opt">;</span>

<span class="hl kwa">sub</span> print_revcomp <span class="hl opt">{</span>
    <span class="hl kwc">my</span> <span class="hl opt">(</span><span class="hl kwb">$desc</span><span class="hl opt">,</span> <span class="hl kwb">$s</span><span class="hl opt">) =</span> <span class="hl kwb">&#64;_</span><span class="hl opt">;</span>
    <span class="hl kwa">return if</span> <span class="hl kwc">not</span> <span class="hl kwb">$desc</span><span class="hl opt">;</span>
    <span class="hl kwc">print</span> <span class="hl kwb">$desc</span><span class="hl opt">,</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">;</span>
    <span class="hl kwb">$s</span> <span class="hl opt">=</span>  <span class="hl kwc">reverse</span> <span class="hl kwb">$s</span><span class="hl opt">;</span>
    <span class="hl kwb">$s</span> <span class="hl opt">=~</span> tr<span class="hl opt">{</span>wsatugcyrkmbdhvnATUGCYRKMBDHVN<span class="hl opt">}</span>
            <span class="hl opt">{</span>WSTAACGRYMKVHDBNTAACGRYMKVHDBN<span class="hl opt">};</span>
    <span class="hl kwc">my</span><span class="hl opt">(</span><span class="hl kwb">$i</span><span class="hl opt">,</span><span class="hl kwb">$stop</span><span class="hl opt">)=(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl kwc">length</span><span class="hl opt">(</span><span class="hl kwb">$s</span><span class="hl opt">)/</span><span class="hl num">60</span><span class="hl opt">);</span>
    <span class="hl kwc">print substr</span><span class="hl opt">(</span><span class="hl kwb">$s</span><span class="hl opt">,</span><span class="hl kwb">$i</span><span class="hl opt">++*</span><span class="hl num">60</span><span class="hl opt">,</span><span class="hl num">60</span><span class="hl opt">),</span><span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span>  <span class="hl kwa">while</span> <span class="hl kwb">$i</span><span class="hl opt">&lt;</span><span class="hl kwb">$stop</span><span class="hl opt">;</span>
<span class="hl opt">}</span>

<span class="hl kwc">my</span><span class="hl opt">(</span><span class="hl kwb">$desc</span><span class="hl opt">,</span><span class="hl kwb">$seq</span><span class="hl opt">);</span>
<span class="hl kwa">while</span> <span class="hl opt">(&lt;</span>STDIN<span class="hl opt">&gt;) {</span>
    <span class="hl kwc">chomp</span><span class="hl opt">;</span>
    <span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwd">/^&gt;/</span><span class="hl opt">) {</span>
        print_revcomp<span class="hl opt">(</span><span class="hl kwb">$desc</span><span class="hl opt">,</span> <span class="hl kwb">$seq</span><span class="hl opt">);</span>
        <span class="hl kwb">$desc</span> <span class="hl opt">=</span> <span class="hl kwb">$_</span><span class="hl opt">;</span>
        <span class="hl kwb">$seq</span> <span class="hl opt">=</span> <span class="hl str">''</span><span class="hl opt">;</span>
    <span class="hl opt">}</span> <span class="hl kwa">else</span> <span class="hl opt">{</span>
        <span class="hl kwb">$seq</span> <span class="hl opt">.=</span> <span class="hl kwb">$_</span><span class="hl opt">;</span>
    <span class="hl opt">}</span>
<span class="hl opt">}</span>
print_revcomp<span class="hl opt">(</span><span class="hl kwb">$desc</span><span class="hl opt">,</span> <span class="hl kwb">$seq</span><span class="hl opt">);</span>
