<span class="hl com">(* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"></span>
<span class="hl com">   Adapted by Antti Lankila from the earlier Isaac Gouy's implementation</span>
<span class="hl com">   Add multithread &amp; tweaks from C++ by The Anh Tran</span>
<span class="hl com">   Translate to F# by Jomo Fisher</span>
<span class="hl com">*)</span>

<span class="hl kwa">open</span> <span class="hl kwd">System</span>
<span class="hl kwa">open</span> <span class="hl kwd">System</span><span class="hl opt">.</span><span class="hl kwd">Threading</span>
<span class="hl kwa">open</span> <span class="hl kwd">System</span><span class="hl opt">.</span><span class="hl kwd">IO</span>

<span class="hl kwa">let mutable</span> <span class="hl kwd">N</span> <span class="hl opt">=</span> <span class="hl num">200</span><span class="hl opt">;</span>
<span class="hl kwa">let mutable</span> width_bytes <span class="hl opt">=</span> <span class="hl num">0</span>
<span class="hl kwa">let mutable</span> data <span class="hl opt">:</span> byte array array <span class="hl opt">=</span> <span class="hl kwa">null</span>
<span class="hl kwa">let mutable</span> nbyte_each_line <span class="hl opt">:</span> <span class="hl kwb">int</span> array <span class="hl opt">=</span> <span class="hl kwa">null</span>
<span class="hl kwa">let</span> current_line <span class="hl opt">=</span> <span class="hl kwb">ref</span> <span class="hl opt">-</span><span class="hl num">1</span> 


<span class="hl kwa">let</span> <span class="hl kwd">Calculate</span><span class="hl opt">() =</span> 
    <span class="hl kwa">let</span> inverse_n <span class="hl opt">=</span> <span class="hl num">2.0</span> <span class="hl opt">/</span> <span class="hl kwb">float</span> <span class="hl kwd">N</span>

    <span class="hl kwa">let mutable</span> y <span class="hl opt">=</span> <span class="hl kwd">Interlocked</span><span class="hl opt">.</span><span class="hl kwd">Increment</span><span class="hl opt">(&amp;</span>current_line<span class="hl opt">.</span>contents<span class="hl opt">)</span>
    <span class="hl kwa">while</span> y <span class="hl opt">&lt;</span> <span class="hl kwd">N</span> <span class="hl kwa">do</span> <span class="hl slc">// fetch a line</span>
        <span class="hl kwa">let</span> pdata <span class="hl opt">=</span> data<span class="hl opt">.[</span>y<span class="hl opt">]</span>

        <span class="hl kwa">let mutable</span> byte_count <span class="hl opt">=</span> <span class="hl num">0</span>
        <span class="hl kwa">let mutable</span> bit_num <span class="hl opt">=</span> <span class="hl num">0</span>
        <span class="hl kwa">let mutable</span> byte_acc <span class="hl opt">=</span> <span class="hl num">0</span>

        <span class="hl kwa">let</span> <span class="hl kwd">Civ</span> <span class="hl opt">=</span> <span class="hl kwb">float</span> y <span class="hl opt">*</span> inverse_n <span class="hl opt">-</span> <span class="hl num">1.0</span>

        <span class="hl kwa">for</span> x <span class="hl kwa">in</span> <span class="hl num">0</span><span class="hl opt">..</span><span class="hl kwd">N</span><span class="hl opt">-</span><span class="hl num">1</span> <span class="hl kwa">do</span> 
            <span class="hl kwa">let</span> <span class="hl kwd">Crv</span> <span class="hl opt">=</span> <span class="hl kwb">float</span> x <span class="hl opt">*</span> inverse_n <span class="hl opt">-</span> <span class="hl num">1.5</span>

            <span class="hl kwa">let mutable</span> <span class="hl kwd">Zrv</span> <span class="hl opt">=</span> <span class="hl kwd">Crv</span>
            <span class="hl kwa">let mutable</span> <span class="hl kwd">Ziv</span> <span class="hl opt">=</span> <span class="hl kwd">Civ</span>
            <span class="hl kwa">let mutable</span> <span class="hl kwd">Trv</span> <span class="hl opt">=</span> <span class="hl kwd">Crv</span> <span class="hl opt">*</span> <span class="hl kwd">Crv</span>
            <span class="hl kwa">let mutable</span> <span class="hl kwd">Tiv</span> <span class="hl opt">=</span> <span class="hl kwd">Civ</span> <span class="hl opt">*</span> <span class="hl kwd">Civ</span>

            <span class="hl kwa">let mutable</span> i <span class="hl opt">=</span> <span class="hl num">49</span><span class="hl opt">;</span>
            <span class="hl kwa">let mutable</span> more <span class="hl opt">=</span> <span class="hl kwa">true</span>
            <span class="hl kwa">while</span> more <span class="hl kwa">do</span>
                <span class="hl kwd">Ziv</span> <span class="hl opt">&lt;- (</span><span class="hl kwd">Zrv</span> <span class="hl opt">*</span> <span class="hl kwd">Ziv</span><span class="hl opt">) + (</span><span class="hl kwd">Zrv</span> <span class="hl opt">*</span> <span class="hl kwd">Ziv</span><span class="hl opt">) +</span> <span class="hl kwd">Civ</span>
                <span class="hl kwd">Zrv</span> <span class="hl opt">&lt;-</span> <span class="hl kwd">Trv</span> <span class="hl opt">-</span> <span class="hl kwd">Tiv</span> <span class="hl opt">+</span> <span class="hl kwd">Crv</span>

                <span class="hl kwd">Trv</span> <span class="hl opt">&lt;-</span> <span class="hl kwd">Zrv</span> <span class="hl opt">*</span> <span class="hl kwd">Zrv</span>
                <span class="hl kwd">Tiv</span> <span class="hl opt">&lt;-</span> <span class="hl kwd">Ziv</span> <span class="hl opt">*</span> <span class="hl kwd">Ziv</span>
                
                more <span class="hl opt">&lt;- (</span><span class="hl kwd">Trv</span> <span class="hl opt">+</span> <span class="hl kwd">Tiv</span><span class="hl opt">) &lt;=</span> <span class="hl num">4.0</span> 
                <span class="hl kwa">if</span> more <span class="hl kwa">then</span>
                    i <span class="hl opt">&lt;-</span> i <span class="hl opt">-</span> <span class="hl num">1</span>
                    more <span class="hl opt">&lt;-</span> i <span class="hl opt">&gt;</span> <span class="hl num">0</span>
                    
            byte_acc <span class="hl opt">&lt;-</span> byte_acc <span class="hl opt">&lt;&lt;&lt;</span> <span class="hl num">1</span>
            byte_acc <span class="hl opt">&lt;-</span> byte_acc ||| <span class="hl opt">(</span><span class="hl kwa">if</span> i <span class="hl opt">=</span> <span class="hl num">0</span> <span class="hl kwa">then</span> <span class="hl num">1</span> <span class="hl kwa">else</span> <span class="hl num">0</span><span class="hl opt">)</span>

            bit_num <span class="hl opt">&lt;-</span> bit_num <span class="hl opt">+</span> <span class="hl num">1</span>
            <span class="hl kwa">if</span> bit_num <span class="hl opt">=</span> <span class="hl num">8</span> <span class="hl kwa">then</span>
                pdata<span class="hl opt">.[</span>byte_count<span class="hl opt">] &lt;-</span> byte byte_acc
                byte_count <span class="hl opt">&lt;-</span> byte_count <span class="hl opt">+</span> <span class="hl num">1</span>
                bit_num <span class="hl opt">&lt;-</span> <span class="hl num">0</span>
                byte_acc <span class="hl opt">&lt;-</span> <span class="hl num">0</span>

        <span class="hl kwa">if</span> bit_num <span class="hl opt">&lt;&gt;</span> <span class="hl num">0</span> <span class="hl kwa">then</span>  <span class="hl slc">// write left over bits</span>
            byte_acc <span class="hl opt">&lt;-</span> byte_acc <span class="hl opt">&lt;&lt;&lt; (</span><span class="hl num">8</span> <span class="hl opt">- (</span><span class="hl kwd">N</span> <span class="hl opt">&amp;&amp;&amp;</span> <span class="hl num">7</span><span class="hl opt">))</span>
            pdata<span class="hl opt">.[</span>byte_count<span class="hl opt">] &lt;-</span> byte byte_acc
            byte_count<span class="hl opt">&lt;-</span>byte_count <span class="hl opt">+</span> <span class="hl num">1</span>

        nbyte_each_line<span class="hl opt">.[</span>y<span class="hl opt">] &lt;-</span> byte_count
        y <span class="hl opt">&lt;-</span> <span class="hl kwd">Interlocked</span><span class="hl opt">.</span><span class="hl kwd">Increment</span><span class="hl opt">(&amp;</span>current_line<span class="hl opt">.</span>contents<span class="hl opt">)</span>


<span class="hl opt">[&lt;</span><span class="hl kwd">EntryPoint</span><span class="hl opt">&gt;]</span>
<span class="hl kwa">let</span> main args <span class="hl opt">=</span> 
    <span class="hl kwa">if</span> args<span class="hl opt">.</span><span class="hl kwd">Length</span> <span class="hl opt">&gt;</span> <span class="hl num">0</span> <span class="hl kwa">then</span>
        <span class="hl kwd">N</span> <span class="hl opt">&lt;-</span> <span class="hl kwb">int</span> args<span class="hl opt">.[</span><span class="hl num">0</span><span class="hl opt">]</span>
    <span class="hl kwd">Console</span><span class="hl opt">.</span><span class="hl kwd">Out</span><span class="hl opt">.</span><span class="hl kwd">WriteLine</span><span class="hl opt">(</span><span class="hl str">&quot;P4</span><span class="hl esc">\n</span><span class="hl str">{0} {0}&quot;</span><span class="hl opt">,</span> <span class="hl kwd">N</span><span class="hl opt">);</span>

    width_bytes <span class="hl opt">&lt;-</span> <span class="hl kwd">N</span> <span class="hl opt">/</span> <span class="hl num">8</span>
    <span class="hl kwa">if</span> width_bytes <span class="hl opt">*</span> <span class="hl num">8</span> <span class="hl opt">&lt;</span> <span class="hl kwd">N</span> <span class="hl kwa">then</span>
        width_bytes <span class="hl opt">&lt;-</span> width_bytes <span class="hl opt">+</span> <span class="hl num">1</span>

    nbyte_each_line <span class="hl opt">&lt;-</span> <span class="hl kwd">Array</span><span class="hl opt">.</span>zeroCreate <span class="hl kwd">N</span>

    data <span class="hl opt">&lt;-</span> <span class="hl kwd">Array</span><span class="hl opt">.</span>zeroCreate <span class="hl kwd">N</span> 
    <span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl num">0</span><span class="hl opt">..</span><span class="hl kwd">N</span><span class="hl opt">-</span><span class="hl num">1</span> <span class="hl kwa">do</span> 
        data<span class="hl opt">.[</span>i<span class="hl opt">] &lt;-</span> <span class="hl kwd">Array</span><span class="hl opt">.</span>zeroCreate width_bytes 

    <span class="hl kwa">let</span> threads <span class="hl opt">=</span> <span class="hl kwd">Array</span><span class="hl opt">.</span>init <span class="hl opt">(</span><span class="hl kwd">Environment</span><span class="hl opt">.</span><span class="hl kwd">ProcessorCount</span><span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">) (</span><span class="hl kwa">fun</span> i<span class="hl opt">-&gt;</span><span class="hl kwa">new</span> <span class="hl kwd">Thread</span><span class="hl opt">(</span><span class="hl kwd">Calculate</span><span class="hl opt">))</span>
    <span class="hl kwa">for</span> thread <span class="hl kwa">in</span> threads <span class="hl kwa">do</span> thread<span class="hl opt">.</span><span class="hl kwd">Start</span><span class="hl opt">()</span>
    <span class="hl kwd">Calculate</span><span class="hl opt">()</span>
    <span class="hl kwa">for</span> thread <span class="hl kwa">in</span> threads <span class="hl kwa">do</span> thread<span class="hl opt">.</span><span class="hl kwd">Join</span><span class="hl opt">()</span>
            
    <span class="hl kwa">let</span> s <span class="hl opt">=</span> <span class="hl kwd">Console</span><span class="hl opt">.</span><span class="hl kwd">OpenStandardOutput</span><span class="hl opt">();</span>
    <span class="hl kwa">for</span> y <span class="hl kwa">in</span> <span class="hl num">0</span><span class="hl opt">..</span><span class="hl kwd">N</span><span class="hl opt">-</span><span class="hl num">1</span> <span class="hl kwa">do</span> 
        s<span class="hl opt">.</span><span class="hl kwd">Write</span><span class="hl opt">(</span>data<span class="hl opt">.[</span>y<span class="hl opt">],</span> <span class="hl num">0</span><span class="hl opt">,</span> nbyte_each_line<span class="hl opt">.[</span>y<span class="hl opt">])</span>
    <span class="hl num">0</span>
