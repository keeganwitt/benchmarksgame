<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://benchmarksgame.alioth.debian.org/</span>
<span class="hl slc"># contributed by Danny Sauer</span>
<span class="hl slc"># completely rewritten and</span>
<span class="hl slc"># cleaned up for speed and fun by Mirco Wahab</span>
<span class="hl slc"># improved STDIN read, regex clean up by Jake Berner</span>

<span class="hl kwa">use</span> strict<span class="hl opt">;</span>
<span class="hl kwa">use</span> warnings<span class="hl opt">;</span>

<span class="hl kwc">my</span> <span class="hl kwb">$l_file</span>  <span class="hl opt">= -</span>s STDIN<span class="hl opt">;</span>
<span class="hl kwc">my</span> <span class="hl kwb">$content</span><span class="hl opt">;</span> <span class="hl kwc">read</span> STDIN<span class="hl opt">,</span> <span class="hl kwb">$content</span><span class="hl opt">,</span> <span class="hl kwb">$l_file</span><span class="hl opt">;</span>
<span class="hl slc"># this is significantly faster than using &lt;&gt; in this case</span>

<span class="hl kwc">my</span> <span class="hl kwb">$dispose</span> <span class="hl opt">=</span>  <span class="hl kwd">qr/(^&gt;.*)?\n/m</span><span class="hl opt">;</span> <span class="hl slc"># slight performance gain here</span>
   <span class="hl kwb">$content</span> <span class="hl opt">=~</span> <span class="hl kwd">s/$dispose//g</span><span class="hl opt">;</span>
<span class="hl kwc">my</span> <span class="hl kwb">$l_code</span>  <span class="hl opt">=</span>  <span class="hl kwc">length</span> <span class="hl kwb">$content</span><span class="hl opt">;</span>

<span class="hl kwc">my</span> <span class="hl kwb">&#64;seq</span> <span class="hl opt">= (</span> <span class="hl str">'agggtaaa|tttaccct'</span><span class="hl opt">,</span>
        <span class="hl str">'[cgt]gggtaaa|tttaccc[acg]'</span><span class="hl opt">,</span>
        <span class="hl str">'a[act]ggtaaa|tttacc[agt]t'</span><span class="hl opt">,</span>
        <span class="hl str">'ag[act]gtaaa|tttac[agt]ct'</span><span class="hl opt">,</span>
        <span class="hl str">'agg[act]taaa|ttta[agt]cct'</span><span class="hl opt">,</span>
        <span class="hl str">'aggg[acg]aaa|ttt[cgt]ccct'</span><span class="hl opt">,</span>
        <span class="hl str">'agggt[cgt]aa|tt[acg]accct'</span><span class="hl opt">,</span>
        <span class="hl str">'agggta[cgt]a|t[acg]taccct'</span><span class="hl opt">,</span>
        <span class="hl str">'agggtaa[cgt]|[acg]ttaccct'</span> <span class="hl opt">);</span>

<span class="hl kwc">my</span> <span class="hl kwb">&#64;cnt</span> <span class="hl opt">= (</span><span class="hl num">0</span><span class="hl opt">)</span> x <span class="hl kwb">&#64;seq</span><span class="hl opt">;</span>
<span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$k</span> <span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">..</span><span class="hl kwb">$#seq</span><span class="hl opt">) {</span>
  <span class="hl opt">++</span><span class="hl kwb">$cnt</span><span class="hl opt">[</span><span class="hl kwb">$k</span><span class="hl opt">]</span> <span class="hl kwa">while</span> <span class="hl kwb">$content</span><span class="hl opt">=~</span><span class="hl kwd">/$seq[$k]/gi</span><span class="hl opt">;</span>
  <span class="hl kwc">printf</span> <span class="hl str">&quot;$seq[$k] $cnt[$k]</span><span class="hl esc">\n</span><span class="hl str">&quot;</span>
<span class="hl opt">}</span>

<span class="hl kwc">my</span> <span class="hl kwb">%iub</span> <span class="hl opt">= (</span>         B <span class="hl opt">=&gt;</span> <span class="hl str">'(c|g|t)'</span><span class="hl opt">,</span>  D <span class="hl opt">=&gt;</span> <span class="hl str">'(a|g|t)'</span><span class="hl opt">,</span>
  H <span class="hl opt">=&gt;</span> <span class="hl str">'(a|c|t)'</span><span class="hl opt">,</span>   K <span class="hl opt">=&gt;</span> <span class="hl str">'(g|t)'</span><span class="hl opt">,</span>    M <span class="hl opt">=&gt;</span> <span class="hl str">'(a|c)'</span><span class="hl opt">,</span>
  N <span class="hl opt">=&gt;</span> <span class="hl str">'(a|c|g|t)'</span><span class="hl opt">,</span> R <span class="hl opt">=&gt;</span> <span class="hl str">'(a|g)'</span><span class="hl opt">,</span>    S <span class="hl opt">=&gt;</span> <span class="hl str">'(c|g)'</span><span class="hl opt">,</span>
  V <span class="hl opt">=&gt;</span> <span class="hl str">'(a|c|g)'</span><span class="hl opt">,</span>   W <span class="hl opt">=&gt;</span> <span class="hl str">'(a|t)'</span><span class="hl opt">,</span>    Y <span class="hl opt">=&gt;</span> <span class="hl str">'(c|t)'</span> <span class="hl opt">);</span>

<span class="hl slc"># using $&amp; and no submatch marginally improves the</span>
<span class="hl slc"># speed here, but mentioning $&amp; causes perl to </span>
<span class="hl slc"># define that value for the &#64;seq patterns too, which</span>
<span class="hl slc"># slows those down considerably. No change.</span>

<span class="hl kwc">my</span> <span class="hl kwb">$findiub</span> <span class="hl opt">=</span> <span class="hl str">'(['</span><span class="hl opt">.(</span><span class="hl kwc">join</span> <span class="hl str">''</span><span class="hl opt">,</span> <span class="hl kwc">keys</span> <span class="hl kwb">%iub</span><span class="hl opt">).</span><span class="hl str">'])'</span><span class="hl opt">;</span>

<span class="hl kwb">$content</span> <span class="hl opt">=~</span> <span class="hl kwd">s/$findiub/$iub{$1}/g</span><span class="hl opt">;</span>

<span class="hl kwc">printf</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">%d</span><span class="hl esc">\n</span><span class="hl str">%d</span><span class="hl esc">\n</span><span class="hl str">%d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">,</span> <span class="hl kwb">$l_file</span><span class="hl opt">,</span> <span class="hl kwb">$l_code</span><span class="hl opt">,</span> <span class="hl kwc">length</span> <span class="hl kwb">$content</span><span class="hl opt">;</span>
