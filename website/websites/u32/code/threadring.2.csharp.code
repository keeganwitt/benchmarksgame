<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com">   contributed by Isaac Gouy</span>
<span class="hl com">   modified by Konstantin Safonov</span>
<span class="hl com"> */</span>

<span class="hl kwa">using</span> System<span class="hl opt">;</span>
<span class="hl kwa">using</span> System<span class="hl opt">.</span>Diagnostics<span class="hl opt">;</span>
<span class="hl kwa">using</span> System<span class="hl opt">.</span>Linq<span class="hl opt">;</span>
<span class="hl kwa">using</span> System<span class="hl opt">.</span>Threading<span class="hl opt">;</span>

<span class="hl kwa">internal class</span> NamedThread <span class="hl opt">{</span>
    <span class="hl kwa">private readonly</span> <span class="hl kwb">int</span> name<span class="hl opt">;</span>
    <span class="hl kwa">private readonly</span> ManualResetEventSlim signal <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">ManualResetEventSlim</span><span class="hl opt">(</span><span class="hl kwa">false</span><span class="hl opt">);</span>
    <span class="hl kwa">private</span> <span class="hl kwb">int</span> token<span class="hl opt">;</span>

    <span class="hl kwa">internal</span> <span class="hl kwd">NamedThread</span><span class="hl opt">(</span> <span class="hl kwb">int</span> name <span class="hl opt">) {</span>
        <span class="hl kwa">this</span><span class="hl opt">.</span>name <span class="hl opt">=</span> name<span class="hl opt">;</span>
    <span class="hl opt">}</span>

    <span class="hl kwa">internal</span> NamedThread <span class="hl kwd">NextThread</span><span class="hl opt">() {</span>
        <span class="hl kwa">return</span> ThreadRing<span class="hl opt">.</span>threadRing<span class="hl opt">[</span> name <span class="hl opt">%</span> ThreadRing<span class="hl opt">.</span>numberOfThreads <span class="hl opt">];</span>
    <span class="hl opt">}</span>

    <span class="hl kwa">internal</span> <span class="hl kwb">void</span> <span class="hl kwd">Run</span><span class="hl opt">() {</span>
        <span class="hl kwa">while</span> <span class="hl opt">(</span> <span class="hl kwd">TokenNotDone</span><span class="hl opt">() )</span>
            <span class="hl kwd">NextThread</span><span class="hl opt">().</span><span class="hl kwd">TakeToken</span><span class="hl opt">(</span> token <span class="hl opt">-</span> <span class="hl num">1</span> <span class="hl opt">);</span>

        <span class="hl kwa">if</span> <span class="hl opt">(</span> token <span class="hl opt">==</span> <span class="hl num">0</span> <span class="hl opt">)</span> Console<span class="hl opt">.</span><span class="hl kwd">WriteLine</span><span class="hl opt">(</span> name <span class="hl opt">);</span>
        <span class="hl kwd">NextThread</span><span class="hl opt">().</span><span class="hl kwd">TakeToken</span><span class="hl opt">( -</span><span class="hl num">1</span> <span class="hl opt">);</span>
    <span class="hl opt">}</span>

    <span class="hl kwa">internal</span> <span class="hl kwb">void</span> <span class="hl kwd">TakeToken</span><span class="hl opt">(</span> <span class="hl kwb">int</span> x <span class="hl opt">) {</span>
        token <span class="hl opt">=</span> x<span class="hl opt">;</span>
        signal<span class="hl opt">.</span><span class="hl kwd">Set</span><span class="hl opt">();</span>
    <span class="hl opt">}</span>

    <span class="hl kwa">private</span> <span class="hl kwb">bool</span> <span class="hl kwd">TokenNotDone</span><span class="hl opt">() {</span>
        signal<span class="hl opt">.</span><span class="hl kwd">Wait</span><span class="hl opt">();</span>
        signal<span class="hl opt">.</span><span class="hl kwd">Reset</span><span class="hl opt">();</span>
        <span class="hl kwa">return</span> token <span class="hl opt">&gt;</span> <span class="hl num">0</span><span class="hl opt">;</span>
    <span class="hl opt">}</span>
<span class="hl opt">}</span>

<span class="hl kwa">public class</span> ThreadRing <span class="hl opt">{</span>
    <span class="hl kwa">internal</span> <span class="hl kwb">const int</span> numberOfThreads <span class="hl opt">=</span> <span class="hl num">503</span><span class="hl opt">;</span>
    <span class="hl kwa">internal static</span> NamedThread<span class="hl opt">[]</span> threadRing <span class="hl opt">=</span> <span class="hl kwa">new</span> NamedThread<span class="hl opt">[</span><span class="hl num">503</span><span class="hl opt">];</span>

    <span class="hl kwa">private static</span> <span class="hl kwb">void</span> <span class="hl kwd">Main</span><span class="hl opt">(</span> String<span class="hl opt">[]</span> args <span class="hl opt">) {</span>
        <span class="hl kwd">Main2</span><span class="hl opt">(</span> args <span class="hl opt">);</span>
    <span class="hl opt">}</span>

    <span class="hl kwa">public static</span> <span class="hl kwb">void</span> <span class="hl kwd">Main2</span><span class="hl opt">(</span> <span class="hl kwb">string</span><span class="hl opt">[]</span> args <span class="hl opt">) {</span>
        <span class="hl kwa">for</span> <span class="hl opt">(</span> var i <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> i <span class="hl opt">&lt;</span> numberOfThreads<span class="hl opt">;</span> i<span class="hl opt">++ )</span> threadRing<span class="hl opt">[</span> i <span class="hl opt">] =</span> <span class="hl kwa">new</span> <span class="hl kwd">NamedThread</span><span class="hl opt">(</span> i <span class="hl opt">+</span> <span class="hl num">1</span> <span class="hl opt">);</span>
        var thrs <span class="hl opt">=</span> threadRing<span class="hl opt">.</span><span class="hl kwd">Select</span><span class="hl opt">(</span> a <span class="hl opt">=&gt;</span> <span class="hl kwa">new</span> <span class="hl kwd">Thread</span><span class="hl opt">(</span> a<span class="hl opt">.</span>Run <span class="hl opt">) ).</span><span class="hl kwd">ToArray</span><span class="hl opt">();</span>
        <span class="hl kwa">foreach</span> <span class="hl opt">(</span> var thread <span class="hl kwa">in</span> thrs <span class="hl opt">)</span> thread<span class="hl opt">.</span><span class="hl kwd">Start</span><span class="hl opt">();</span> 
        var cnt <span class="hl opt">=</span> args<span class="hl opt">.</span>Length <span class="hl opt">&gt;</span> <span class="hl num">0</span> ? <span class="hl kwb">int</span><span class="hl opt">.</span><span class="hl kwd">Parse</span><span class="hl opt">(</span> args<span class="hl opt">[</span> <span class="hl num">0</span> <span class="hl opt">] ) :</span> <span class="hl num">50000000</span><span class="hl opt">;</span>
        threadRing<span class="hl opt">[</span> <span class="hl num">0</span> <span class="hl opt">].</span><span class="hl kwd">TakeToken</span><span class="hl opt">(</span> cnt <span class="hl opt">);</span>
        <span class="hl kwa">foreach</span> <span class="hl opt">(</span> var thread <span class="hl kwa">in</span> thrs <span class="hl opt">)</span> thread<span class="hl opt">.</span><span class="hl kwd">Join</span><span class="hl opt">();</span>
    <span class="hl opt">}</span>
<span class="hl opt">}</span>
