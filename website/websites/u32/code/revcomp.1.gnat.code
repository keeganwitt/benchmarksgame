<span class="hl slc">--</span>
<span class="hl slc">--  The Computer Language Benchmarks Game</span>
<span class="hl slc">--  http://benchmarksgame.alioth.debian.org/</span>
<span class="hl slc">--</span>
<span class="hl slc">-- Contributed by Pascal Obry on 2005/03/19</span>
<span class="hl slc">-- Optimized by Bill Findlay on 2005/04/04</span>

<span class="hl kwa">with</span> Ada<span class="hl opt">.</span>Text_IO<span class="hl opt">;</span>                <span class="hl kwa">use</span> Ada<span class="hl opt">.</span>Text_IO<span class="hl opt">;</span>
<span class="hl kwa">with</span> Ada<span class="hl opt">.</span>Unchecked_Deallocation<span class="hl opt">;</span>

<span class="hl kwa">procedure</span> Revcomp <span class="hl kwa">is</span>

   Complement <span class="hl opt">:</span> <span class="hl kwa">constant array</span> <span class="hl opt">(</span><span class="hl kwb">Character</span><span class="hl opt">)</span> <span class="hl kwa">of</span> <span class="hl kwb">Character</span> <span class="hl opt">:=</span>
                  <span class="hl opt">(</span><span class="hl str">'A'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'T'</span><span class="hl opt">,</span> <span class="hl str">'C'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'G'</span><span class="hl opt">,</span> <span class="hl str">'G'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'C'</span><span class="hl opt">,</span> <span class="hl str">'T'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'A'</span><span class="hl opt">,</span> <span class="hl str">'U'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'A'</span><span class="hl opt">,</span>
                   <span class="hl str">'M'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'K'</span><span class="hl opt">,</span> <span class="hl str">'R'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'Y'</span><span class="hl opt">,</span> <span class="hl str">'W'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'W'</span><span class="hl opt">,</span> <span class="hl str">'S'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'S'</span><span class="hl opt">,</span> <span class="hl str">'Y'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'R'</span><span class="hl opt">,</span>
                   <span class="hl str">'K'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'M'</span><span class="hl opt">,</span> <span class="hl str">'V'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'B'</span><span class="hl opt">,</span> <span class="hl str">'H'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'D'</span><span class="hl opt">,</span> <span class="hl str">'D'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'H'</span><span class="hl opt">,</span> <span class="hl str">'B'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'V'</span><span class="hl opt">,</span>
                   <span class="hl str">'N'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'N'</span><span class="hl opt">,</span>
                   <span class="hl str">'a'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'T'</span><span class="hl opt">,</span> <span class="hl str">'c'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'G'</span><span class="hl opt">,</span> <span class="hl str">'g'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'C'</span><span class="hl opt">,</span> <span class="hl str">'t'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'A'</span><span class="hl opt">,</span> <span class="hl str">'u'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'A'</span><span class="hl opt">,</span>
                   <span class="hl str">'m'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'K'</span><span class="hl opt">,</span> <span class="hl str">'r'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'Y'</span><span class="hl opt">,</span> <span class="hl str">'w'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'W'</span><span class="hl opt">,</span> <span class="hl str">'s'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'S'</span><span class="hl opt">,</span> <span class="hl str">'y'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'R'</span><span class="hl opt">,</span>
                   <span class="hl str">'k'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'M'</span><span class="hl opt">,</span> <span class="hl str">'v'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'B'</span><span class="hl opt">,</span> <span class="hl str">'h'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'D'</span><span class="hl opt">,</span> <span class="hl str">'d'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'H'</span><span class="hl opt">,</span> <span class="hl str">'b'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'V'</span><span class="hl opt">,</span>
                   <span class="hl str">'n'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'N'</span><span class="hl opt">,</span>
                   <span class="hl kwa">others</span> <span class="hl opt">=&gt;</span> <span class="hl str">'?'</span><span class="hl opt">);</span>

   Max_Length <span class="hl opt">:</span> <span class="hl kwa">constant</span> <span class="hl opt">:=</span> <span class="hl num">60</span><span class="hl opt">;</span>

   <span class="hl kwa">type</span> String_Access <span class="hl kwa">is access</span> <span class="hl kwb">String</span><span class="hl opt">;</span>

   <span class="hl kwa">procedure</span> Free <span class="hl kwa">is new</span> Ada<span class="hl opt">.</span>Unchecked_Deallocation <span class="hl opt">(</span><span class="hl kwb">String</span><span class="hl opt">,</span> String_Access<span class="hl opt">);</span>

   <span class="hl kwa">procedure</span> Get_Fasta <span class="hl opt">(</span>Seq <span class="hl opt">:</span> <span class="hl kwa">in out</span> String_Access<span class="hl opt">;</span> Length <span class="hl opt">:</span> <span class="hl kwa">out</span> <span class="hl kwb">Natural</span><span class="hl opt">)</span> <span class="hl kwa">is</span>
      Ptr  <span class="hl opt">:</span> String_Access<span class="hl opt">;</span>
      J<span class="hl opt">,</span> K <span class="hl opt">:</span> <span class="hl kwb">Natural</span> <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span>
      C    <span class="hl opt">:</span> <span class="hl kwb">Character</span><span class="hl opt">;</span>
      EOL  <span class="hl opt">:</span> <span class="hl kwb">Boolean</span><span class="hl opt">;</span>
   <span class="hl kwa">begin</span>
      Length <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span>

      <span class="hl kwa">loop</span>
         Look_Ahead <span class="hl opt">(</span>C<span class="hl opt">,</span> EOL<span class="hl opt">);</span>
         <span class="hl kwa">exit when</span> C <span class="hl opt">/=</span> <span class="hl str">'&gt;'</span> <span class="hl kwa">and</span> C <span class="hl opt">/=</span> <span class="hl str">';'</span> <span class="hl opt">;</span>
         Get_Line <span class="hl opt">(</span>Seq <span class="hl opt">(</span><span class="hl num">1</span> <span class="hl opt">..</span> Seq<span class="hl kwd">'Length</span><span class="hl opt">),</span> J<span class="hl opt">);</span>
         <span class="hl kwa">if</span> Seq <span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">) =</span> <span class="hl str">'&gt;'</span> <span class="hl kwa">then</span>
            Put_Line <span class="hl opt">(</span>Seq <span class="hl opt">(</span><span class="hl num">1</span> <span class="hl opt">..</span> J<span class="hl opt">));</span>
         <span class="hl kwa">end if</span><span class="hl opt">;</span>
      <span class="hl kwa">end loop</span><span class="hl opt">;</span>

      <span class="hl kwa">loop</span>
         <span class="hl kwa">if</span> Length <span class="hl opt">+</span> Max_Length <span class="hl opt">&gt;</span> Seq<span class="hl kwd">'Length</span> <span class="hl kwa">then</span>
            Ptr <span class="hl opt">:=</span> Seq<span class="hl opt">;</span>
            Seq <span class="hl opt">:=</span> <span class="hl kwa">new</span> <span class="hl kwb">String</span> <span class="hl opt">(</span><span class="hl num">1</span> <span class="hl opt">..</span> <span class="hl num">2</span> <span class="hl opt">*</span> Seq<span class="hl kwd">'Length</span><span class="hl opt">);</span>
            Seq <span class="hl opt">(</span><span class="hl num">1</span> <span class="hl opt">..</span> Length<span class="hl opt">) :=</span> Ptr <span class="hl opt">(</span><span class="hl num">1</span> <span class="hl opt">..</span> Length<span class="hl opt">);</span>
            Free <span class="hl opt">(</span>Ptr<span class="hl opt">);</span>
         <span class="hl kwa">end if</span><span class="hl opt">;</span>

         Get_Line <span class="hl opt">(</span>Seq <span class="hl opt">(</span>Length <span class="hl opt">+</span> <span class="hl num">1</span> <span class="hl opt">..</span> Length <span class="hl opt">+</span> Max_Length<span class="hl opt">),</span> J<span class="hl opt">);</span>
         K <span class="hl opt">:=</span> J <span class="hl opt">-</span> Length<span class="hl opt">;</span>
         Length <span class="hl opt">:=</span> J<span class="hl opt">;</span>

         <span class="hl kwa">if</span> K <span class="hl opt">=</span> Max_Length <span class="hl kwa">then</span>
            Skip_Line<span class="hl opt">;</span>
         <span class="hl kwa">end if</span><span class="hl opt">;</span>

         Look_Ahead <span class="hl opt">(</span>C<span class="hl opt">,</span> EOL<span class="hl opt">);</span>

         <span class="hl kwa">if</span> K <span class="hl opt">&lt;</span> Max_Length <span class="hl kwa">or else</span> C <span class="hl opt">=</span> <span class="hl str">'&gt;'</span> <span class="hl kwa">or else</span> C <span class="hl opt">=</span> <span class="hl str">';'</span> <span class="hl kwa">then</span>
            <span class="hl kwa">return</span><span class="hl opt">;</span>
         <span class="hl kwa">end if</span><span class="hl opt">;</span>
      <span class="hl kwa">end loop</span><span class="hl opt">;</span>
   <span class="hl kwa">exception</span>
      <span class="hl kwa">when</span> End_Error <span class="hl opt">=&gt;</span>
         <span class="hl kwa">return</span><span class="hl opt">;</span>
   <span class="hl kwa">end</span> Get_Fasta<span class="hl opt">;</span>

   <span class="hl kwa">procedure</span> Reverse_Fasta <span class="hl opt">(</span>Fasta <span class="hl opt">:</span> <span class="hl kwa">in out</span> <span class="hl kwb">String</span><span class="hl opt">)</span> <span class="hl kwa">is</span>
      C    <span class="hl opt">:</span> <span class="hl kwb">Character</span><span class="hl opt">;</span>
      L<span class="hl opt">,</span> R <span class="hl opt">:</span> <span class="hl kwb">Natural</span><span class="hl opt">;</span>
   <span class="hl kwa">begin</span>
      <span class="hl kwa">for</span> I <span class="hl kwa">in</span> <span class="hl num">0</span> <span class="hl opt">..</span> Fasta<span class="hl kwd">'Length</span> <span class="hl kwa">loop</span>
         L <span class="hl opt">:=</span> Fasta<span class="hl kwd">'First</span> <span class="hl opt">+</span> I<span class="hl opt">;</span>
         R <span class="hl opt">:=</span> Fasta<span class="hl kwd">'Last</span> <span class="hl opt">-</span> I<span class="hl opt">;</span>
         <span class="hl kwa">exit when</span> L <span class="hl opt">&gt;</span> R<span class="hl opt">;</span>
         C <span class="hl opt">:=</span> Fasta <span class="hl opt">(</span>L<span class="hl opt">);</span>
         Fasta <span class="hl opt">(</span>L<span class="hl opt">) :=</span> Complement <span class="hl opt">(</span>Fasta <span class="hl opt">(</span>R<span class="hl opt">));</span>
         Fasta <span class="hl opt">(</span>R<span class="hl opt">) :=</span> Complement <span class="hl opt">(</span>C<span class="hl opt">);</span>
      <span class="hl kwa">end loop</span><span class="hl opt">;</span>
   <span class="hl kwa">end</span> Reverse_Fasta<span class="hl opt">;</span>

   <span class="hl kwa">procedure</span> Put_Reversed_Fasta <span class="hl opt">(</span>Fasta <span class="hl opt">:</span> <span class="hl kwa">in out</span> <span class="hl kwb">String</span><span class="hl opt">)</span> <span class="hl kwa">is</span>
      L <span class="hl opt">:</span> <span class="hl kwb">Natural</span> <span class="hl opt">:=</span> Fasta<span class="hl kwd">'Last</span><span class="hl opt">;</span>
   <span class="hl kwa">begin</span>
      <span class="hl kwa">while</span> L <span class="hl opt">&gt;=</span> Max_Length <span class="hl kwa">loop</span>
         Reverse_Fasta <span class="hl opt">(</span>Fasta <span class="hl opt">(</span>L <span class="hl opt">-</span> Max_Length <span class="hl opt">+</span> <span class="hl num">1</span> <span class="hl opt">..</span> L<span class="hl opt">));</span>
         Put_Line <span class="hl opt">(</span>Fasta <span class="hl opt">(</span>L <span class="hl opt">-</span> Max_Length <span class="hl opt">+</span> <span class="hl num">1</span> <span class="hl opt">..</span> L<span class="hl opt">));</span>
         L <span class="hl opt">:=</span> L <span class="hl opt">-</span> Max_Length<span class="hl opt">;</span>
      <span class="hl kwa">end loop</span><span class="hl opt">;</span>
      <span class="hl kwa">if</span> L <span class="hl opt">&gt;</span> <span class="hl num">0</span> <span class="hl kwa">then</span>
         Reverse_Fasta <span class="hl opt">(</span>Fasta <span class="hl opt">(</span><span class="hl num">1</span> <span class="hl opt">..</span> L<span class="hl opt">));</span>
         Put_Line <span class="hl opt">(</span>Fasta <span class="hl opt">(</span><span class="hl num">1</span> <span class="hl opt">..</span> L<span class="hl opt">));</span>
      <span class="hl kwa">end if</span><span class="hl opt">;</span>
   <span class="hl kwa">end</span> Put_Reversed_Fasta<span class="hl opt">;</span>

   Seq    <span class="hl opt">:</span> String_Access <span class="hl opt">:=</span> <span class="hl kwa">new</span> <span class="hl kwb">String</span> <span class="hl opt">(</span><span class="hl num">1</span> <span class="hl opt">..</span> <span class="hl num">1</span>_024<span class="hl opt">);</span>
   Length <span class="hl opt">:</span> <span class="hl kwb">Natural</span><span class="hl opt">;</span>

<span class="hl kwa">begin</span>
   <span class="hl kwa">loop</span>
      Get_Fasta <span class="hl opt">(</span>Seq<span class="hl opt">,</span> Length<span class="hl opt">);</span>
      <span class="hl kwa">exit when</span> Length <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
      Put_Reversed_Fasta <span class="hl opt">(</span>Seq <span class="hl opt">(</span><span class="hl num">1</span> <span class="hl opt">..</span> Length<span class="hl opt">));</span>
   <span class="hl kwa">end loop</span><span class="hl opt">;</span>
<span class="hl kwa">end</span> Revcomp<span class="hl opt">;</span>
