<span class="hl slc">% The Computer Language Benchmarks Game  </span>
<span class="hl slc">% http://benchmarksgame.alioth.debian.org/    </span>
<span class="hl slc">% contributed by Isaac Gouy</span>

<span class="hl kwa">functor</span>
<span class="hl kwa">import</span> Application Open

<span class="hl kwa">define</span>
   <span class="hl slc">% lists convenient for declaring data</span>

   RawALU <span class="hl opt">=</span> 
      <span class="hl str">&quot;GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG&quot;</span> <span class="hl opt">#</span>
      <span class="hl str">&quot;GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA&quot;</span> <span class="hl opt">#</span>
      <span class="hl str">&quot;CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT&quot;</span> <span class="hl opt">#</span>
      <span class="hl str">&quot;ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA&quot;</span> <span class="hl opt">#</span>
      <span class="hl str">&quot;GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG&quot;</span> <span class="hl opt">#</span>
      <span class="hl str">&quot;AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC&quot;</span> <span class="hl opt">#</span>
      <span class="hl str">&quot;AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA&quot;</span>

   RawIUB <span class="hl opt">= [</span>
      <span class="hl str">&quot;a&quot;</span><span class="hl opt">#</span><span class="hl num">0.27</span> <span class="hl str">&quot;c&quot;</span><span class="hl opt">#</span><span class="hl num">0.12</span> <span class="hl str">&quot;g&quot;</span><span class="hl opt">#</span><span class="hl num">0.12</span> <span class="hl str">&quot;t&quot;</span><span class="hl opt">#</span><span class="hl num">0.27</span>
      <span class="hl str">&quot;B&quot;</span><span class="hl opt">#</span><span class="hl num">0.02</span> <span class="hl str">&quot;D&quot;</span><span class="hl opt">#</span><span class="hl num">0.02</span> <span class="hl str">&quot;H&quot;</span><span class="hl opt">#</span><span class="hl num">0.02</span> <span class="hl str">&quot;K&quot;</span><span class="hl opt">#</span><span class="hl num">0.02</span>
      <span class="hl str">&quot;M&quot;</span><span class="hl opt">#</span><span class="hl num">0.02</span> <span class="hl str">&quot;N&quot;</span><span class="hl opt">#</span><span class="hl num">0.02</span> <span class="hl str">&quot;R&quot;</span><span class="hl opt">#</span><span class="hl num">0.02</span> <span class="hl str">&quot;S&quot;</span><span class="hl opt">#</span><span class="hl num">0.02</span>
      <span class="hl str">&quot;V&quot;</span><span class="hl opt">#</span><span class="hl num">0.02</span> <span class="hl str">&quot;W&quot;</span><span class="hl opt">#</span><span class="hl num">0.02</span> <span class="hl str">&quot;Y&quot;</span><span class="hl opt">#</span><span class="hl num">0.02</span> <span class="hl opt">]</span>

   RawHomoSapiens <span class="hl opt">= [</span>
      <span class="hl str">&quot;a&quot;</span><span class="hl opt">#</span> <span class="hl num">0.3029549426680</span>
      <span class="hl str">&quot;c&quot;</span><span class="hl opt">#</span> <span class="hl num">0.1979883004921</span>
      <span class="hl str">&quot;g&quot;</span><span class="hl opt">#</span> <span class="hl num">0.1975473066391</span>
      <span class="hl str">&quot;t&quot;</span><span class="hl opt">#</span> <span class="hl num">0.3015094502008</span> <span class="hl opt">]</span>


   <span class="hl slc">% arrays faster for indexed selection</span>

   <span class="hl kwa">fun</span> <span class="hl opt">{</span>MakeStringArray L<span class="hl opt">}</span> 
      A <span class="hl opt">= {</span>NewArray <span class="hl num">1</span> <span class="hl opt">{</span>Length L<span class="hl opt">}</span> nil<span class="hl opt">}</span>
   <span class="hl kwa">in</span>
     <span class="hl opt">{</span>List<span class="hl opt">.</span>forAllInd L 
        <span class="hl kwa">proc</span><span class="hl opt">{</span>$ I C<span class="hl opt">}</span> A<span class="hl opt">.</span>I <span class="hl opt">:= [</span>C<span class="hl opt">]</span> <span class="hl kwa">end</span><span class="hl opt">}</span>
     A
   <span class="hl kwa">end</span>

   <span class="hl kwa">fun</span> <span class="hl opt">{</span>MakeCumulative L<span class="hl opt">}</span>
      N <span class="hl opt">= {</span>Length L<span class="hl opt">}</span>
      A <span class="hl opt">= {</span>NewArray <span class="hl num">1</span> N <span class="hl num">0</span><span class="hl opt">}</span>
      Sum <span class="hl opt">= {</span>NewCell <span class="hl num">0.0</span><span class="hl opt">}</span>

      <span class="hl kwa">proc</span> <span class="hl opt">{</span>Acc I Code<span class="hl opt">#</span>Percent<span class="hl opt">}</span>
         A<span class="hl opt">.</span>I <span class="hl opt">:=</span> Code <span class="hl opt"># (</span>Percent <span class="hl opt">+ &#64;</span>Sum<span class="hl opt">)</span>
         Sum <span class="hl opt">:= &#64;</span>Sum <span class="hl opt">+</span> Percent
      <span class="hl kwa">end</span>
   <span class="hl kwa">in</span> 
      <span class="hl opt">{</span>List<span class="hl opt">.</span>forAllInd L Acc<span class="hl opt">}</span>
      A
   <span class="hl kwa">end</span>

   ALU <span class="hl opt">= {</span>MakeStringArray <span class="hl opt">{</span>VirtualString<span class="hl opt">.</span>toString RawALU<span class="hl opt">} }</span>
   IUB <span class="hl opt">= {</span>MakeCumulative RawIUB<span class="hl opt">}</span>
   HomoSapiens <span class="hl opt">= {</span>MakeCumulative RawHomoSapiens<span class="hl opt">}</span>


   <span class="hl slc">% random selection</span>

   <span class="hl kwa">fun</span> <span class="hl opt">{</span>PseudoRandomFunction Max<span class="hl opt">}</span>
      IM <span class="hl opt">=</span> <span class="hl num">139968</span> IMF <span class="hl opt">=</span> <span class="hl num">139968.0</span>
      IA <span class="hl opt">=</span> <span class="hl num">3877</span>
      IC <span class="hl opt">=</span> <span class="hl num">29573</span>
      Seed <span class="hl opt">= {</span>NewCell <span class="hl num">42</span><span class="hl opt">}</span> 
   <span class="hl kwa">in</span>
      <span class="hl kwa">fun</span> <span class="hl opt">{</span>$<span class="hl opt">}</span> 
         Seed <span class="hl opt">:= (&#64;</span>Seed <span class="hl opt">*</span> IA <span class="hl opt">+</span> IC<span class="hl opt">)</span> <span class="hl kwa">mod</span> IM
         Max <span class="hl opt">* {</span>IntToFloat <span class="hl opt">&#64;</span>Seed<span class="hl opt">} /</span> IMF
      <span class="hl kwa">end</span>
   <span class="hl kwa">end</span>

   RandomNumber <span class="hl opt">= {</span>PseudoRandomFunction <span class="hl num">1.0</span><span class="hl opt">}</span>


   <span class="hl kwa">fun</span> <span class="hl opt">{</span>SelectRandom A<span class="hl opt">}</span>      
      <span class="hl kwa">fun</span> <span class="hl opt">{</span>Select R A I N<span class="hl opt">}</span>   <span class="hl slc">% simple sequential search</span>
         Code<span class="hl opt">#</span>Percent <span class="hl opt">=</span> A<span class="hl opt">.</span>I
      <span class="hl kwa">in</span> 
         <span class="hl kwa">if</span> R <span class="hl opt">=&lt;</span> Percent <span class="hl kwa">then</span> Code <span class="hl kwa">else</span> <span class="hl opt">{</span>Select R A I<span class="hl opt">+</span><span class="hl num">1</span> N<span class="hl opt">}</span> <span class="hl kwa">end</span>
      <span class="hl kwa">end</span>      
   <span class="hl kwa">in</span> 
      <span class="hl opt">{</span>Select <span class="hl opt">{</span>RandomNumber<span class="hl opt">}</span> A <span class="hl opt">{</span>Array<span class="hl opt">.</span>low A<span class="hl opt">} {</span>Array<span class="hl opt">.</span>high A<span class="hl opt">}}</span>
   <span class="hl kwa">end</span>   


   <span class="hl slc">% based on Paul Hsieh's C program</span>
   <span class="hl kwa">proc</span> <span class="hl opt">{</span>MakeRandomFasta Id Desc A N F<span class="hl opt">}</span>
      <span class="hl kwa">fun</span> <span class="hl opt">{</span>Line I L<span class="hl opt">}</span>
         <span class="hl kwa">if</span> I <span class="hl opt">&gt;</span> <span class="hl num">0</span> <span class="hl kwa">then</span> <span class="hl opt">{</span>Line I<span class="hl opt">-</span><span class="hl num">1</span> L<span class="hl opt">#{</span>SelectRandom A<span class="hl opt">} }</span> <span class="hl kwa">else</span> L <span class="hl kwa">end</span>
      <span class="hl kwa">end</span>
   <span class="hl kwa">in</span>
      <span class="hl opt">{</span>F  <span class="hl kwd">write</span><span class="hl opt">(</span>vs<span class="hl opt">:</span> <span class="hl str">&quot;&gt;&quot;</span> <span class="hl opt">#</span> Id <span class="hl opt">#</span> <span class="hl str">&quot; &quot;</span> <span class="hl opt">#</span> Desc <span class="hl opt">#</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">)}</span>

      <span class="hl kwa">for</span> I <span class="hl kwa">in</span> N<span class="hl opt">;</span> I <span class="hl opt">&gt;</span> <span class="hl num">0</span><span class="hl opt">;</span> I<span class="hl opt">-</span>LineLength <span class="hl kwa">do</span>
         M <span class="hl opt">=</span> <span class="hl kwa">if</span> I <span class="hl opt">&lt;</span> LineLength <span class="hl kwa">then</span> I <span class="hl kwa">else</span> LineLength <span class="hl kwa">end</span>
      <span class="hl kwa">in</span>
         <span class="hl opt">{</span>F  <span class="hl kwd">write</span><span class="hl opt">(</span>vs<span class="hl opt">: {</span>Line M <span class="hl str">&quot;&quot;</span><span class="hl opt">} #</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">)}</span>
      <span class="hl kwa">end</span>
   <span class="hl kwa">end</span>


   <span class="hl slc">% repeat selection</span>

   <span class="hl kwa">proc</span> <span class="hl opt">{</span>MakeRepeatFasta Id Desc A N F<span class="hl opt">}</span>
      Start <span class="hl opt">= {</span>NewCell <span class="hl num">1</span><span class="hl opt">}</span>
      Last <span class="hl opt">= {</span>Array<span class="hl opt">.</span>high A<span class="hl opt">}</span>

      <span class="hl kwa">fun</span> <span class="hl opt">{</span>Line I N L<span class="hl opt">}</span>
         <span class="hl kwa">if</span> I <span class="hl opt">=&lt;</span> N <span class="hl kwa">then</span> <span class="hl opt">{</span>Line I<span class="hl opt">+</span><span class="hl num">1</span> N L<span class="hl opt">#</span>A<span class="hl opt">.</span>I <span class="hl opt">}</span> <span class="hl kwa">else</span> L <span class="hl kwa">end</span>
      <span class="hl kwa">end</span>
   <span class="hl kwa">in</span>
      <span class="hl opt">{</span>F <span class="hl kwd">write</span><span class="hl opt">(</span>vs<span class="hl opt">:</span> <span class="hl str">&quot;&gt;&quot;</span> <span class="hl opt">#</span> Id <span class="hl opt">#</span> <span class="hl str">&quot; &quot;</span> <span class="hl opt">#</span> Desc <span class="hl opt">#</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">)}</span>

      <span class="hl kwa">for</span> I <span class="hl kwa">in</span> N<span class="hl opt">;</span> I <span class="hl opt">&gt;</span> <span class="hl num">0</span><span class="hl opt">;</span> I<span class="hl opt">-</span>LineLength <span class="hl kwa">do</span>
         M <span class="hl opt">=</span> <span class="hl kwa">if</span> I <span class="hl opt">&lt;</span> LineLength <span class="hl kwa">then</span> I <span class="hl kwa">else</span> LineLength <span class="hl kwa">end</span>
         K <span class="hl opt">= &#64;</span>Start <span class="hl opt">+</span> M <span class="hl opt">-</span> <span class="hl num">1</span>
         Stop <span class="hl opt">=</span> <span class="hl kwa">if</span> K <span class="hl opt">&gt;</span> Last <span class="hl kwa">then</span> K<span class="hl opt">-</span>Last <span class="hl kwa">else</span> K <span class="hl kwa">end</span>
         L
      <span class="hl kwa">in</span>
         <span class="hl kwa">if</span> K <span class="hl opt">&gt;</span> Last <span class="hl kwa">then</span>
            L <span class="hl opt">= {</span>Line <span class="hl opt">&#64;</span>Start Last nil<span class="hl opt">}</span>
            Start <span class="hl opt">:=</span> <span class="hl num">1</span>
         <span class="hl kwa">else</span>
            L <span class="hl opt">=</span> nil          
         <span class="hl kwa">end</span>
         <span class="hl opt">{</span>F <span class="hl kwd">write</span><span class="hl opt">(</span>vs<span class="hl opt">: {</span>Line <span class="hl opt">&#64;</span>Start Stop L<span class="hl opt">} #</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">) }</span>
         Start <span class="hl opt">:=</span> Stop <span class="hl opt">+</span> <span class="hl num">1</span> 
      <span class="hl kwa">end</span>
   <span class="hl kwa">end</span>


   LineLength <span class="hl opt">=</span> <span class="hl num">60</span>

   <span class="hl opt">[</span>Arg<span class="hl opt">] = {</span>Application<span class="hl opt">.</span>getArgs plain<span class="hl opt">}</span>
   N <span class="hl opt">= {</span>String<span class="hl opt">.</span>toInt Arg<span class="hl opt">}</span>
   StdOut <span class="hl opt">= {</span>New Open<span class="hl opt">.</span>file <span class="hl kwd">init</span><span class="hl opt">(</span>name<span class="hl opt">:</span>stdout<span class="hl opt">)}</span>

<span class="hl kwa">in</span>   
   <span class="hl opt">{</span>MakeRepeatFasta <span class="hl str">&quot;ONE&quot;</span> <span class="hl str">&quot;Homo sapiens alu&quot;</span> ALU N<span class="hl opt">*</span><span class="hl num">2</span> StdOut<span class="hl opt">}</span>
   <span class="hl opt">{</span>MakeRandomFasta <span class="hl str">&quot;TWO&quot;</span> <span class="hl str">&quot;IUB ambiguity codes&quot;</span> IUB N<span class="hl opt">*</span><span class="hl num">3</span> StdOut<span class="hl opt">}</span> 
   <span class="hl opt">{</span>MakeRandomFasta <span class="hl str">&quot;THREE&quot;</span> <span class="hl str">&quot;Homo sapiens frequency&quot;</span> HomoSapiens N<span class="hl opt">*</span><span class="hl num">5</span> StdOut<span class="hl opt">}</span> 
   <span class="hl opt">{</span>Application<span class="hl opt">.</span>exit <span class="hl num">0</span><span class="hl opt">}</span>   
<span class="hl kwa">end</span>
