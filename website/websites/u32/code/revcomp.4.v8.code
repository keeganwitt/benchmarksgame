<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">    http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"></span>
<span class="hl com">    contributed by Joe Farro</span>
<span class="hl com">    parts taken from solution contributed by </span>
<span class="hl com">    Jos Hirth which was modified by 10iii</span>
<span class="hl com">*/</span>

<span class="hl kwa">var</span> comp <span class="hl opt">= [];</span>
comp<span class="hl kwc">[65]</span> <span class="hl opt">=</span> <span class="hl str">'T'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[66]</span> <span class="hl opt">=</span> <span class="hl str">'V'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[67]</span> <span class="hl opt">=</span> <span class="hl str">'G'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[68]</span> <span class="hl opt">=</span> <span class="hl str">'H'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[71]</span> <span class="hl opt">=</span> <span class="hl str">'C'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[72]</span> <span class="hl opt">=</span> <span class="hl str">'D'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[75]</span> <span class="hl opt">=</span> <span class="hl str">'M'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[77]</span> <span class="hl opt">=</span> <span class="hl str">'K'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[78]</span> <span class="hl opt">=</span> <span class="hl str">'N'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[82]</span> <span class="hl opt">=</span> <span class="hl str">'Y'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[83]</span> <span class="hl opt">=</span> <span class="hl str">'S'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[84]</span> <span class="hl opt">=</span> <span class="hl str">'A'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[85]</span> <span class="hl opt">=</span> <span class="hl str">'A'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[86]</span> <span class="hl opt">=</span> <span class="hl str">'B'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[87]</span> <span class="hl opt">=</span> <span class="hl str">'W'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[89]</span> <span class="hl opt">=</span> <span class="hl str">'R'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[97]</span> <span class="hl opt">=</span> <span class="hl str">'T'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[98]</span> <span class="hl opt">=</span> <span class="hl str">'V'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[99]</span> <span class="hl opt">=</span> <span class="hl str">'G'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[100]</span> <span class="hl opt">=</span> <span class="hl str">'H'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[103]</span> <span class="hl opt">=</span> <span class="hl str">'C'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[104]</span> <span class="hl opt">=</span> <span class="hl str">'D'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[107]</span> <span class="hl opt">=</span> <span class="hl str">'M'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[109]</span> <span class="hl opt">=</span> <span class="hl str">'K'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[110]</span> <span class="hl opt">=</span> <span class="hl str">'N'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[114]</span> <span class="hl opt">=</span> <span class="hl str">'Y'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[115]</span> <span class="hl opt">=</span> <span class="hl str">'S'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[116]</span> <span class="hl opt">=</span> <span class="hl str">'A'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[117]</span> <span class="hl opt">=</span> <span class="hl str">'A'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[118]</span> <span class="hl opt">=</span> <span class="hl str">'B'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[119]</span> <span class="hl opt">=</span> <span class="hl str">'W'</span><span class="hl opt">;</span>
comp<span class="hl kwc">[121]</span> <span class="hl opt">=</span> <span class="hl str">'R'</span><span class="hl opt">;</span>

<span class="hl kwa">var</span> LA_LEN <span class="hl opt">=</span> <span class="hl num">995</span><span class="hl opt">;</span>

<span class="hl kwa">function</span> <span class="hl kwd">LinkedArray</span><span class="hl opt">(</span>prev<span class="hl opt">) {</span>
    <span class="hl kwa">this</span><span class="hl opt">.</span>prev <span class="hl opt">=</span> prev<span class="hl opt">;</span>
    <span class="hl kwa">this</span><span class="hl opt">.</span>next <span class="hl opt">=</span> undefined<span class="hl opt">;</span>
    <span class="hl kwa">this</span><span class="hl opt">.</span>pos <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
    <span class="hl kwa">this</span><span class="hl opt">.</span>data <span class="hl opt">= [];</span>
<span class="hl opt">}</span>

<span class="hl kwa">function</span> <span class="hl kwd">reverse</span><span class="hl opt">(</span>la<span class="hl opt">) {</span>

    <span class="hl kwa">var</span> comps <span class="hl opt">=</span> comp<span class="hl opt">,</span>
        i<span class="hl opt">,</span>
        lines <span class="hl opt">=</span> la<span class="hl opt">.</span>data<span class="hl opt">,</span>
        lnIdx <span class="hl opt">=</span> la<span class="hl opt">.</span>pos <span class="hl opt">-</span> <span class="hl num">1</span><span class="hl opt">,</span>
        line <span class="hl opt">=</span> lines<span class="hl kwc">[lnIdx]</span><span class="hl opt">,</span>
        c <span class="hl opt">=</span> <span class="hl num">1</span><span class="hl opt">,</span>
        buff <span class="hl opt">= [</span><span class="hl str">''</span><span class="hl opt">],</span>
        buffIdx <span class="hl opt">=</span> <span class="hl num">1</span><span class="hl opt">,</span>
        rev <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">Array</span><span class="hl opt">(</span><span class="hl num">61</span><span class="hl opt">);</span>

    rev<span class="hl kwc">[0]</span> <span class="hl opt">=</span> <span class="hl str">''</span><span class="hl opt">;</span>

    <span class="hl kwa">for</span> <span class="hl opt">(;</span> <span class="hl kwa">true</span><span class="hl opt">; ) {</span>

        <span class="hl kwa">for</span> <span class="hl opt">(</span>i <span class="hl opt">=</span> line<span class="hl opt">.</span>length<span class="hl opt">;</span> i<span class="hl opt">-- &gt;</span> <span class="hl num">0</span><span class="hl opt">; ++</span>c<span class="hl opt">) {</span>
            rev<span class="hl kwc">[c]</span> <span class="hl opt">=</span> comps<span class="hl opt">[</span>line<span class="hl opt">.</span><span class="hl kwd">charCodeAt</span><span class="hl opt">(</span>i<span class="hl opt">)];</span>
            <span class="hl kwa">if</span> <span class="hl opt">(</span>c <span class="hl opt">===</span> <span class="hl num">60</span><span class="hl opt">) {</span>
                buff<span class="hl kwc">[buffIdx]</span> <span class="hl opt">=</span> rev<span class="hl opt">.</span><span class="hl kwd">join</span><span class="hl opt">(</span><span class="hl str">''</span><span class="hl opt">);</span>
                buffIdx<span class="hl opt">++;</span>
                c <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
            <span class="hl opt">}</span>
        <span class="hl opt">}</span>

        lnIdx<span class="hl opt">--;</span>
        line <span class="hl opt">=</span> lines<span class="hl kwc">[lnIdx]</span><span class="hl opt">;</span>

        <span class="hl kwa">if</span> <span class="hl opt">(</span>line <span class="hl opt">!==</span> undefined<span class="hl opt">) {</span>
            <span class="hl kwa">continue</span><span class="hl opt">;</span>
        <span class="hl opt">}</span>

        la <span class="hl opt">=</span> la<span class="hl opt">.</span>prev<span class="hl opt">;</span>
        <span class="hl kwa">if</span> <span class="hl opt">(</span>la <span class="hl opt">===</span> undefined<span class="hl opt">) {</span>
            <span class="hl kwa">if</span> <span class="hl opt">(</span>c <span class="hl opt">&gt;</span> <span class="hl num">1</span><span class="hl opt">) {</span>
                buff<span class="hl kwc">[buffIdx]</span> <span class="hl opt">=</span> rev<span class="hl opt">.</span><span class="hl kwd">join</span><span class="hl opt">(</span><span class="hl str">''</span><span class="hl opt">).</span><span class="hl kwd">substr</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">,</span> c<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">);</span>
                buffIdx<span class="hl opt">++;</span>
            <span class="hl opt">}</span>
            buff<span class="hl kwc">[buffIdx]</span> <span class="hl opt">=</span> <span class="hl str">''</span><span class="hl opt">;</span>
            buffIdx<span class="hl opt">++;</span>
            <span class="hl kwa">if</span> <span class="hl opt">(</span>buffIdx <span class="hl opt">&lt;</span> buff<span class="hl opt">.</span>length<span class="hl opt">) {</span>
                <span class="hl kwd">write</span><span class="hl opt">(</span>buff<span class="hl opt">.</span><span class="hl kwd">slice</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">,</span>buffIdx<span class="hl opt">).</span><span class="hl kwd">join</span><span class="hl opt">(</span><span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">));</span>
            <span class="hl opt">}</span> <span class="hl kwa">else</span> <span class="hl opt">{</span>
                <span class="hl kwd">write</span><span class="hl opt">(</span>buff<span class="hl opt">.</span><span class="hl kwd">join</span><span class="hl opt">(</span><span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">));</span>
            <span class="hl opt">}</span>
            <span class="hl kwa">return</span><span class="hl opt">;</span>
        <span class="hl opt">}</span>

        lines <span class="hl opt">=</span> la<span class="hl opt">.</span>data<span class="hl opt">;</span>
        lnIdx <span class="hl opt">=</span> la<span class="hl opt">.</span>pos<span class="hl opt">;</span>
        lnIdx<span class="hl opt">--;</span>
        line <span class="hl opt">=</span> lines<span class="hl kwc">[lnIdx]</span><span class="hl opt">;</span>
        <span class="hl kwd">write</span><span class="hl opt">(</span>buff<span class="hl opt">.</span><span class="hl kwd">join</span><span class="hl opt">(</span><span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">));</span>
        buffIdx <span class="hl opt">=</span> <span class="hl num">1</span><span class="hl opt">;</span>
    <span class="hl opt">}</span>
<span class="hl opt">}</span>

<span class="hl kwa">var</span> line<span class="hl opt">,</span>
    headLA <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">LinkedArray</span><span class="hl opt">(),</span>
    la <span class="hl opt">=</span> headLA<span class="hl opt">,</span>
    lnIdx <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">,</span>
    lines <span class="hl opt">=</span> la<span class="hl opt">.</span>data<span class="hl opt">;</span>

<span class="hl kwd">write</span><span class="hl opt">(</span><span class="hl kwd">readline</span><span class="hl opt">());</span>

<span class="hl kwa">for</span> <span class="hl opt">(</span>line <span class="hl opt">=</span> <span class="hl kwd">readline</span><span class="hl opt">();</span> line <span class="hl opt">!==</span> undefined<span class="hl opt">;</span> line <span class="hl opt">=</span> <span class="hl kwd">readline</span><span class="hl opt">()) {</span>
    <span class="hl kwa">if</span> <span class="hl opt">(</span>line<span class="hl kwc">[0]</span> <span class="hl opt">!==</span> <span class="hl str">'&gt;'</span><span class="hl opt">) {</span>

        <span class="hl kwa">if</span> <span class="hl opt">(</span>lnIdx <span class="hl opt">===</span> LA_LEN<span class="hl opt">) {</span>

            la<span class="hl opt">.</span>pos <span class="hl opt">=</span> LA_LEN<span class="hl opt">;</span>

            <span class="hl kwa">if</span> <span class="hl opt">(</span>la<span class="hl opt">.</span>next <span class="hl opt">===</span> undefined<span class="hl opt">) {</span>
                la <span class="hl opt">=</span> la<span class="hl opt">.</span>next <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">LinkedArray</span><span class="hl opt">(</span>la<span class="hl opt">);</span>
            <span class="hl opt">}</span> <span class="hl kwa">else</span> <span class="hl opt">{</span>
                la <span class="hl opt">=</span> la<span class="hl opt">.</span>next<span class="hl opt">;</span>
            <span class="hl opt">}</span>
            lines <span class="hl opt">=</span> la<span class="hl opt">.</span>data<span class="hl opt">;</span>
            lines<span class="hl kwc">[0]</span> <span class="hl opt">=</span> line<span class="hl opt">;</span>
            lnIdx <span class="hl opt">=</span> la<span class="hl opt">.</span>pos <span class="hl opt">=</span> <span class="hl num">1</span><span class="hl opt">;</span>
        <span class="hl opt">}</span> <span class="hl kwa">else</span> <span class="hl opt">{</span>
            lines<span class="hl kwc">[lnIdx]</span> <span class="hl opt">=</span> line<span class="hl opt">;</span>
            lnIdx<span class="hl opt">++;</span>
        <span class="hl opt">}</span>
    <span class="hl opt">}</span> <span class="hl kwa">else</span> <span class="hl opt">{</span>
        lc <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
        la<span class="hl opt">.</span>pos <span class="hl opt">=</span> lnIdx<span class="hl opt">;</span>
        <span class="hl kwd">reverse</span><span class="hl opt">(</span>la<span class="hl opt">,</span> comp<span class="hl opt">);</span>
        <span class="hl kwd">write</span><span class="hl opt">(</span>line<span class="hl opt">);</span>
        la <span class="hl opt">=</span> headLA<span class="hl opt">;</span>
        lines <span class="hl opt">=</span> la<span class="hl opt">.</span>data<span class="hl opt">;</span>
        la<span class="hl opt">.</span>pos <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
        lnIdx <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
    <span class="hl opt">}</span>
<span class="hl opt">}</span>
la<span class="hl opt">.</span>pos <span class="hl opt">=</span> lnIdx<span class="hl opt">;</span>
<span class="hl kwd">reverse</span><span class="hl opt">(</span>la<span class="hl opt">,</span> comp<span class="hl opt">);</span>
