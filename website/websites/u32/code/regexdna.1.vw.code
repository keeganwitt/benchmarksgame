<span class="hl com">&quot;* The Computer Language Benchmarks Game</span>
<span class="hl com">    http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com">    contributed by Eliot Miranda *&quot;</span><span class="hl opt">!</span>


<span class="hl opt">!</span><span class="hl kwc">Tests</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'benchmarking'</span><span class="hl opt">!</span>
<span class="hl kwb">matchPatterns</span>
   <span class="hl opt">^#(</span>   <span class="hl str">'agggtaaa|tttaccct'</span>
         <span class="hl str">'[cgt]gggtaaa|tttaccc[acg]'</span>
         <span class="hl str">'a[act]ggtaaa|tttacc[agt]t'</span>
         <span class="hl str">'ag[act]gtaaa|tttac[agt]ct'</span>
         <span class="hl str">'agg[act]taaa|ttta[agt]cct'</span>
         <span class="hl str">'aggg[acg]aaa|ttt[cgt]ccct'</span>
         <span class="hl str">'agggt[cgt]aa|tt[acg]accct'</span>
         <span class="hl str">'agggta[cgt]a|t[acg]taccct'</span>
         <span class="hl str">'agggtaa[cgt]|[acg]ttaccct'</span>
   <span class="hl opt">)! !</span>

<span class="hl opt">!</span><span class="hl kwc">Tests</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'benchmarking'</span><span class="hl opt">!</span>
<span class="hl kwb">substitutionPatterns</span>
   <span class="hl opt">^#(   #(</span><span class="hl str">'B'</span> <span class="hl str">'(c|g|t)'</span><span class="hl opt">)</span>
         <span class="hl opt">#(</span><span class="hl str">'D'</span> <span class="hl str">'(a|g|t)'</span><span class="hl opt">)</span>
         <span class="hl opt">#(</span><span class="hl str">'H'</span> <span class="hl str">'(a|c|t)'</span><span class="hl opt">)</span>
         <span class="hl opt">#(</span><span class="hl str">'K'</span> <span class="hl str">'(g|t)'</span><span class="hl opt">)</span>
         <span class="hl opt">#(</span><span class="hl str">'M'</span> <span class="hl str">'(a|c)'</span><span class="hl opt">)</span>
         <span class="hl opt">#(</span><span class="hl str">'N'</span> <span class="hl str">'(a|c|g|t)'</span><span class="hl opt">)</span>
         <span class="hl opt">#(</span><span class="hl str">'R'</span> <span class="hl str">'(a|g)'</span><span class="hl opt">)</span>
         <span class="hl opt">#(</span><span class="hl str">'S'</span> <span class="hl str">'(c|g)'</span><span class="hl opt">)</span>
         <span class="hl opt">#(</span><span class="hl str">'V'</span> <span class="hl str">'(a|c|g)'</span><span class="hl opt">)</span>
         <span class="hl opt">#(</span><span class="hl str">'W'</span> <span class="hl str">'(a|t)'</span><span class="hl opt">)</span>
         <span class="hl opt">#(</span><span class="hl str">'Y'</span> <span class="hl str">'(c|t)'</span><span class="hl opt">))! !</span>


<span class="hl opt">!</span><span class="hl kwc">Tests</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'benchmarking'</span><span class="hl opt">!</span>
<span class="hl kwb">regexDNA:</span> sequence <span class="hl kwb">to:</span> output
   <span class="hl kwd">| s size1 size2 translation |</span>
   size1 <span class="hl opt">:</span><span class="hl kwb">=</span> sequence <span class="hl kwb">size</span><span class="hl opt">.</span>

   <span class="hl com">&quot;* remove FASTA sequence descriptions and new-lines *&quot;</span>
   s <span class="hl opt">:</span><span class="hl kwb">=</span> sequence <span class="hl kwb">copyWithRegex:</span> <span class="hl str">'&gt;[^</span><span class="hl esc">\r</span><span class="hl str">]*</span><span class="hl esc">\r</span><span class="hl str">|</span><span class="hl esc">\r</span><span class="hl str">'</span> <span class="hl kwb">matchesReplacedWith:</span> <span class="hl str">''</span><span class="hl opt">.</span>
   size2 <span class="hl opt">:</span><span class="hl kwb">=</span> s <span class="hl kwb">size</span><span class="hl opt">.</span>

   <span class="hl com">&quot;* regex match *&quot;</span>
   <span class="hl kwa">self</span> <span class="hl kwb">matchPatterns do:</span> <span class="hl opt">[</span><span class="hl kwd">:each</span>| 
      output 
         <span class="hl kwb">nextPutAll:</span> each<span class="hl opt">;</span> <span class="hl kwb">space</span><span class="hl opt">;</span> 
         <span class="hl kwb">print:</span> <span class="hl opt">(</span>s <span class="hl kwb">occurrencesOfRegex:</span> each<span class="hl opt">);</span> <span class="hl kwb">nl</span>
      <span class="hl opt">].</span> 

   <span class="hl com">&quot;* regex substitution *&quot;</span>
   translation <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl kwc">Dictionary</span> <span class="hl kwb">new</span><span class="hl opt">.</span>
   <span class="hl kwa">self</span> <span class="hl kwb">substitutionPatterns do:</span> <span class="hl opt">[</span><span class="hl kwd">:each</span>| 
      translation <span class="hl kwb">at:</span> each <span class="hl kwb">first put:</span> each <span class="hl kwb">last</span><span class="hl opt">].</span>

   s <span class="hl opt">:</span><span class="hl kwb">=</span> s <span class="hl kwb">copyWithRegex:</span> <span class="hl str">'['</span>, 
         <span class="hl opt">(</span>translation <span class="hl kwb">keys asArray fold:</span> <span class="hl opt">[</span><span class="hl kwd">:a :b</span>| a, <span class="hl kwb">b</span><span class="hl opt">])</span>, <span class="hl str">']'</span>
      <span class="hl kwb">matchesTranslatedUsing:</span> <span class="hl opt">[</span><span class="hl kwd">:l</span>| translation <span class="hl kwb">at:</span> l<span class="hl opt">].</span>

   output
      nl<span class="hl opt">;</span>
      <span class="hl kwb">print:</span> size1<span class="hl opt">;</span> <span class="hl kwb">nl</span><span class="hl opt">;</span> 
      <span class="hl kwb">print:</span> size2<span class="hl opt">;</span> <span class="hl kwb">nl</span><span class="hl opt">;</span> 
      <span class="hl kwb">print:</span> s <span class="hl kwb">size</span><span class="hl opt">;</span> <span class="hl kwb">nl</span><span class="hl opt">! !</span>


<span class="hl opt">!</span><span class="hl kwc">Tests</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'benchmark scripts'</span><span class="hl opt">!</span>
<span class="hl kwb">regexdna</span>
   <span class="hl kwa">self</span> <span class="hl kwb">regexDNA:</span> <span class="hl kwa">self</span> <span class="hl kwb">stdinSpecial contents to:</span> <span class="hl kwa">self</span> <span class="hl kwb">stdout</span><span class="hl opt">.</span>
   <span class="hl opt">^</span><span class="hl str">''</span> <span class="hl opt">! !</span>
