<span class="hl slc">// The Computer Language Benchmarks Game</span>
<span class="hl slc">//  http://shootout.alioth.debian.org</span>
<span class="hl slc">//</span>
<span class="hl slc">//  Contributed by Matthew Wilson </span>
<span class="hl slc">//  biginteger derived from Tom Wu's jsbn.js</span>


<span class="hl kwa">var</span> compareTo<span class="hl opt">,</span> multiply<span class="hl opt">,</span> divide<span class="hl opt">,</span> addTo<span class="hl opt">,</span> add<span class="hl opt">,</span> intValue<span class="hl opt">,</span> shiftLeft<span class="hl opt">,</span> nbv<span class="hl opt">;</span>

<span class="hl kwa">function</span> <span class="hl kwd">main</span><span class="hl opt">(</span>$n<span class="hl opt">) {</span>
  <span class="hl kwa">var</span> $i<span class="hl opt">=</span><span class="hl num">1</span><span class="hl opt">,</span> $s<span class="hl opt">=</span><span class="hl str">&quot;&quot;</span><span class="hl opt">,</span> $d<span class="hl opt">,</span> neg10<span class="hl opt">=</span><span class="hl kwd">nbv</span><span class="hl opt">(-</span><span class="hl num">10</span><span class="hl opt">),</span> three<span class="hl opt">=</span><span class="hl kwd">nbv</span><span class="hl opt">(</span><span class="hl num">3</span><span class="hl opt">),</span> ten<span class="hl opt">=</span><span class="hl kwd">nbv</span><span class="hl opt">(</span><span class="hl num">10</span><span class="hl opt">),</span> g <span class="hl opt">=</span> <span class="hl num">1</span><span class="hl opt">,</span> $g<span class="hl opt">,</span>
  digits<span class="hl opt">=</span><span class="hl kwd">Array</span><span class="hl opt">(</span><span class="hl num">10</span><span class="hl opt">),</span> $z0<span class="hl opt">=</span><span class="hl kwd">nbv</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">),</span> $z1<span class="hl opt">=</span><span class="hl kwd">nbv</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">),</span> $z2<span class="hl opt">=</span><span class="hl kwd">nbv</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">),</span> negdigits<span class="hl opt">=</span><span class="hl kwd">Array</span><span class="hl opt">(</span><span class="hl num">10</span><span class="hl opt">),</span>
  k <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">,</span> $k<span class="hl opt">,</span> l <span class="hl opt">=</span> <span class="hl num">2</span><span class="hl opt">,</span> $l<span class="hl opt">,</span> a<span class="hl opt">;</span>
  
  <span class="hl kwa">for</span><span class="hl opt">(</span><span class="hl kwa">var</span> i<span class="hl opt">=</span><span class="hl num">0</span><span class="hl opt">;</span> i<span class="hl opt">&lt;</span><span class="hl num">10</span><span class="hl opt">; ++</span>i<span class="hl opt">) {</span> negdigits<span class="hl kwc">[i]</span> <span class="hl opt">=</span> <span class="hl kwd">multiply</span><span class="hl opt">(</span>digits<span class="hl kwc">[i]</span> <span class="hl opt">=</span> <span class="hl kwd">nbv</span><span class="hl opt">(</span>i<span class="hl opt">),</span>neg10<span class="hl opt">) }</span>
  
  <span class="hl kwa">do</span> <span class="hl opt">{</span>
    <span class="hl kwa">while</span> <span class="hl opt">(</span> <span class="hl kwd">compareTo</span><span class="hl opt">(</span>$z0<span class="hl opt">,</span>$z2<span class="hl opt">) &gt;</span> <span class="hl num">0</span>
         || <span class="hl opt">(</span>$d <span class="hl opt">=</span> <span class="hl kwd">intValue</span><span class="hl opt">(</span><span class="hl kwd">divide</span><span class="hl opt">(</span><span class="hl kwd">add</span><span class="hl opt">(</span><span class="hl kwd">multiply</span><span class="hl opt">(</span>$z0<span class="hl opt">,</span>three<span class="hl opt">),</span>$z1<span class="hl opt">),</span>$z2<span class="hl opt">))) !=</span> 
             <span class="hl kwd">intValue</span><span class="hl opt">(</span><span class="hl kwd">divide</span><span class="hl opt">(</span><span class="hl kwd">add</span><span class="hl opt">(</span><span class="hl kwd">shiftLeft</span><span class="hl opt">(</span>$z0<span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">),</span>$z1<span class="hl opt">),</span>$z2<span class="hl opt">))</span>
    <span class="hl opt">) {</span>
      $z1 <span class="hl opt">=</span> <span class="hl kwd">multiply</span><span class="hl opt">(</span>$z1<span class="hl opt">,</span>$g <span class="hl opt">=</span> <span class="hl kwd">nbv</span><span class="hl opt">(</span>g<span class="hl opt">+=</span><span class="hl num">2</span><span class="hl opt">));</span>
      $z2 <span class="hl opt">=</span> <span class="hl kwd">multiply</span><span class="hl opt">(</span>$z2<span class="hl opt">,</span>$g<span class="hl opt">);</span>
      <span class="hl kwd">addTo</span><span class="hl opt">(</span>$z1<span class="hl opt">,</span> <span class="hl kwd">multiply</span><span class="hl opt">(</span>$z0<span class="hl opt">,</span>$l <span class="hl opt">=</span> <span class="hl kwd">nbv</span><span class="hl opt">(</span>l<span class="hl opt">+=</span><span class="hl num">4</span><span class="hl opt">)),</span> $z1<span class="hl opt">);</span>
      $z0 <span class="hl opt">=</span> <span class="hl kwd">multiply</span><span class="hl opt">(</span>$z0<span class="hl opt">,</span>$k <span class="hl opt">=</span> <span class="hl kwd">nbv</span><span class="hl opt">(++</span>k<span class="hl opt">));</span>
    <span class="hl opt">}</span>
    $z0 <span class="hl opt">=</span> <span class="hl kwd">multiply</span><span class="hl opt">(</span>$z0<span class="hl opt">,</span>ten<span class="hl opt">);</span>
    $z1 <span class="hl opt">=</span> <span class="hl kwd">multiply</span><span class="hl opt">(</span>$z1<span class="hl opt">,</span>ten<span class="hl opt">);</span>
    <span class="hl kwd">addTo</span><span class="hl opt">(</span>$z1<span class="hl opt">,</span> <span class="hl kwd">multiply</span><span class="hl opt">(</span>$z2<span class="hl opt">,</span>negdigits<span class="hl opt">[</span>$d<span class="hl opt">]),</span> $z1<span class="hl opt">);</span>
    $s <span class="hl opt">+=</span> $d<span class="hl opt">;</span>
    
    <span class="hl kwa">if</span> <span class="hl opt">(</span>$i <span class="hl opt">%</span> <span class="hl num">10</span> <span class="hl opt">==</span> <span class="hl num">0</span><span class="hl opt">) {</span> <span class="hl kwd">print</span><span class="hl opt">(</span>$s<span class="hl opt">+</span><span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">:&quot;</span><span class="hl opt">+</span>$i<span class="hl opt">);</span> $s<span class="hl opt">=</span><span class="hl str">&quot;&quot;</span> <span class="hl opt">}</span>
  <span class="hl opt">}</span> <span class="hl kwa">while</span> <span class="hl opt">(++</span>$i <span class="hl opt">&lt;=</span> $n<span class="hl opt">)</span>
  
  <span class="hl kwa">if</span> <span class="hl opt">((</span>$i <span class="hl opt">=</span> $n <span class="hl opt">%</span> <span class="hl num">10</span><span class="hl opt">) !=</span> <span class="hl num">0</span><span class="hl opt">) {</span> $s <span class="hl opt">+=</span> <span class="hl kwd">Array</span><span class="hl opt">(</span><span class="hl num">11</span><span class="hl opt">-</span>$i<span class="hl opt">).</span><span class="hl kwd">join</span><span class="hl opt">(</span><span class="hl str">' '</span><span class="hl opt">) }</span>
  <span class="hl kwa">if</span> <span class="hl opt">(</span>$s<span class="hl opt">.</span>length <span class="hl opt">&gt;</span> <span class="hl num">0</span><span class="hl opt">) {</span> <span class="hl kwd">print</span><span class="hl opt">(</span>$s<span class="hl opt">+</span><span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">:&quot;</span><span class="hl opt">+</span>$n<span class="hl opt">) }</span>
<span class="hl opt">}</span>

<span class="hl kwa">var</span> functions<span class="hl opt">;</span>
<span class="hl kwd">load</span><span class="hl opt">(</span><span class="hl str">'/home/dunham/shootout/bench/Include/javascript/biginteger.js'</span><span class="hl opt">);</span>

compareTo<span class="hl opt">=</span>functions<span class="hl kwc">[0]</span><span class="hl opt">;</span>
multiply<span class="hl opt">=</span>functions<span class="hl kwc">[1]</span><span class="hl opt">;</span>
divide<span class="hl opt">=</span>functions<span class="hl kwc">[2]</span><span class="hl opt">;</span>
addTo<span class="hl opt">=</span>functions<span class="hl kwc">[3]</span><span class="hl opt">;</span>
add<span class="hl opt">=</span>functions<span class="hl kwc">[4]</span><span class="hl opt">;</span>
nbv<span class="hl opt">=</span>functions<span class="hl kwc">[5]</span><span class="hl opt">;</span>
shiftLeft<span class="hl opt">=</span>functions<span class="hl kwc">[6]</span><span class="hl opt">;</span>
intValue<span class="hl opt">=</span>functions<span class="hl kwc">[7]</span><span class="hl opt">;</span>

main<span class="hl opt">.</span><span class="hl kwd">call</span><span class="hl opt">(</span><span class="hl kwa">this</span><span class="hl opt">,</span> <span class="hl num">1</span><span class="hl opt">*</span>arguments<span class="hl kwc">[0]</span><span class="hl opt">*</span><span class="hl num">1</span><span class="hl opt">)</span>
