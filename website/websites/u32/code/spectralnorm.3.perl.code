<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://benchmarksgame.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc"># Contributed by Andrew Rodland</span>

<span class="hl kwa">use</span> strict<span class="hl opt">;</span>
<span class="hl kwa">use</span> IO<span class="hl opt">::</span>Select<span class="hl opt">;</span>

<span class="hl kwc">our</span> <span class="hl opt">(</span><span class="hl kwb">$n</span><span class="hl opt">,</span> <span class="hl kwb">$size_of_float</span><span class="hl opt">,</span> <span class="hl kwb">$threads</span><span class="hl opt">,</span> <span class="hl kwb">&#64;ranges</span><span class="hl opt">,</span> <span class="hl kwb">$begin</span><span class="hl opt">,</span> <span class="hl kwb">$end</span><span class="hl opt">);</span>

<span class="hl kwa">sub</span> eval_A <span class="hl opt">{</span>
  <span class="hl kwa">use</span> integer<span class="hl opt">;</span>
  <span class="hl kwc">my</span> <span class="hl kwb">$div</span> <span class="hl opt">= ( (</span><span class="hl kwb">$_</span><span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">] +</span> <span class="hl kwb">$_</span><span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">]) * (</span><span class="hl kwb">$_</span><span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">] +</span> <span class="hl kwb">$_</span><span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">] +</span> <span class="hl num">1</span><span class="hl opt">) /</span> <span class="hl num">2</span><span class="hl opt">) +</span> <span class="hl kwb">$_</span><span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">] +</span> <span class="hl num">1</span><span class="hl opt">;</span>
  <span class="hl kwa">no</span> integer<span class="hl opt">;</span>
  <span class="hl num">1</span> <span class="hl opt">/</span> <span class="hl kwb">$div</span><span class="hl opt">;</span>
<span class="hl opt">}</span>

<span class="hl kwa">sub</span> multiplyAv <span class="hl opt">{</span>
  <span class="hl kwa">return</span> <span class="hl kwc">map</span> <span class="hl opt">{</span>
    <span class="hl kwc">my</span> <span class="hl opt">(</span><span class="hl kwb">$i</span><span class="hl opt">,</span> <span class="hl kwb">$sum</span><span class="hl opt">) = (</span><span class="hl kwb">$_</span><span class="hl opt">);</span>
    <span class="hl kwb">$sum</span> <span class="hl opt">+=</span> eval_A<span class="hl opt">(</span><span class="hl kwb">$i</span><span class="hl opt">,</span> <span class="hl kwb">$_</span><span class="hl opt">) *</span> <span class="hl kwb">$_</span><span class="hl opt">[</span><span class="hl kwb">$_</span><span class="hl opt">]</span> <span class="hl kwa">for</span> <span class="hl num">0</span> <span class="hl opt">..</span> <span class="hl kwb">$#_</span><span class="hl opt">;</span>
    <span class="hl kwb">$sum</span><span class="hl opt">;</span>
  <span class="hl opt">}</span> <span class="hl kwb">$begin</span> <span class="hl opt">..</span> <span class="hl kwb">$end</span><span class="hl opt">;</span>
<span class="hl opt">}</span>

<span class="hl kwa">sub</span> multiplyAtv <span class="hl opt">{</span>
  <span class="hl kwa">return</span> <span class="hl kwc">map</span> <span class="hl opt">{</span>
    <span class="hl kwc">my</span> <span class="hl opt">(</span><span class="hl kwb">$i</span><span class="hl opt">,</span> <span class="hl kwb">$sum</span><span class="hl opt">) = (</span><span class="hl kwb">$_</span><span class="hl opt">);</span>
    <span class="hl kwb">$sum</span> <span class="hl opt">+=</span> eval_A<span class="hl opt">(</span><span class="hl kwb">$_</span><span class="hl opt">,</span> <span class="hl kwb">$i</span><span class="hl opt">) *</span> <span class="hl kwb">$_</span><span class="hl opt">[</span><span class="hl kwb">$_</span><span class="hl opt">]</span> <span class="hl kwa">for</span> <span class="hl num">0</span> <span class="hl opt">..</span> <span class="hl kwb">$#_</span><span class="hl opt">;</span>
    <span class="hl kwb">$sum</span><span class="hl opt">;</span>
  <span class="hl opt">}</span> <span class="hl kwb">$begin</span> <span class="hl opt">..</span> <span class="hl kwb">$end</span><span class="hl opt">;</span>
<span class="hl opt">}</span>

<span class="hl kwa">sub</span> do_parallel <span class="hl opt">{</span>
  <span class="hl kwc">my</span> <span class="hl kwb">$func</span> <span class="hl opt">=</span> <span class="hl kwc">shift</span><span class="hl opt">;</span>

  <span class="hl kwc">my</span> <span class="hl kwb">&#64;out</span><span class="hl opt">;</span>
  <span class="hl kwc">my</span> <span class="hl opt">(</span><span class="hl kwb">&#64;fd</span><span class="hl opt">,</span> <span class="hl kwb">&#64;ptr</span><span class="hl opt">,</span> <span class="hl kwb">%fh2proc</span><span class="hl opt">);</span>
  <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$proc</span> <span class="hl opt">(</span><span class="hl num">0</span> <span class="hl opt">..</span> <span class="hl kwb">$threads</span> <span class="hl opt">-</span> <span class="hl num">1</span><span class="hl opt">) {</span>
    <span class="hl opt">(</span><span class="hl kwb">$begin</span><span class="hl opt">,</span> <span class="hl kwb">$end</span><span class="hl opt">) =</span> &#64;<span class="hl opt">{</span> <span class="hl kwb">$ranges</span><span class="hl opt">[</span><span class="hl kwb">$proc</span><span class="hl opt">] };</span>
    <span class="hl kwc">my</span> <span class="hl kwb">$pid</span> <span class="hl opt">=</span> <span class="hl kwc">open</span> <span class="hl kwb">$fd</span><span class="hl opt">[</span><span class="hl kwb">$proc</span><span class="hl opt">],</span> <span class="hl str">&quot;-|&quot;</span><span class="hl opt">;</span>
    <span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwb">$pid</span> <span class="hl opt">==</span> <span class="hl num">0</span><span class="hl opt">) {</span>
      <span class="hl kwc">print pack</span> <span class="hl str">&quot;F*&quot;</span><span class="hl opt">,</span> <span class="hl kwb">$func</span><span class="hl opt">-&gt;(</span> <span class="hl kwb">&#64;_</span> <span class="hl opt">);</span>
      <span class="hl kwa">exit</span> <span class="hl num">0</span><span class="hl opt">;</span>
    <span class="hl opt">}</span> <span class="hl kwa">else</span> <span class="hl opt">{</span>
      <span class="hl kwb">$fh2proc</span><span class="hl opt">{</span> <span class="hl kwb">$fd</span><span class="hl opt">[</span><span class="hl kwb">$proc</span><span class="hl opt">] } =</span> <span class="hl kwb">$proc</span><span class="hl opt">;</span>
      <span class="hl kwb">$ptr</span><span class="hl opt">[</span><span class="hl kwb">$proc</span><span class="hl opt">] =</span> <span class="hl kwb">$begin</span><span class="hl opt">;</span>
    <span class="hl opt">}</span>
  <span class="hl opt">}</span>

  <span class="hl kwc">my</span> <span class="hl kwb">$select</span> <span class="hl opt">=</span> IO<span class="hl opt">::</span>Select<span class="hl opt">-&gt;</span><span class="hl kwd">new</span><span class="hl opt">(</span><span class="hl kwb">&#64;fd</span><span class="hl opt">);</span>

  <span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwb">$select</span><span class="hl opt">-&gt;</span><span class="hl kwd">count</span><span class="hl opt">) {</span>
    <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$fh</span> <span class="hl opt">(</span><span class="hl kwb">$select</span><span class="hl opt">-&gt;</span><span class="hl kwd">can_read</span><span class="hl opt">) {</span>
      <span class="hl kwc">my</span> <span class="hl kwb">$proc</span> <span class="hl opt">=</span> <span class="hl kwb">$fh2proc</span><span class="hl opt">{</span><span class="hl kwb">$fh</span><span class="hl opt">};</span>
      <span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwc">read</span> <span class="hl kwb">$fh</span><span class="hl opt">,</span> <span class="hl kwc">my</span> <span class="hl kwb">$data</span><span class="hl opt">,</span> <span class="hl kwb">$size_of_float</span><span class="hl opt">) {</span>
        <span class="hl kwb">$out</span><span class="hl opt">[</span> <span class="hl kwb">$ptr</span><span class="hl opt">[</span><span class="hl kwb">$proc</span><span class="hl opt">] ++ ] =</span> <span class="hl kwc">unpack</span> <span class="hl str">&quot;F&quot;</span><span class="hl opt">,</span> <span class="hl kwb">$data</span><span class="hl opt">;</span>
      <span class="hl opt">}</span>
      <span class="hl kwb">$select</span><span class="hl opt">-&gt;</span><span class="hl kwd">remove</span><span class="hl opt">(</span><span class="hl kwb">$fh</span><span class="hl opt">)</span> <span class="hl kwa">if</span> <span class="hl kwc">eof</span><span class="hl opt">(</span><span class="hl kwb">$fh</span><span class="hl opt">);</span>
    <span class="hl opt">}</span>
  <span class="hl opt">}</span>

  <span class="hl kwa">return</span> <span class="hl kwb">&#64;out</span><span class="hl opt">;</span>
<span class="hl opt">}</span>

<span class="hl kwa">sub</span> multiplyAtAv <span class="hl opt">{</span>
  <span class="hl kwc">my</span> <span class="hl kwb">&#64;array</span> <span class="hl opt">=</span> do_parallel<span class="hl opt">(</span>\<span class="hl opt">&amp;</span>multiplyAv<span class="hl opt">,</span> <span class="hl kwb">&#64;_</span><span class="hl opt">);</span>
  <span class="hl kwa">return</span> do_parallel<span class="hl opt">(</span>\<span class="hl opt">&amp;</span>multiplyAtv<span class="hl opt">,</span> <span class="hl kwb">&#64;array</span><span class="hl opt">);</span>
<span class="hl opt">}</span>

<span class="hl kwa">sub</span> num_cpus <span class="hl opt">{</span>
  <span class="hl kwc">open my</span> <span class="hl kwb">$fh</span><span class="hl opt">,</span> <span class="hl str">'&lt;/proc/cpuinfo'</span> <span class="hl kwc">or</span> <span class="hl kwa">return</span><span class="hl opt">;</span>
  <span class="hl kwc">my</span> <span class="hl kwb">$cpus</span><span class="hl opt">;</span>
  <span class="hl kwa">while</span> <span class="hl opt">(&lt;</span><span class="hl kwb">$fh</span><span class="hl opt">&gt;) {</span>
    <span class="hl kwb">$cpus</span> <span class="hl opt">++</span> <span class="hl kwa">if</span> <span class="hl kwd">/^processor\s+:/</span><span class="hl opt">;</span>
  <span class="hl opt">}</span>
  <span class="hl kwa">return</span> <span class="hl kwb">$cpus</span><span class="hl opt">;</span>
<span class="hl opt">}</span>

<span class="hl kwa">sub</span> init <span class="hl opt">{</span>
  <span class="hl kwb">$size_of_float</span> <span class="hl opt">=</span> <span class="hl kwc">length pack</span> <span class="hl str">&quot;F&quot;</span><span class="hl opt">,</span> <span class="hl num">0</span><span class="hl opt">;</span>

  <span class="hl kwb">$n</span> <span class="hl opt">=</span> <span class="hl kwb">&#64;ARGV</span> ? <span class="hl kwb">$ARGV</span><span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">] :</span> <span class="hl num">500</span><span class="hl opt">;</span>
  <span class="hl kwb">$threads</span> <span class="hl opt">=</span> num_cpus<span class="hl opt">() ||</span> <span class="hl num">1</span><span class="hl opt">;</span>

  <span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwb">$threads</span> <span class="hl opt">&gt;</span> <span class="hl kwb">$n</span><span class="hl opt">) {</span>
    <span class="hl kwb">$threads</span> <span class="hl opt">=</span> <span class="hl kwb">$n</span><span class="hl opt">;</span>
  <span class="hl opt">}</span>

  <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$i</span> <span class="hl opt">(</span><span class="hl num">0</span> <span class="hl opt">..</span> <span class="hl kwb">$threads</span> <span class="hl opt">-</span> <span class="hl num">1</span><span class="hl opt">) {</span>
    <span class="hl kwa">use</span> integer<span class="hl opt">;</span>
    <span class="hl kwb">$ranges</span><span class="hl opt">[</span><span class="hl kwb">$i</span><span class="hl opt">][</span><span class="hl num">0</span><span class="hl opt">] =</span> <span class="hl kwb">$n</span> <span class="hl opt">*</span> <span class="hl kwb">$i</span> <span class="hl opt">/</span> <span class="hl kwb">$threads</span><span class="hl opt">;</span>
    <span class="hl kwb">$ranges</span><span class="hl opt">[</span><span class="hl kwb">$i</span><span class="hl opt">][</span><span class="hl num">1</span><span class="hl opt">] =</span> <span class="hl kwb">$n</span> <span class="hl opt">* (</span><span class="hl kwb">$i</span> <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">) /</span> <span class="hl kwb">$threads</span> <span class="hl opt">-</span> <span class="hl num">1</span><span class="hl opt">;</span>
    <span class="hl kwa">no</span> integer<span class="hl opt">;</span>
  <span class="hl opt">}</span>
<span class="hl opt">}</span>

init<span class="hl opt">();</span>

<span class="hl kwc">my</span> <span class="hl kwb">&#64;u</span> <span class="hl opt">= (</span><span class="hl num">1</span><span class="hl opt">)</span> x <span class="hl kwb">$n</span><span class="hl opt">;</span>
<span class="hl kwc">my</span> <span class="hl kwb">&#64;v</span><span class="hl opt">;</span>
<span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl num">0</span> <span class="hl opt">..</span> <span class="hl num">9</span><span class="hl opt">) {</span>
  <span class="hl kwb">&#64;v</span> <span class="hl opt">=</span> multiplyAtAv<span class="hl opt">(</span> <span class="hl kwb">&#64;u</span> <span class="hl opt">);</span>
  <span class="hl kwb">&#64;u</span> <span class="hl opt">=</span> multiplyAtAv<span class="hl opt">(</span> <span class="hl kwb">&#64;v</span> <span class="hl opt">);</span>
<span class="hl opt">}</span>

<span class="hl kwc">my</span> <span class="hl opt">(</span><span class="hl kwb">$vBv</span><span class="hl opt">,</span> <span class="hl kwb">$vv</span><span class="hl opt">);</span>
<span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$i</span> <span class="hl opt">(</span><span class="hl num">0</span> <span class="hl opt">..</span> <span class="hl kwb">$#u</span><span class="hl opt">) {</span>
  <span class="hl kwb">$vBv</span> <span class="hl opt">+=</span> <span class="hl kwb">$u</span><span class="hl opt">[</span><span class="hl kwb">$i</span><span class="hl opt">] *</span> <span class="hl kwb">$v</span><span class="hl opt">[</span><span class="hl kwb">$i</span><span class="hl opt">];</span>
  <span class="hl kwb">$vv</span> <span class="hl opt">+=</span> <span class="hl kwb">$v</span><span class="hl opt">[</span><span class="hl kwb">$i</span><span class="hl opt">] **</span> <span class="hl num">2</span><span class="hl opt">;</span>
<span class="hl opt">}</span>

<span class="hl kwc">printf</span><span class="hl opt">(</span> <span class="hl str">&quot;%0.9f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">,</span> <span class="hl kwc">sqrt</span><span class="hl opt">(</span> <span class="hl kwb">$vBv</span> <span class="hl opt">/</span> <span class="hl kwb">$vv</span> <span class="hl opt">) );</span>

