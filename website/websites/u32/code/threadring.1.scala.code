<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"></span>
<span class="hl com">   Contributed by Vincent Kraeutler</span>
<span class="hl com">   updated for 2.8 by Rex Kerr</span>
<span class="hl com">*/</span>
<span class="hl kwa">import</span> scala<span class="hl opt">.</span>actors<span class="hl opt">.</span>Actor
<span class="hl kwa">import</span> scala<span class="hl opt">.</span>actors<span class="hl opt">.</span>Actor<span class="hl opt">.</span>_

<span class="hl kwa">object</span> threadring <span class="hl opt">{</span>

  <span class="hl kwa">class</span> <span class="hl kwd">Thread</span><span class="hl opt">(</span><span class="hl kwa">val</span> label<span class="hl opt">:</span> Int<span class="hl opt">)</span> <span class="hl kwa">extends</span> Actor <span class="hl opt">{</span>
    <span class="hl kwa">var</span> next<span class="hl opt">:</span> Thread <span class="hl opt">=</span> null
    <span class="hl kwa">def</span> <span class="hl kwd">act</span><span class="hl opt">() {</span> loop <span class="hl opt">{</span> react <span class="hl opt">{</span>
      <span class="hl kwa">case</span> <span class="hl num">0</span> <span class="hl opt">=&gt;</span> <span class="hl kwd">println</span><span class="hl opt">(</span>label<span class="hl opt">);</span> System<span class="hl opt">.</span><span class="hl kwd">exit</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">)</span>
      <span class="hl kwa">case</span> n<span class="hl opt">:</span> Int <span class="hl opt">=&gt;</span> next <span class="hl opt">!</span> n <span class="hl opt">-</span> <span class="hl num">1</span>
    <span class="hl opt">}}}</span>
  <span class="hl opt">}</span>

  <span class="hl slc">// create the threads</span>
  <span class="hl kwa">val</span> ring <span class="hl opt">=</span> Array<span class="hl opt">.</span><span class="hl kwd">tabulate</span><span class="hl opt">(</span><span class="hl num">503</span><span class="hl opt">)(</span>i <span class="hl opt">=&gt;</span> <span class="hl kwa">new</span> <span class="hl kwd">Thread</span><span class="hl opt">(</span>i <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">))</span>

  <span class="hl slc">// hook them up</span>
  ring<span class="hl opt">.</span><span class="hl kwd">foreach</span><span class="hl opt">(</span>t <span class="hl opt">=&gt; {</span>
    t<span class="hl opt">.</span>next <span class="hl opt">=</span> <span class="hl kwd">ring</span><span class="hl opt">(</span> t<span class="hl opt">.</span>label <span class="hl opt">%</span> ring<span class="hl opt">.</span>length <span class="hl opt">)</span>
    t<span class="hl opt">.</span>start
  <span class="hl opt">})</span>

  <span class="hl kwa">def</span> <span class="hl kwd">main</span><span class="hl opt">(</span>args <span class="hl opt">:</span> Array<span class="hl opt">[</span>String<span class="hl opt">]) {</span>
    <span class="hl kwa">val</span> nHops <span class="hl opt">=</span> <span class="hl kwd">args</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">).</span>toInt
    <span class="hl kwd">ring</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">) !</span> nHops
  <span class="hl opt">}</span>

<span class="hl opt">}</span>
