<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://benchmarksgame.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc"># contributed by Daniel Nanz 2008-03-11</span>

<span class="hl slc"># Coroutines via enhanced generators</span>
<span class="hl slc"># 2to3</span>

<span class="hl kwa">import</span> sys
<span class="hl kwa">import</span> itertools
      
<span class="hl kwa">def</span> <span class="hl kwd">main</span><span class="hl opt">(</span>n <span class="hl opt">=</span> <span class="hl kwb">int</span><span class="hl opt">(</span>sys<span class="hl opt">.</span>argv<span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">]),</span> n_threads<span class="hl opt">=</span><span class="hl num">503</span><span class="hl opt">,</span> cycle<span class="hl opt">=</span>itertools<span class="hl opt">.</span>cycle<span class="hl opt">):</span>

    <span class="hl kwa">def</span> <span class="hl kwd">worker</span><span class="hl opt">(</span>worker_id<span class="hl opt">):</span>
        
        n <span class="hl opt">=</span> <span class="hl num">1</span>
        <span class="hl kwa">while True</span><span class="hl opt">:</span>
            <span class="hl kwa">if</span> n <span class="hl opt">&gt;</span> <span class="hl num">0</span><span class="hl opt">:</span>
                n <span class="hl opt">= (</span><span class="hl kwa">yield</span> <span class="hl opt">(</span>n <span class="hl opt">-</span> <span class="hl num">1</span><span class="hl opt">))</span>
            <span class="hl kwa">else</span><span class="hl opt">:</span>
                <span class="hl kwa">print</span><span class="hl opt">(</span>worker_id<span class="hl opt">)</span>
                <span class="hl kwa">raise</span> <span class="hl kwc">StopIteration</span>


    threadRing <span class="hl opt">= [</span><span class="hl kwd">worker</span><span class="hl opt">(</span>w<span class="hl opt">)</span> <span class="hl kwa">for</span> w <span class="hl kwa">in</span> <span class="hl kwb">range</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span> n_threads <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">)]</span>
    <span class="hl kwa">for</span> t <span class="hl kwa">in</span> threadRing<span class="hl opt">:</span> foo <span class="hl opt">=</span> <span class="hl kwd">next</span><span class="hl opt">(</span>t<span class="hl opt">)</span>           <span class="hl slc"># start exec. gen. funcs</span>
    sendFuncRing <span class="hl opt">= [</span>t<span class="hl opt">.</span>send <span class="hl kwa">for</span> t <span class="hl kwa">in</span> threadRing<span class="hl opt">]</span>   <span class="hl slc"># speed...</span>
    <span class="hl kwa">for</span> send <span class="hl kwa">in</span> <span class="hl kwd">cycle</span><span class="hl opt">(</span>sendFuncRing<span class="hl opt">):</span>
        <span class="hl kwa">try</span><span class="hl opt">:</span>
            n <span class="hl opt">=</span> <span class="hl kwd">send</span><span class="hl opt">(</span>n<span class="hl opt">)</span>
        <span class="hl kwa">except</span> <span class="hl kwc">StopIteration</span><span class="hl opt">:</span>
            <span class="hl kwa">break</span>

<span class="hl kwd">main</span><span class="hl opt">()</span>
