<span class="hl com">&quot;* The Computer Language Benchmarks Game</span>
<span class="hl com">    http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com">    contributed by Isaac Gouy</span>
<span class="hl com">    modified by Eliot Miranda *&quot;</span><span class="hl opt">!</span>

<span class="hl kwc">Object</span> <span class="hl kwb">subclass:</span> <span class="hl kwd">#RandomNumber</span>
   <span class="hl kwb">instanceVariableNames:</span> <span class="hl str">'seed scale'</span>
   <span class="hl kwb">classVariableNames:</span> <span class="hl str">'FModulus Increment Modulus Multiplier'</span>
   <span class="hl kwb">poolDictionaries:</span> <span class="hl str">''</span>
   <span class="hl kwb">category:</span> <span class="hl str">'Shootout'</span><span class="hl opt">!</span>

<span class="hl kwc">ReadStream</span> <span class="hl kwb">subclass:</span> <span class="hl kwd">#RepeatStream</span>
   <span class="hl kwb">instanceVariableNames:</span> <span class="hl str">'repeatPtr repeatLimit'</span>
   <span class="hl kwb">classVariableNames:</span> <span class="hl str">''</span>
   <span class="hl kwb">poolDictionaries:</span> <span class="hl str">''</span>
   <span class="hl kwb">category:</span> <span class="hl str">'Shootout'</span><span class="hl opt">!</span>

<span class="hl kwc">RepeatStream</span> <span class="hl kwb">subclass:</span> <span class="hl kwd">#RandomStream</span>
   <span class="hl kwb">instanceVariableNames:</span> <span class="hl str">'random percentages'</span>
   <span class="hl kwb">classVariableNames:</span> <span class="hl str">''</span>
   <span class="hl kwb">poolDictionaries:</span> <span class="hl str">''</span>
   <span class="hl kwb">category:</span> <span class="hl str">'Shootout'</span><span class="hl opt">!</span>

<span class="hl opt">!</span><span class="hl kwc">RandomNumber</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'private'</span><span class="hl opt">!</span>
<span class="hl kwb">to:</span> anInteger
   seed <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">42</span><span class="hl opt">.</span>
   scale <span class="hl opt">:</span><span class="hl kwb">=</span> anInteger<span class="hl opt">! !</span>

<span class="hl opt">!</span><span class="hl kwc">RandomNumber</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'accessing'</span><span class="hl opt">!</span>
<span class="hl kwb">next</span>
   seed <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl opt">(</span>seed <span class="hl kwb">*</span> <span class="hl kwc">Multiplier</span> <span class="hl kwb">+</span> <span class="hl kwc">Increment</span><span class="hl opt">)</span> <span class="hl esc">\\</span> <span class="hl kwc">Modulus</span><span class="hl opt">.</span>
   <span class="hl opt">^(</span>seed <span class="hl kwb">*</span> scale<span class="hl opt">)</span> <span class="hl kwb">/</span> <span class="hl kwc">FModulus</span><span class="hl opt">! !</span>


<span class="hl opt">!</span><span class="hl kwc">RandomNumber</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'class initialization'</span><span class="hl opt">!</span>
<span class="hl kwb">initialize</span>
   <span class="hl kwc">FModulus</span> <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">139968.0</span>d0<span class="hl opt">.</span>
   <span class="hl kwc">Increment</span> <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">29573</span><span class="hl opt">.</span>
   <span class="hl kwc">Modulus</span> <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">139968</span><span class="hl opt">.</span>
   <span class="hl kwc">Multiplier</span> <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">3877</span><span class="hl opt">.! !</span>

<span class="hl opt">!</span><span class="hl kwc">RandomNumber</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'initialize-release'</span><span class="hl opt">!</span>
<span class="hl kwb">to:</span> anInteger
   <span class="hl opt">^</span><span class="hl kwa">self</span> <span class="hl kwb">basicNew to:</span> anInteger<span class="hl opt">! !</span>


<span class="hl opt">!</span><span class="hl kwc">RepeatStream</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'accessing'</span><span class="hl opt">!</span>
<span class="hl kwb">next</span>
   position <span class="hl kwb">&gt;=</span> readLimit <span class="hl kwb">ifTrue:</span> <span class="hl opt">[</span> <span class="hl kwa">self</span> <span class="hl kwb">position:</span> <span class="hl num">0</span> <span class="hl opt">].</span>
   repeatPtr <span class="hl opt">:</span><span class="hl kwb">=</span> repeatPtr <span class="hl kwb">+</span> <span class="hl num">1</span><span class="hl opt">.</span>
   <span class="hl opt">^</span>collection <span class="hl kwb">at:</span> <span class="hl opt">(</span>position <span class="hl opt">:</span><span class="hl kwb">=</span> position <span class="hl kwb">+</span> <span class="hl num">1</span><span class="hl opt">)! !</span>

<span class="hl opt">!</span><span class="hl kwc">RepeatStream</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'testing'</span><span class="hl opt">!</span>
<span class="hl kwb">atEnd</span>
   <span class="hl opt">^</span>repeatPtr <span class="hl kwb">&gt;=</span> repeatLimit<span class="hl opt">! !</span>

<span class="hl opt">!</span><span class="hl kwc">RepeatStream</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'initialize-release'</span><span class="hl opt">!</span>
<span class="hl kwb">to:</span> anInteger
   repeatPtr <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">0</span><span class="hl opt">.</span>
   repeatLimit <span class="hl opt">:</span><span class="hl kwb">=</span> anInteger<span class="hl opt">! !</span>


<span class="hl opt">!</span><span class="hl kwc">RandomStream</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'accessing'</span><span class="hl opt">!</span>
<span class="hl kwb">next</span>
   <span class="hl kwd">| r |</span>
   r <span class="hl opt">:</span><span class="hl kwb">=</span> random <span class="hl kwb">next</span><span class="hl opt">.</span>
   repeatPtr <span class="hl opt">:</span><span class="hl kwb">=</span> repeatPtr <span class="hl kwb">+</span> <span class="hl num">1</span><span class="hl opt">.</span>
   <span class="hl num">1</span> <span class="hl kwb">to:</span> percentages <span class="hl kwb">size do:</span> <span class="hl opt">[</span><span class="hl kwd">:i</span>|
      <span class="hl opt">(</span>r &lt; <span class="hl opt">(</span>percentages <span class="hl kwb">at:</span> i<span class="hl opt">))</span> <span class="hl kwb">ifTrue:</span> <span class="hl opt">[^</span>collection <span class="hl kwb">at:</span> i<span class="hl opt">]]! !</span>

<span class="hl opt">!</span><span class="hl kwc">RandomStream</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'accessing'</span><span class="hl opt">!</span>
<span class="hl kwb">random:</span> aRandomNumber
<span class="hl com">&quot;* Share the random number generator so we can get the expected results. *&quot;</span>
   random <span class="hl opt">:</span><span class="hl kwb">=</span> aRandomNumber<span class="hl opt">! !</span>

<span class="hl opt">!</span><span class="hl kwc">RandomStream</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'initialize-release'</span><span class="hl opt">!</span>
<span class="hl kwb">on:</span> aCollection
   <span class="hl kwd">| size cp |</span>
   repeatPtr <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">0</span><span class="hl opt">.</span>
   random <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl kwc">RandomNumber</span> <span class="hl kwb">to:</span> <span class="hl num">1.0</span>d0<span class="hl opt">.</span>
   size <span class="hl opt">:</span><span class="hl kwb">=</span> aCollection <span class="hl kwb">size</span><span class="hl opt">.</span>
   percentages <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl kwc">Array</span> <span class="hl kwb">new:</span> size<span class="hl opt">.</span>
   collection <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl kwc">Array</span> <span class="hl kwb">new:</span> size<span class="hl opt">.</span>
   cp <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">0.0</span>d0<span class="hl opt">.</span>
   <span class="hl num">1</span> <span class="hl kwb">to:</span> size <span class="hl kwb">do:</span> <span class="hl opt">[</span><span class="hl kwd">:i</span>|
      collection <span class="hl kwb">at:</span> i <span class="hl kwb">put:</span> <span class="hl opt">(</span>aCollection <span class="hl kwb">at:</span> i<span class="hl opt">)</span> <span class="hl kwb">first</span><span class="hl opt">.</span>
      percentages <span class="hl kwb">at:</span> i <span class="hl kwb">put:</span> <span class="hl opt">(</span>cp <span class="hl opt">:</span><span class="hl kwb">=</span> cp <span class="hl kwb">+</span> <span class="hl opt">(</span>aCollection <span class="hl kwb">at:</span> i<span class="hl opt">)</span> <span class="hl kwb">last</span><span class="hl opt">).</span>
   <span class="hl opt">]! !</span>


<span class="hl opt">!</span><span class="hl kwc">RepeatStream</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'instance creation'</span><span class="hl opt">!</span>
<span class="hl kwb">to:</span> anInteger <span class="hl kwb">on:</span> aCollection
   <span class="hl opt">^(</span><span class="hl kwa">super</span> <span class="hl kwb">on:</span> aCollection<span class="hl opt">)</span> <span class="hl kwb">to:</span> anInteger<span class="hl opt">! !</span>


<span class="hl opt">!</span><span class="hl kwc">Tests</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'benchmarking'</span><span class="hl opt">!</span>
<span class="hl kwb">writeFasta:</span> aString <span class="hl kwb">from:</span> inStream <span class="hl kwb">to:</span> outStream <span class="hl kwb">lineLength:</span> lineLength
   <span class="hl kwd">| i |</span>
   outStream <span class="hl kwb">nextPut:</span> <span class="hl opt">$</span>&gt;<span class="hl opt">;</span> <span class="hl kwb">nextPutAll:</span> aString<span class="hl opt">;</span> <span class="hl kwb">nl</span><span class="hl opt">.</span>
   i <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">0</span><span class="hl opt">.</span>
   <span class="hl opt">[</span>inStream <span class="hl kwb">atEnd</span><span class="hl opt">]</span> <span class="hl kwb">whileFalse:</span>
      <span class="hl opt">[</span>i <span class="hl kwb">==</span> lineLength <span class="hl kwb">ifTrue:</span> <span class="hl opt">[</span>outStream <span class="hl kwb">nl</span><span class="hl opt">.</span> i <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">0</span><span class="hl opt">].</span>
      outStream <span class="hl kwb">nextPut:</span> inStream <span class="hl kwb">next</span><span class="hl opt">.</span>
      i <span class="hl opt">:</span><span class="hl kwb">=</span> i <span class="hl kwb">+</span> <span class="hl num">1</span><span class="hl opt">].</span>
   outStream <span class="hl kwb">nl</span><span class="hl opt">! !</span>

<span class="hl opt">!</span><span class="hl kwc">Tests</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'benchmarking'</span><span class="hl opt">!</span>
<span class="hl kwb">fasta:</span> n <span class="hl kwb">to:</span> out
   <span class="hl kwd">| r lineLength |</span>
   lineLength <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl num">60</span><span class="hl opt">.</span>
   <span class="hl kwa">self</span>
      <span class="hl kwb">writeFasta:</span> <span class="hl str">'ONE Homo sapiens alu'</span>
      <span class="hl kwb">from:</span>
         <span class="hl opt">(</span> <span class="hl kwc">RepeatStream</span>
            <span class="hl kwb">to:</span> n<span class="hl kwb">*</span><span class="hl num">2</span>
            <span class="hl kwb">on:</span><span class="hl str">'GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG'</span>,
               <span class="hl str">'GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA'</span>,
               <span class="hl str">'CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT'</span>,
               <span class="hl str">'ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA'</span>,
               <span class="hl str">'GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG'</span>,
               <span class="hl str">'AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC'</span>,
               <span class="hl str">'AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA'</span> <span class="hl opt">)</span>
      <span class="hl kwb">to:</span> out
      <span class="hl kwb">lineLength:</span> lineLength<span class="hl opt">.</span>

   r <span class="hl opt">:</span><span class="hl kwb">=</span> <span class="hl kwc">RandomNumber</span> <span class="hl kwb">to:</span> <span class="hl num">1</span><span class="hl opt">.</span> <span class="hl com">&quot;Shared random sequence&quot;</span>

   <span class="hl kwa">self</span>
      <span class="hl kwb">writeFasta:</span> <span class="hl str">'TWO IUB ambiguity codes'</span>
      <span class="hl kwb">from:</span>
         <span class="hl opt">((</span> <span class="hl kwc">RandomStream</span>
            <span class="hl kwb">to:</span> n<span class="hl kwb">*</span><span class="hl num">3</span>
            <span class="hl kwb">on:</span> <span class="hl opt">#(   #(</span><span class="hl num">$a 0.27</span>d0<span class="hl opt">)</span>
                  <span class="hl opt">#(</span><span class="hl num">$c 0.12</span>d0<span class="hl opt">)</span>
                  <span class="hl opt">#(</span><span class="hl num">$g 0.12</span>d0<span class="hl opt">)</span>
                  <span class="hl opt">#(</span><span class="hl num">$t 0.27</span>d0<span class="hl opt">)</span>

                  <span class="hl opt">#(</span><span class="hl num">$B 0.02</span>d0<span class="hl opt">)</span>
                  <span class="hl opt">#(</span><span class="hl num">$D 0.02</span>d0<span class="hl opt">)</span>
                  <span class="hl opt">#(</span><span class="hl num">$H 0.02</span>d0<span class="hl opt">)</span>
                  <span class="hl opt">#(</span><span class="hl num">$K 0.02</span>d0<span class="hl opt">)</span>
                  <span class="hl opt">#(</span><span class="hl num">$M 0.02</span>d0<span class="hl opt">)</span>
                  <span class="hl opt">#(</span><span class="hl num">$N 0.02</span>d0<span class="hl opt">)</span>
                  <span class="hl opt">#(</span><span class="hl num">$R 0.02</span>d0<span class="hl opt">)</span>
                  <span class="hl opt">#(</span><span class="hl num">$S 0.02</span>d0<span class="hl opt">)</span>
                  <span class="hl opt">#(</span><span class="hl num">$V 0.02</span>d0<span class="hl opt">)</span>
                  <span class="hl opt">#(</span><span class="hl num">$W 0.02</span>d0<span class="hl opt">)</span>
                  <span class="hl opt">#(</span><span class="hl num">$Y 0.02</span>d0<span class="hl opt">)))</span>
         <span class="hl kwb">random:</span> r<span class="hl opt">;</span>
         yourself<span class="hl opt">)</span>
      <span class="hl kwb">to:</span> out
      <span class="hl kwb">lineLength:</span> lineLength<span class="hl opt">.</span>

   <span class="hl kwa">self</span>
      <span class="hl kwb">writeFasta:</span> <span class="hl str">'THREE Homo sapiens frequency'</span>
      <span class="hl kwb">from:</span>
         <span class="hl opt">((</span> <span class="hl kwc">RandomStream</span>
            <span class="hl kwb">to:</span> n<span class="hl kwb">*</span><span class="hl num">5</span>
            <span class="hl kwb">on:</span> <span class="hl opt">#(   #(</span><span class="hl num">$a 0.3029549426680</span>d0<span class="hl opt">)</span>
                  <span class="hl opt">#(</span><span class="hl num">$c 0.1979883004921</span>d0<span class="hl opt">)</span>
                  <span class="hl opt">#(</span><span class="hl num">$g 0.1975473066391</span>d0<span class="hl opt">)</span>
                  <span class="hl opt">#(</span><span class="hl num">$t 0.3015094502008</span>d0<span class="hl opt">)))</span>
            <span class="hl kwb">random:</span> r<span class="hl opt">;</span>
            yourself<span class="hl opt">)</span>
      <span class="hl kwb">to:</span> out
      <span class="hl kwb">lineLength:</span> lineLength<span class="hl opt">.</span>

   out <span class="hl kwb">flush</span><span class="hl opt">. ! !</span>


<span class="hl opt">!</span><span class="hl kwc">Tests</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'benchmark scripts'</span><span class="hl opt">!</span>
<span class="hl kwb">fasta</span>
   <span class="hl kwa">self</span> <span class="hl kwb">fasta:</span> <span class="hl kwa">self</span> <span class="hl kwb">arg to:</span> <span class="hl kwa">self</span> <span class="hl kwb">stdoutSpecial</span><span class="hl opt">.</span>
   <span class="hl opt">^</span><span class="hl str">''</span><span class="hl opt">! !</span>


<span class="hl kwc">RandomNumber</span> <span class="hl kwb">initialize</span><span class="hl opt">!</span>
