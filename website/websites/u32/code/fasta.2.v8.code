<span class="hl slc">// The Computer Language Benchmarks Game</span>
<span class="hl slc">// http://benchmarksgame.alioth.debian.org/</span>
<span class="hl slc">//</span>
<span class="hl slc">//  Contributed by Ian Osgood</span>
<span class="hl slc">//  Largely rewritten by Matthew Wilson</span>

<span class="hl kwa">function</span> <span class="hl kwd">fastaRepeat</span><span class="hl opt">(</span>n<span class="hl opt">,</span> seq<span class="hl opt">) {</span>
  <span class="hl kwa">var</span> seqi <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">,</span> len <span class="hl opt">=</span> seq<span class="hl opt">.</span>length<span class="hl opt">,</span> i<span class="hl opt">,</span> j<span class="hl opt">,</span> k<span class="hl opt">,</span> l<span class="hl opt">,</span> block<span class="hl opt">,</span> 
    str <span class="hl opt">=</span> <span class="hl kwd">Array</span><span class="hl opt">(</span>len<span class="hl opt">*</span><span class="hl num">60</span><span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">).</span><span class="hl kwd">join</span><span class="hl opt">(</span>seq<span class="hl opt">),</span> lines <span class="hl opt">=</span> <span class="hl kwd">Array</span><span class="hl opt">(</span>i<span class="hl opt">=</span>j<span class="hl opt">=</span>len<span class="hl opt">*</span>len<span class="hl opt">);</span>
  <span class="hl kwa">while</span> <span class="hl opt">(--</span>j<span class="hl opt">&gt;-</span><span class="hl num">1</span><span class="hl opt">) {</span> lines<span class="hl kwc">[j]</span> <span class="hl opt">=</span> str<span class="hl opt">.</span><span class="hl kwd">substr</span><span class="hl opt">(</span><span class="hl num">60</span><span class="hl opt">*</span>j<span class="hl opt">,</span> <span class="hl num">60</span><span class="hl opt">) }</span>
  block <span class="hl opt">=</span> lines<span class="hl opt">.</span><span class="hl kwd">join</span><span class="hl opt">(</span><span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">);</span>
  <span class="hl kwa">for</span> <span class="hl opt">(</span>j<span class="hl opt">=</span><span class="hl num">0</span><span class="hl opt">,</span> k<span class="hl opt">=</span>Math<span class="hl opt">.</span><span class="hl kwd">floor</span><span class="hl opt">((</span>l<span class="hl opt">=</span>Math<span class="hl opt">.</span><span class="hl kwd">floor</span><span class="hl opt">(</span>n<span class="hl opt">/</span><span class="hl num">60</span><span class="hl opt">))/</span>i<span class="hl opt">);</span> j<span class="hl opt">&lt;</span>k<span class="hl opt">; ++</span>j<span class="hl opt">) {</span> <span class="hl kwd">print</span><span class="hl opt">(</span>block<span class="hl opt">) }</span>
  <span class="hl kwa">for</span> <span class="hl opt">(</span>j <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">,</span> k <span class="hl opt">=</span> l <span class="hl opt">%</span> i<span class="hl opt">;</span> j <span class="hl opt">&lt;</span> k<span class="hl opt">; ++</span>j<span class="hl opt">) {</span> <span class="hl kwd">print</span><span class="hl opt">(</span>lines<span class="hl kwc">[j]</span><span class="hl opt">) }</span>
  <span class="hl kwa">if</span> <span class="hl opt">(</span>n <span class="hl opt">%</span> <span class="hl num">60</span> <span class="hl opt">&gt;</span> <span class="hl num">0</span><span class="hl opt">) {</span> <span class="hl kwd">print</span><span class="hl opt">(</span>lines<span class="hl kwc">[k]</span><span class="hl opt">.</span><span class="hl kwd">substr</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">,</span> n <span class="hl opt">%</span> <span class="hl num">60</span><span class="hl opt">)) }</span>
<span class="hl opt">}</span>

<span class="hl kwa">var</span> rand<span class="hl opt">=(</span><span class="hl kwa">function</span><span class="hl opt">() {</span>
  <span class="hl kwa">var</span> Last <span class="hl opt">=</span> <span class="hl num">42</span><span class="hl opt">;</span>
  <span class="hl kwa">return function</span><span class="hl opt">() {</span> <span class="hl kwa">return</span> <span class="hl opt">(</span>Last<span class="hl opt">=(</span>Last <span class="hl opt">*</span> <span class="hl num">3877</span> <span class="hl opt">+</span> <span class="hl num">29573</span><span class="hl opt">) %</span> <span class="hl num">139968</span><span class="hl opt">) /</span> <span class="hl num">139968</span> <span class="hl opt">}</span>
<span class="hl opt">})();</span>

<span class="hl kwa">function</span> <span class="hl kwd">printLineMaker</span><span class="hl opt">(</span>table<span class="hl opt">) {</span>
  <span class="hl kwa">var</span> h <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">,</span> k <span class="hl opt">= [],</span> v <span class="hl opt">= [],</span> c<span class="hl opt">,</span> l<span class="hl opt">=</span><span class="hl num">0</span><span class="hl opt">;</span>
  <span class="hl kwa">for</span> <span class="hl opt">(</span>c <span class="hl kwa">in</span> table<span class="hl opt">) {</span> l <span class="hl opt">=</span> v<span class="hl kwc">[h]</span> <span class="hl opt">=</span> table<span class="hl opt">[</span>k<span class="hl opt">[</span>h<span class="hl opt">++] =</span> c<span class="hl opt">]+=</span>l<span class="hl opt">; }</span>
  <span class="hl kwa">return function</span><span class="hl opt">(</span>x<span class="hl opt">) {</span>
    <span class="hl kwa">var</span> line <span class="hl opt">=</span> <span class="hl str">&quot;&quot;</span><span class="hl opt">;</span>
    next<span class="hl opt">:</span> <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwa">var</span> i<span class="hl opt">=</span><span class="hl num">0</span><span class="hl opt">;</span> i<span class="hl opt">&lt;</span>x<span class="hl opt">; ++</span>i<span class="hl opt">) {</span>
      <span class="hl kwa">var</span> r <span class="hl opt">=</span> <span class="hl kwd">rand</span><span class="hl opt">(),</span> j<span class="hl opt">=</span><span class="hl num">0</span><span class="hl opt">;</span>
      <span class="hl kwa">for</span> <span class="hl opt">(;;++</span>j<span class="hl opt">) {</span>
        <span class="hl kwa">if</span> <span class="hl opt">(</span>r <span class="hl opt">&lt;</span> v<span class="hl kwc">[j]</span><span class="hl opt">) {</span>
          line <span class="hl opt">+=</span> k<span class="hl kwc">[j]</span><span class="hl opt">;</span>
          <span class="hl kwa">continue</span> next<span class="hl opt">;</span>
        <span class="hl opt">}</span>
      <span class="hl opt">}</span>
    <span class="hl opt">}</span>
    <span class="hl kwd">print</span><span class="hl opt">(</span>line<span class="hl opt">);</span>
  <span class="hl opt">}</span>
<span class="hl opt">}</span>

<span class="hl kwa">function</span> <span class="hl kwd">fastaRandom</span><span class="hl opt">(</span>n<span class="hl opt">,</span> table<span class="hl opt">) {</span>
  <span class="hl kwa">var</span> printLine<span class="hl opt">=</span><span class="hl kwd">printLineMaker</span><span class="hl opt">(</span>table<span class="hl opt">);</span>
  <span class="hl kwa">while</span> <span class="hl opt">((</span>n <span class="hl opt">-=</span> <span class="hl num">60</span><span class="hl opt">) &gt; -</span><span class="hl num">1</span><span class="hl opt">) {</span> <span class="hl kwd">printLine</span><span class="hl opt">(</span><span class="hl num">60</span><span class="hl opt">) }</span>
  <span class="hl kwa">if</span> <span class="hl opt">(</span>n<span class="hl opt">&lt;</span><span class="hl num">0</span> <span class="hl opt">&amp;&amp;</span> n<span class="hl opt">&gt;-</span><span class="hl num">60</span><span class="hl opt">) {</span> <span class="hl kwd">printLine</span><span class="hl opt">(</span><span class="hl num">60</span> <span class="hl opt">+</span> n<span class="hl opt">) }</span>
<span class="hl opt">}</span>

<span class="hl opt">(</span><span class="hl kwa">function</span> <span class="hl kwd">main</span><span class="hl opt">(</span>n<span class="hl opt">) {</span>
  <span class="hl kwa">var</span> ALU <span class="hl opt">=</span> <span class="hl str">&quot;GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG&quot;</span> <span class="hl opt">+</span>
            <span class="hl str">&quot;GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA&quot;</span> <span class="hl opt">+</span>
            <span class="hl str">&quot;CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT&quot;</span> <span class="hl opt">+</span>
            <span class="hl str">&quot;ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA&quot;</span> <span class="hl opt">+</span>
            <span class="hl str">&quot;GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG&quot;</span> <span class="hl opt">+</span>
            <span class="hl str">&quot;AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC&quot;</span> <span class="hl opt">+</span>
            <span class="hl str">&quot;AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA&quot;</span><span class="hl opt">;</span>

  <span class="hl kwa">var</span> IUB <span class="hl opt">= {</span> a<span class="hl opt">:</span><span class="hl num">0.27</span><span class="hl opt">,</span> c<span class="hl opt">:</span><span class="hl num">0.12</span><span class="hl opt">,</span> g<span class="hl opt">:</span><span class="hl num">0.12</span><span class="hl opt">,</span> t<span class="hl opt">:</span><span class="hl num">0.27</span><span class="hl opt">,</span> B<span class="hl opt">:</span><span class="hl num">0.02</span><span class="hl opt">,</span> D<span class="hl opt">:</span><span class="hl num">0.02</span><span class="hl opt">,</span> H<span class="hl opt">:</span><span class="hl num">0.02</span><span class="hl opt">,</span> K<span class="hl opt">:</span><span class="hl num">0.02</span><span class="hl opt">,</span>
              M<span class="hl opt">:</span><span class="hl num">0.02</span><span class="hl opt">,</span> N<span class="hl opt">:</span><span class="hl num">0.02</span><span class="hl opt">,</span> R<span class="hl opt">:</span><span class="hl num">0.02</span><span class="hl opt">,</span> S<span class="hl opt">:</span><span class="hl num">0.02</span><span class="hl opt">,</span> V<span class="hl opt">:</span><span class="hl num">0.02</span><span class="hl opt">,</span> W<span class="hl opt">:</span><span class="hl num">0.02</span><span class="hl opt">,</span> Y<span class="hl opt">:</span><span class="hl num">0.02</span> <span class="hl opt">}</span>

  <span class="hl kwa">var</span> HomoSap <span class="hl opt">= {</span>
    a<span class="hl opt">:</span><span class="hl num">0.3029549426680</span><span class="hl opt">,</span> c<span class="hl opt">:</span><span class="hl num">0.1979883004921</span><span class="hl opt">,</span> g<span class="hl opt">:</span><span class="hl num">0.1975473066391</span><span class="hl opt">,</span> t<span class="hl opt">:</span><span class="hl num">0.3015094502008</span>
  <span class="hl opt">}</span>

  <span class="hl kwd">print</span><span class="hl opt">(</span><span class="hl str">&quot;&gt;ONE Homo sapiens alu&quot;</span><span class="hl opt">)</span>
  <span class="hl kwd">fastaRepeat</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">*</span>n<span class="hl opt">,</span> ALU<span class="hl opt">)</span>

  <span class="hl kwd">print</span><span class="hl opt">(</span><span class="hl str">&quot;&gt;TWO IUB ambiguity codes&quot;</span><span class="hl opt">)</span>
  <span class="hl kwd">fastaRandom</span><span class="hl opt">(</span><span class="hl num">3</span><span class="hl opt">*</span>n<span class="hl opt">,</span> IUB<span class="hl opt">)</span>

  <span class="hl kwd">print</span><span class="hl opt">(</span><span class="hl str">&quot;&gt;THREE Homo sapiens frequency&quot;</span><span class="hl opt">)</span>
  <span class="hl kwd">fastaRandom</span><span class="hl opt">(</span><span class="hl num">5</span><span class="hl opt">*</span>n<span class="hl opt">,</span> HomoSap<span class="hl opt">)</span>
<span class="hl opt">}).</span><span class="hl kwd">call</span><span class="hl opt">(</span><span class="hl kwa">this</span><span class="hl opt">,</span> <span class="hl num">1</span><span class="hl opt">*</span>arguments<span class="hl kwc">[0]</span><span class="hl opt">*</span><span class="hl num">1</span><span class="hl opt">)</span>
