<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"></span>
<span class="hl com">   Contributed by Branimir Maksimovic</span>
<span class="hl com">*/</span>

<span class="hl slc">// g++ 4.8.x bug, compile with: -Wl,--no-as-needed option </span>

<span class="hl ppc">#include &lt;iostream&gt;</span>
<span class="hl ppc">#include &lt;iomanip&gt;</span>
<span class="hl ppc">#include &lt;cstdint&gt;</span>
<span class="hl ppc">#include &lt;cstdio&gt;</span>
<span class="hl ppc">#include &lt;string&gt;</span>
<span class="hl ppc">#include &lt;cstring&gt;</span>
<span class="hl ppc">#include &lt;algorithm&gt;</span>
<span class="hl ppc">#include &lt;map&gt;</span>
<span class="hl ppc">#include &lt;ext/pb_ds/assoc_container.hpp&gt;</span>
<span class="hl ppc">#include &lt;future&gt;</span>
<span class="hl ppc">#include &lt;unistd.h&gt;</span>

<span class="hl kwb">unsigned char</span> tonum<span class="hl opt">[</span><span class="hl num">256</span><span class="hl opt">],</span>tochar<span class="hl opt">[</span><span class="hl num">4</span><span class="hl opt">];</span>
<span class="hl kwb">static void</span> <span class="hl kwd">init</span><span class="hl opt">()</span>
<span class="hl opt">{</span>
   tonum<span class="hl opt">[</span><span class="hl str">'A'</span><span class="hl opt">] =</span> <span class="hl num">0</span><span class="hl opt">;</span>
   tonum<span class="hl opt">[</span><span class="hl str">'C'</span><span class="hl opt">] =</span> <span class="hl num">1</span><span class="hl opt">;</span>
   tonum<span class="hl opt">[</span><span class="hl str">'T'</span><span class="hl opt">] =</span> <span class="hl num">2</span><span class="hl opt">;</span>
   tonum<span class="hl opt">[</span><span class="hl str">'G'</span><span class="hl opt">] =</span> <span class="hl num">3</span><span class="hl opt">;</span>
   tochar<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">] =</span> <span class="hl str">'A'</span><span class="hl opt">;</span>
   tochar<span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">] =</span> <span class="hl str">'C'</span><span class="hl opt">;</span>
   tochar<span class="hl opt">[</span><span class="hl num">2</span><span class="hl opt">] =</span> <span class="hl str">'T'</span><span class="hl opt">;</span>
   tochar<span class="hl opt">[</span><span class="hl num">3</span><span class="hl opt">] =</span> <span class="hl str">'G'</span><span class="hl opt">;</span>
<span class="hl opt">}</span>

<span class="hl kwb">struct</span> T<span class="hl opt">{</span>
   <span class="hl kwd">T</span><span class="hl opt">(</span><span class="hl kwb">const</span> std<span class="hl opt">::</span>string<span class="hl opt">&amp;</span> s <span class="hl opt">=</span> std<span class="hl opt">::</span><span class="hl kwd">string</span><span class="hl opt">())</span>
   <span class="hl opt">:</span><span class="hl kwd">data</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">),</span><span class="hl kwd">size</span><span class="hl opt">(</span>s<span class="hl opt">.</span><span class="hl kwd">size</span><span class="hl opt">())</span>
   <span class="hl opt">{</span>
      <span class="hl kwd">reset</span><span class="hl opt">(</span>s<span class="hl opt">,</span><span class="hl num">0</span><span class="hl opt">,</span>s<span class="hl opt">.</span><span class="hl kwd">size</span><span class="hl opt">());</span>
   <span class="hl opt">}</span>
   <span class="hl kwb">void</span> <span class="hl kwd">reset</span><span class="hl opt">(</span><span class="hl kwb">const</span> std<span class="hl opt">::</span>string<span class="hl opt">&amp;</span> s<span class="hl opt">,</span><span class="hl kwb">unsigned</span> beg<span class="hl opt">,</span><span class="hl kwb">unsigned</span> end<span class="hl opt">)</span>
   <span class="hl opt">{</span>
      size <span class="hl opt">=</span> end<span class="hl opt">-</span>beg<span class="hl opt">;</span>
      data <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
      <span class="hl kwa">for</span><span class="hl opt">(</span><span class="hl kwb">unsigned</span> i <span class="hl opt">=</span> beg<span class="hl opt">;</span> i <span class="hl opt">!=</span> end<span class="hl opt">; ++</span>i<span class="hl opt">)</span>
      <span class="hl opt">{</span>
         data <span class="hl opt">&lt;&lt;=</span> <span class="hl num">2</span><span class="hl opt">;</span>
         data <span class="hl opt">|=</span> tonum<span class="hl opt">[</span><span class="hl kwb">unsigned</span><span class="hl opt">(</span>s<span class="hl opt">[</span>i<span class="hl opt">])];</span>
      <span class="hl opt">}</span>
   <span class="hl opt">}</span>
   <span class="hl kwb">bool</span> <span class="hl kwc">operator</span><span class="hl opt">&lt;(</span><span class="hl kwb">const</span> T<span class="hl opt">&amp;</span> in<span class="hl opt">)</span><span class="hl kwb">const</span>
   <span class="hl opt">{</span>
      <span class="hl kwa">return</span> data <span class="hl opt">&lt;</span> in<span class="hl opt">.</span>data<span class="hl opt">;</span>
   <span class="hl opt">}</span>
   <span class="hl kwb">bool</span> <span class="hl kwc">operator</span><span class="hl opt">==(</span><span class="hl kwb">const</span> T<span class="hl opt">&amp;</span> in<span class="hl opt">)</span><span class="hl kwb">const</span>
   <span class="hl opt">{</span>
      <span class="hl kwa">return</span> data <span class="hl opt">==</span> in<span class="hl opt">.</span>data<span class="hl opt">;</span>
   <span class="hl opt">}</span>
   <span class="hl kwc">operator</span> std<span class="hl opt">::</span><span class="hl kwd">string</span><span class="hl opt">()</span><span class="hl kwb">const</span>
   <span class="hl opt">{</span>
      std<span class="hl opt">::</span>string tmp<span class="hl opt">;</span>
      <span class="hl kwb">uint64_t</span> tmp1 <span class="hl opt">=</span> data<span class="hl opt">;</span>
      <span class="hl kwa">for</span><span class="hl opt">(</span><span class="hl kwb">unsigned</span> i <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>i<span class="hl opt">!=</span>size<span class="hl opt">;++</span>i<span class="hl opt">)</span>
      <span class="hl opt">{</span>
         tmp<span class="hl opt">+=</span>tochar<span class="hl opt">[</span>tmp1 <span class="hl opt">&amp;</span> <span class="hl num">3</span><span class="hl opt">];</span>
         tmp1 <span class="hl opt">&gt;&gt;=</span> <span class="hl num">2</span><span class="hl opt">;</span>
      <span class="hl opt">}</span>
      std<span class="hl opt">::</span><span class="hl kwd">reverse</span><span class="hl opt">(</span>tmp<span class="hl opt">.</span><span class="hl kwd">begin</span><span class="hl opt">(),</span>tmp<span class="hl opt">.</span><span class="hl kwd">end</span><span class="hl opt">());</span>
      <span class="hl kwa">return</span> tmp<span class="hl opt">;</span>
   <span class="hl opt">}</span>
   <span class="hl kwb">struct</span> hash<span class="hl opt">{</span>
   <span class="hl kwb">uint64_t</span> <span class="hl kwc">operator</span><span class="hl opt">()(</span><span class="hl kwb">const</span> T<span class="hl opt">&amp;</span> t<span class="hl opt">)</span><span class="hl kwb">const</span><span class="hl opt">{</span> <span class="hl kwa">return</span> t<span class="hl opt">.</span>data<span class="hl opt">; }</span>
   <span class="hl opt">};</span>
   <span class="hl kwb">uint64_t</span> data<span class="hl opt">;</span>
   <span class="hl kwb">unsigned char</span> size<span class="hl opt">;</span>
<span class="hl opt">};</span>

__gnu_pbds<span class="hl opt">::</span>cc_hash_table<span class="hl opt">&lt;</span>T<span class="hl opt">,</span><span class="hl kwb">unsigned</span><span class="hl opt">,</span>T<span class="hl opt">::</span>hash<span class="hl opt">&gt;</span>
<span class="hl kwd">calculate</span><span class="hl opt">(</span><span class="hl kwb">const</span> std<span class="hl opt">::</span>string<span class="hl opt">&amp;</span> input<span class="hl opt">,</span><span class="hl kwb">unsigned</span> size<span class="hl opt">,</span> <span class="hl kwb">unsigned</span> beg<span class="hl opt">=</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl kwb">unsigned</span> incr<span class="hl opt">=</span><span class="hl num">1</span><span class="hl opt">)</span>
<span class="hl opt">{</span>
   __gnu_pbds<span class="hl opt">::</span>cc_hash_table<span class="hl opt">&lt;</span>T<span class="hl opt">,</span><span class="hl kwb">unsigned</span><span class="hl opt">,</span>T<span class="hl opt">::</span>hash<span class="hl opt">&gt;</span> frequencies<span class="hl opt">;</span>
   T tmp<span class="hl opt">;</span>
   <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwb">unsigned</span> i <span class="hl opt">=</span> beg<span class="hl opt">,</span> i_end <span class="hl opt">=</span> input<span class="hl opt">.</span><span class="hl kwd">size</span><span class="hl opt">() +</span> <span class="hl num">1</span> <span class="hl opt">-</span> size<span class="hl opt">;</span> i <span class="hl opt">&lt;</span> i_end<span class="hl opt">;</span> i<span class="hl opt">+=</span>incr<span class="hl opt">)</span>
   <span class="hl opt">{</span>
     tmp<span class="hl opt">.</span><span class="hl kwd">reset</span><span class="hl opt">(</span>input<span class="hl opt">,</span>i<span class="hl opt">,</span>i<span class="hl opt">+</span>size<span class="hl opt">);</span>
      <span class="hl opt">++</span>frequencies<span class="hl opt">[</span>tmp<span class="hl opt">];</span>
   <span class="hl opt">}</span>
   <span class="hl kwa">return</span> frequencies<span class="hl opt">;</span>
<span class="hl opt">}</span>

__gnu_pbds<span class="hl opt">::</span>cc_hash_table<span class="hl opt">&lt;</span>T<span class="hl opt">,</span><span class="hl kwb">unsigned</span><span class="hl opt">,</span>T<span class="hl opt">::</span>hash<span class="hl opt">&gt;</span>
<span class="hl kwd">tcalculate</span><span class="hl opt">(</span><span class="hl kwb">const</span> std<span class="hl opt">::</span>string<span class="hl opt">&amp;</span> input<span class="hl opt">,</span><span class="hl kwb">unsigned</span> size<span class="hl opt">)</span>
<span class="hl opt">{</span>
   <span class="hl kwb">unsigned</span> N <span class="hl opt">=</span> <span class="hl kwd">sysconf</span> <span class="hl opt">(</span>_SC_NPROCESSORS_ONLN<span class="hl opt">);</span>

   std<span class="hl opt">::</span>future<span class="hl opt">&lt;</span>__gnu_pbds<span class="hl opt">::</span>cc_hash_table<span class="hl opt">&lt;</span>T<span class="hl opt">,</span><span class="hl kwb">unsigned</span><span class="hl opt">,</span>T<span class="hl opt">::</span>hash<span class="hl opt">&gt;&gt;</span> ft<span class="hl opt">[</span>N<span class="hl opt">];</span>
   <span class="hl kwa">for</span><span class="hl opt">(</span><span class="hl kwb">unsigned</span> i <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> i<span class="hl opt">&lt;</span>N<span class="hl opt">;++</span>i<span class="hl opt">)</span>
      ft<span class="hl opt">[</span>i<span class="hl opt">] =</span> std<span class="hl opt">::</span><span class="hl kwd">async</span><span class="hl opt">(</span>std<span class="hl opt">::</span>launch<span class="hl opt">::</span>async<span class="hl opt">,</span>calculate<span class="hl opt">,</span>std<span class="hl opt">::</span><span class="hl kwd">ref</span><span class="hl opt">(</span>input<span class="hl opt">),</span>size<span class="hl opt">,</span>i<span class="hl opt">,</span>N<span class="hl opt">);</span>

   <span class="hl kwc">auto</span> frequencies <span class="hl opt">=</span> ft<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">].</span><span class="hl kwd">get</span><span class="hl opt">();</span>

   <span class="hl kwa">for</span><span class="hl opt">(</span><span class="hl kwb">unsigned</span> i <span class="hl opt">=</span> <span class="hl num">1</span> <span class="hl opt">;</span> i<span class="hl opt">&lt;</span>N<span class="hl opt">; ++</span>i<span class="hl opt">)</span>
      <span class="hl kwa">for</span><span class="hl opt">(</span><span class="hl kwc">auto</span><span class="hl opt">&amp;</span> j <span class="hl opt">:</span> ft<span class="hl opt">[</span>i<span class="hl opt">].</span><span class="hl kwd">get</span><span class="hl opt">())</span>
      <span class="hl opt">{</span>
         frequencies<span class="hl opt">[</span>j<span class="hl opt">.</span>first<span class="hl opt">]+=</span>j<span class="hl opt">.</span>second<span class="hl opt">;</span>
      <span class="hl opt">}</span>
   <span class="hl kwa">return</span> frequencies<span class="hl opt">;</span>
<span class="hl opt">}</span>

<span class="hl kwb">void</span> <span class="hl kwd">write_frequencies</span><span class="hl opt">(</span><span class="hl kwb">const</span> std<span class="hl opt">::</span>string <span class="hl opt">&amp;</span> input<span class="hl opt">,</span> <span class="hl kwb">unsigned</span> size<span class="hl opt">)</span>
<span class="hl opt">{</span>
   <span class="hl kwb">unsigned</span> sum <span class="hl opt">=</span> input<span class="hl opt">.</span><span class="hl kwd">size</span><span class="hl opt">() +</span> <span class="hl num">1</span> <span class="hl opt">-</span> size<span class="hl opt">;</span>
   <span class="hl kwc">auto</span> frequencies <span class="hl opt">=</span> <span class="hl kwd">tcalculate</span><span class="hl opt">(</span>input<span class="hl opt">,</span>size<span class="hl opt">);</span>
   std<span class="hl opt">::</span>map<span class="hl opt">&lt;</span><span class="hl kwb">unsigned</span><span class="hl opt">,</span> std<span class="hl opt">::</span>string<span class="hl opt">,</span>std<span class="hl opt">::</span>greater<span class="hl opt">&lt;</span><span class="hl kwb">unsigned</span><span class="hl opt">&gt;&gt;</span> freq<span class="hl opt">;</span>
   <span class="hl kwa">for</span><span class="hl opt">(</span><span class="hl kwc">auto</span><span class="hl opt">&amp;</span> i<span class="hl opt">:</span> frequencies<span class="hl opt">)</span>
   <span class="hl opt">{</span>
      freq<span class="hl opt">.</span><span class="hl kwd">insert</span><span class="hl opt">(</span>std<span class="hl opt">::</span><span class="hl kwd">make_pair</span><span class="hl opt">(</span>i<span class="hl opt">.</span>second<span class="hl opt">,</span>i<span class="hl opt">.</span>first<span class="hl opt">));</span>
   <span class="hl opt">}</span>
   <span class="hl kwa">for</span><span class="hl opt">(</span><span class="hl kwc">auto</span><span class="hl opt">&amp;</span> i <span class="hl opt">:</span> freq<span class="hl opt">)</span>
      std<span class="hl opt">::</span>cout <span class="hl opt">&lt;&lt;</span> i<span class="hl opt">.</span>second <span class="hl opt">&lt;&lt;</span> <span class="hl str">' '</span> <span class="hl opt">&lt;&lt; (</span>sum ? <span class="hl kwb">double</span><span class="hl opt">(</span><span class="hl num">100</span> <span class="hl opt">*</span> i<span class="hl opt">.</span>first<span class="hl opt">) /</span> sum <span class="hl opt">:</span> <span class="hl num">0.0</span><span class="hl opt">) &lt;&lt;</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">;</span>
   std<span class="hl opt">::</span>cout <span class="hl opt">&lt;&lt;</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">;</span>
<span class="hl opt">}</span>

<span class="hl kwb">void</span> <span class="hl kwd">write_count</span><span class="hl opt">(</span><span class="hl kwb">const</span> std<span class="hl opt">::</span>string <span class="hl opt">&amp;</span> input<span class="hl opt">,</span> <span class="hl kwb">const</span> std<span class="hl opt">::</span>string<span class="hl opt">&amp;</span> string<span class="hl opt">)</span>
<span class="hl opt">{</span>
   <span class="hl kwb">unsigned</span> size <span class="hl opt">=</span> string<span class="hl opt">.</span><span class="hl kwd">size</span><span class="hl opt">();</span>
   <span class="hl kwc">auto</span> frequencies <span class="hl opt">=</span> <span class="hl kwd">tcalculate</span><span class="hl opt">(</span>input<span class="hl opt">,</span>size<span class="hl opt">);</span>

   std<span class="hl opt">::</span>cout <span class="hl opt">&lt;&lt;</span> frequencies<span class="hl opt">[</span>string<span class="hl opt">] &lt;&lt;</span> <span class="hl str">'</span><span class="hl esc">\t</span><span class="hl str">'</span> <span class="hl opt">&lt;&lt;</span> string <span class="hl opt">&lt;&lt;</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">;</span>
<span class="hl opt">}</span>

<span class="hl kwb">int</span> <span class="hl kwd">main</span><span class="hl opt">()</span>
<span class="hl opt">{</span>
   <span class="hl kwd">init</span><span class="hl opt">();</span>
   std<span class="hl opt">::</span>string input<span class="hl opt">;</span>
   <span class="hl kwb">char</span> buffer<span class="hl opt">[</span><span class="hl num">256</span><span class="hl opt">];</span>
   <span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwd">fgets</span><span class="hl opt">(</span>buffer<span class="hl opt">,</span><span class="hl num">100</span><span class="hl opt">,</span>stdin<span class="hl opt">) &amp;&amp;</span> <span class="hl kwd">memcmp</span><span class="hl opt">(</span><span class="hl str">&quot;&gt;THREE&quot;</span><span class="hl opt">,</span>buffer<span class="hl opt">,</span><span class="hl num">6</span><span class="hl opt">)!=</span><span class="hl num">0</span><span class="hl opt">);</span>
   <span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwd">fgets</span><span class="hl opt">(</span>buffer<span class="hl opt">,</span><span class="hl num">100</span><span class="hl opt">,</span>stdin<span class="hl opt">) &amp;&amp;</span> buffer<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">] !=</span> <span class="hl str">'&gt;'</span><span class="hl opt">)</span>
   <span class="hl opt">{</span>
      <span class="hl kwa">if</span> <span class="hl opt">(</span>buffer<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">] !=</span> <span class="hl str">';'</span><span class="hl opt">)</span>
      <span class="hl opt">{</span>
         input<span class="hl opt">.</span><span class="hl kwd">append</span><span class="hl opt">(</span>buffer<span class="hl opt">,</span><span class="hl kwd">strlen</span><span class="hl opt">(</span>buffer<span class="hl opt">)-</span><span class="hl num">1</span><span class="hl opt">);</span>
      <span class="hl opt">}</span>
   <span class="hl opt">}</span>
   std<span class="hl opt">::</span><span class="hl kwd">transform</span><span class="hl opt">(</span>input<span class="hl opt">.</span><span class="hl kwd">begin</span><span class="hl opt">(),</span>input<span class="hl opt">.</span><span class="hl kwd">end</span><span class="hl opt">(),</span>input<span class="hl opt">.</span><span class="hl kwd">begin</span><span class="hl opt">(),::</span>toupper<span class="hl opt">);</span>

   std<span class="hl opt">::</span>cout <span class="hl opt">&lt;&lt;</span> std<span class="hl opt">::</span><span class="hl kwd">setprecision</span><span class="hl opt">(</span><span class="hl num">3</span><span class="hl opt">) &lt;&lt;</span> std<span class="hl opt">::</span><span class="hl kwd">setiosflags</span><span class="hl opt">(</span>std<span class="hl opt">::</span>ios<span class="hl opt">::</span>fixed<span class="hl opt">);</span>
   <span class="hl kwd">write_frequencies</span><span class="hl opt">(</span>input<span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">);</span>
   <span class="hl kwd">write_frequencies</span><span class="hl opt">(</span>input<span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">);</span>
   <span class="hl kwd">write_count</span><span class="hl opt">(</span>input<span class="hl opt">,</span> <span class="hl str">&quot;GGT&quot;</span><span class="hl opt">);</span>
   <span class="hl kwd">write_count</span><span class="hl opt">(</span>input<span class="hl opt">,</span> <span class="hl str">&quot;GGTA&quot;</span><span class="hl opt">);</span>
   <span class="hl kwd">write_count</span><span class="hl opt">(</span>input<span class="hl opt">,</span> <span class="hl str">&quot;GGTATT&quot;</span><span class="hl opt">);</span>
   <span class="hl kwd">write_count</span><span class="hl opt">(</span>input<span class="hl opt">,</span> <span class="hl str">&quot;GGTATTTTAATT&quot;</span><span class="hl opt">);</span>
   <span class="hl kwd">write_count</span><span class="hl opt">(</span>input<span class="hl opt">,</span> <span class="hl str">&quot;GGTATTTTAATTTATAGT&quot;</span><span class="hl opt">);</span>
<span class="hl opt">}</span>
