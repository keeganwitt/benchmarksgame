<span class="hl slc">#  The Computer Language Benchmarks Game</span>
<span class="hl slc">#  http://benchmarksgame.alioth.debian.org/</span>

<span class="hl slc">#  contributed by Karl FORNER</span>
<span class="hl slc"># (borrowed fasta loading routine from Kjetil Skotheim, 2005-11-29)</span>
<span class="hl slc"># Corrected again by Jesse Millikan</span>
<span class="hl slc"># revised by Kuang-che Wu</span>
<span class="hl slc"># Multi-threaded by Andrew Rodland</span>

<span class="hl kwa">use</span> strict<span class="hl opt">;</span>
<span class="hl kwa">use</span> threads<span class="hl opt">;</span>

<span class="hl kwc">my</span> <span class="hl kwb">$threads</span> <span class="hl opt">=</span> num_cpus<span class="hl opt">() ||</span> <span class="hl num">1</span><span class="hl opt">;</span>

<span class="hl kwc">my</span> <span class="hl opt">(</span><span class="hl kwb">$sequence</span><span class="hl opt">,</span> <span class="hl kwb">$begin</span><span class="hl opt">,</span> <span class="hl kwb">$end</span><span class="hl opt">);</span>
<span class="hl opt">$/ =</span> <span class="hl str">&quot;&gt;&quot;</span><span class="hl opt">;</span>
<span class="hl kwd">/^THREE/</span> <span class="hl kwc">and</span> <span class="hl kwb">$sequence</span> <span class="hl opt">=</span> <span class="hl kwc">uc</span><span class="hl opt">(</span><span class="hl kwc">join</span> <span class="hl str">&quot;&quot;</span><span class="hl opt">,</span> <span class="hl kwc">grep</span> <span class="hl opt">!</span><span class="hl kwd">/^THREE/</span><span class="hl opt">,</span> <span class="hl kwc">split</span> <span class="hl kwd">/\n+/</span><span class="hl opt">)</span> <span class="hl kwa">while</span> <span class="hl opt">&lt;</span>STDIN<span class="hl opt">&gt;;</span>

<span class="hl kwc">my</span> <span class="hl opt">(</span><span class="hl kwb">$l</span><span class="hl opt">,</span><span class="hl kwb">%h</span><span class="hl opt">,</span><span class="hl kwb">$sum</span><span class="hl opt">) = (</span><span class="hl kwc">length</span> <span class="hl kwb">$sequence</span><span class="hl opt">);</span>

<span class="hl kwa">foreach</span> <span class="hl kwc">my</span> <span class="hl kwb">$frame</span> <span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">) {</span>
  <span class="hl kwb">%h</span> <span class="hl opt">= ();</span>
  update_hash_for_frame<span class="hl opt">(</span><span class="hl kwb">$frame</span><span class="hl opt">);</span>
  <span class="hl kwb">$sum</span> <span class="hl opt">=</span> <span class="hl kwb">$l</span> <span class="hl opt">-</span> <span class="hl kwb">$frame</span> <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">;</span>
  <span class="hl kwc">printf</span> <span class="hl str">&quot;$_ %.3f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">,</span> <span class="hl kwb">$h</span><span class="hl opt">{</span><span class="hl kwb">$_</span><span class="hl opt">}*</span><span class="hl num">100</span><span class="hl opt">/</span><span class="hl kwb">$sum</span> <span class="hl kwa">for</span> <span class="hl kwc">sort</span> <span class="hl opt">{</span> <span class="hl kwb">$h</span><span class="hl opt">{</span><span class="hl kwb">$b</span><span class="hl opt">} &lt;=&gt;</span> <span class="hl kwb">$h</span><span class="hl opt">{</span><span class="hl kwb">$a</span><span class="hl opt">} ||</span> <span class="hl kwb">$a</span> <span class="hl kwc">cmp</span> <span class="hl kwb">$b</span> <span class="hl opt">}</span> <span class="hl kwc">keys</span> <span class="hl kwb">%h</span><span class="hl opt">;</span>
  <span class="hl kwc">print</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">;</span>
<span class="hl opt">}</span>

<span class="hl kwa">foreach</span> <span class="hl kwc">my</span> <span class="hl kwb">$s</span> <span class="hl opt">(</span><span class="hl kwc">qw</span><span class="hl opt">(</span>GGT GGTA GGTATT GGTATTTTAATT GGTATTTTAATTTATAGT<span class="hl opt">)) {</span>
  update_hash_for_frame<span class="hl opt">(</span><span class="hl kwc">length</span><span class="hl opt">(</span><span class="hl kwb">$s</span><span class="hl opt">));</span>
  <span class="hl kwc">printf</span> <span class="hl str">&quot;%d</span><span class="hl esc">\t</span><span class="hl str">$s</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">,</span> <span class="hl kwb">$h</span><span class="hl opt">{</span><span class="hl kwb">$s</span><span class="hl opt">};</span>
<span class="hl opt">}</span>

<span class="hl kwa">sub</span> update_hash_for_frame <span class="hl opt">{</span>
  <span class="hl kwc">my</span> <span class="hl kwb">$frame</span> <span class="hl opt">=</span> <span class="hl kwb">$_</span><span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">];</span>
  <span class="hl kwc">my</span> <span class="hl kwb">&#64;threads</span><span class="hl opt">;</span>
  <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$i</span> <span class="hl opt">(</span><span class="hl num">0</span> <span class="hl opt">..</span> <span class="hl kwb">$threads</span> <span class="hl opt">-</span> <span class="hl num">1</span><span class="hl opt">) {</span>
    <span class="hl kwa">use</span> integer<span class="hl opt">;</span>
    <span class="hl kwc">my</span> <span class="hl kwb">$begin</span> <span class="hl opt">=</span> <span class="hl kwb">$l</span> <span class="hl opt">*</span> <span class="hl kwb">$i</span> <span class="hl opt">/</span> <span class="hl kwb">$threads</span><span class="hl opt">;</span>
    <span class="hl kwc">my</span> <span class="hl kwb">$end</span> <span class="hl opt">=</span> <span class="hl kwb">$l</span> <span class="hl opt">* (</span><span class="hl kwb">$i</span> <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">) /</span> <span class="hl kwb">$threads</span> <span class="hl opt">-</span> <span class="hl num">1</span><span class="hl opt">;</span>
    <span class="hl kwa">no</span> integer<span class="hl opt">;</span>
    <span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwb">$end</span> <span class="hl opt">&gt;</span> <span class="hl kwb">$l</span> <span class="hl opt">-</span> <span class="hl kwb">$frame</span><span class="hl opt">) {</span>
      <span class="hl kwb">$end</span> <span class="hl opt">=</span> <span class="hl kwb">$l</span> <span class="hl opt">-</span> <span class="hl kwb">$frame</span><span class="hl opt">;</span>
    <span class="hl opt">}</span>
    <span class="hl kwc">push</span> <span class="hl kwb">&#64;threads</span><span class="hl opt">,</span> threads<span class="hl opt">-&gt;</span><span class="hl kwd">create</span><span class="hl opt">(</span>\<span class="hl opt">&amp;</span>update_hash_slice<span class="hl opt">,</span> <span class="hl kwb">$frame</span><span class="hl opt">,</span> <span class="hl kwb">$begin</span><span class="hl opt">,</span> <span class="hl kwb">$end</span><span class="hl opt">);</span>
  <span class="hl opt">}</span>
  <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$thread</span> <span class="hl opt">(</span><span class="hl kwb">&#64;threads</span><span class="hl opt">) {</span>
    <span class="hl kwc">my</span> <span class="hl kwb">$count</span> <span class="hl opt">=</span> <span class="hl kwb">$thread</span><span class="hl opt">-&gt;</span><span class="hl kwc">join</span><span class="hl opt">;</span>
    <span class="hl kwb">$h</span><span class="hl opt">{</span><span class="hl kwb">$_</span><span class="hl opt">} +=</span> <span class="hl kwb">$count</span><span class="hl opt">-&gt;{</span><span class="hl kwb">$_</span><span class="hl opt">}</span> <span class="hl kwa">for</span> <span class="hl kwc">keys</span> <span class="hl opt">%</span><span class="hl kwb">$count</span><span class="hl opt">;</span>
  <span class="hl opt">}</span>
<span class="hl opt">}</span>

<span class="hl kwa">sub</span> update_hash_slice <span class="hl opt">{</span>
  <span class="hl kwc">my</span> <span class="hl opt">(</span><span class="hl kwb">$frame</span><span class="hl opt">,</span> <span class="hl kwb">$begin</span><span class="hl opt">,</span> <span class="hl kwb">$end</span><span class="hl opt">) =</span> <span class="hl kwb">&#64;_</span><span class="hl opt">;</span>
  <span class="hl kwc">my</span> <span class="hl kwb">%local</span><span class="hl opt">;</span>
  <span class="hl kwb">$local</span><span class="hl opt">{</span><span class="hl kwc">substr</span><span class="hl opt">(</span><span class="hl kwb">$sequence</span><span class="hl opt">,</span><span class="hl kwb">$_</span><span class="hl opt">,</span><span class="hl kwb">$frame</span><span class="hl opt">)}++</span> <span class="hl kwa">for</span> <span class="hl kwb">$begin</span> <span class="hl opt">..</span> <span class="hl kwb">$end</span><span class="hl opt">;</span>
  <span class="hl kwa">return</span> \<span class="hl kwb">%local</span><span class="hl opt">;</span>
<span class="hl opt">}</span>

<span class="hl kwa">sub</span> num_cpus <span class="hl opt">{</span>
  <span class="hl kwc">open my</span> <span class="hl kwb">$fh</span><span class="hl opt">,</span> <span class="hl str">'&lt;/proc/cpuinfo'</span> <span class="hl kwc">or</span> <span class="hl kwa">return</span><span class="hl opt">;</span>
  <span class="hl kwc">my</span> <span class="hl kwb">$cpus</span><span class="hl opt">;</span>
  <span class="hl kwa">while</span> <span class="hl opt">(&lt;</span><span class="hl kwb">$fh</span><span class="hl opt">&gt;) {</span>
    <span class="hl kwb">$cpus</span> <span class="hl opt">++</span> <span class="hl kwa">if</span> <span class="hl kwd">/^processor\s+:/</span><span class="hl opt">;</span>
  <span class="hl opt">}</span>
  <span class="hl kwa">return</span> <span class="hl kwb">$cpus</span><span class="hl opt">;</span>
<span class="hl opt">}</span>
