<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"></span>
<span class="hl com">   Adapted by Pascal Fresnay from Java version that was:</span>
<span class="hl com">      contributed by Michael Barker</span>
<span class="hl com">      based on a contribution by Luzius Meisser</span>
<span class="hl com">*/</span>

<span class="hl com">/**</span>
<span class="hl com"> * This implementation uses standard C# threading (native threads).</span>
<span class="hl com"> *</span>
<span class="hl com"> * This implementation simply adds the new functionality to the orginal</span>
<span class="hl com"> * implementation by Luzius Meisser from old chameneos task.  The interesting</span>
<span class="hl com"> * part of this implementation, is that while a creature is waiting it does not</span>
<span class="hl com"> * block its thread, rather it spins in a loop using a Thread.Sleep(0).</span>
<span class="hl com"> */</span>


<span class="hl kwa">using</span> System<span class="hl opt">;</span>
<span class="hl kwa">using</span> System<span class="hl opt">.</span>Threading<span class="hl opt">;</span>
<span class="hl kwa">using</span> System<span class="hl opt">.</span>Text<span class="hl opt">;</span>
<span class="hl kwa">public class</span> chameneosredux <span class="hl opt">{</span>

   <span class="hl kwa">public</span> <span class="hl kwb">enum</span> Colour <span class="hl opt">{</span>
      blue<span class="hl opt">,</span>
      red<span class="hl opt">,</span>
      yellow
   <span class="hl opt">}</span>

   <span class="hl kwa">private static</span> Colour <span class="hl kwd">doCompliment</span><span class="hl opt">(</span>Colour c1<span class="hl opt">,</span> Colour c2<span class="hl opt">) {</span>
      <span class="hl kwa">switch</span> <span class="hl opt">(</span>c1<span class="hl opt">) {</span>
      <span class="hl kwa">case</span> Colour<span class="hl opt">.</span>blue<span class="hl opt">:</span>
         <span class="hl kwa">switch</span> <span class="hl opt">(</span>c2<span class="hl opt">) {</span>
         <span class="hl kwa">case</span> Colour<span class="hl opt">.</span>blue<span class="hl opt">:</span>
            <span class="hl kwa">return</span> Colour<span class="hl opt">.</span>blue<span class="hl opt">;</span>
         <span class="hl kwa">case</span> Colour<span class="hl opt">.</span>red<span class="hl opt">:</span>
            <span class="hl kwa">return</span> Colour<span class="hl opt">.</span>yellow<span class="hl opt">;</span>
         <span class="hl kwa">case</span> Colour<span class="hl opt">.</span>yellow<span class="hl opt">:</span>
            <span class="hl kwa">return</span> Colour<span class="hl opt">.</span>red<span class="hl opt">;</span>
         <span class="hl kwa">default</span><span class="hl opt">:</span> <span class="hl kwa">break</span><span class="hl opt">;</span>
         <span class="hl opt">}</span>
         <span class="hl kwa">break</span><span class="hl opt">;</span>
      <span class="hl kwa">case</span> Colour<span class="hl opt">.</span>red<span class="hl opt">:</span>
         <span class="hl kwa">switch</span> <span class="hl opt">(</span>c2<span class="hl opt">) {</span>
         <span class="hl kwa">case</span> Colour<span class="hl opt">.</span>blue<span class="hl opt">:</span>
            <span class="hl kwa">return</span> Colour<span class="hl opt">.</span>yellow<span class="hl opt">;</span>
         <span class="hl kwa">case</span> Colour<span class="hl opt">.</span>red<span class="hl opt">:</span>
            <span class="hl kwa">return</span> Colour<span class="hl opt">.</span>red<span class="hl opt">;</span>
         <span class="hl kwa">case</span> Colour<span class="hl opt">.</span>yellow<span class="hl opt">:</span>
            <span class="hl kwa">return</span> Colour<span class="hl opt">.</span>blue<span class="hl opt">;</span>
         <span class="hl kwa">default</span><span class="hl opt">:</span> <span class="hl kwa">break</span><span class="hl opt">;</span>
         <span class="hl opt">}</span>
         <span class="hl kwa">break</span><span class="hl opt">;</span>
      <span class="hl kwa">case</span> Colour<span class="hl opt">.</span>yellow<span class="hl opt">:</span>
         <span class="hl kwa">switch</span> <span class="hl opt">(</span>c2<span class="hl opt">) {</span>
         <span class="hl kwa">case</span> Colour<span class="hl opt">.</span>blue<span class="hl opt">:</span>
            <span class="hl kwa">return</span> Colour<span class="hl opt">.</span>red<span class="hl opt">;</span>
         <span class="hl kwa">case</span> Colour<span class="hl opt">.</span>red<span class="hl opt">:</span>
            <span class="hl kwa">return</span> Colour<span class="hl opt">.</span>blue<span class="hl opt">;</span>
         <span class="hl kwa">case</span> Colour<span class="hl opt">.</span>yellow<span class="hl opt">:</span>
            <span class="hl kwa">return</span> Colour<span class="hl opt">.</span>yellow<span class="hl opt">;</span>
         <span class="hl kwa">default</span><span class="hl opt">:</span> <span class="hl kwa">break</span><span class="hl opt">;</span>
         <span class="hl opt">}</span>
         <span class="hl kwa">break</span><span class="hl opt">;</span>
      <span class="hl kwa">default</span><span class="hl opt">:</span> <span class="hl kwa">break</span><span class="hl opt">;</span>
      <span class="hl opt">}</span>
      <span class="hl kwa">throw new</span> <span class="hl kwd">Exception</span><span class="hl opt">();</span>
   <span class="hl opt">}</span>

   <span class="hl kwa">sealed class</span> MeetingPlace <span class="hl opt">{</span>

      <span class="hl kwa">private</span> <span class="hl kwb">int</span> meetingsLeft<span class="hl opt">;</span>

      <span class="hl kwa">public</span> <span class="hl kwd">MeetingPlace</span><span class="hl opt">(</span><span class="hl kwb">int</span> meetings<span class="hl opt">) {</span>
         <span class="hl kwa">this</span><span class="hl opt">.</span>meetingsLeft <span class="hl opt">=</span> meetings<span class="hl opt">;</span>
      <span class="hl opt">}</span>

      <span class="hl kwa">private</span> Colour? firstColour <span class="hl opt">=</span> <span class="hl kwa">null</span><span class="hl opt">;</span>
      <span class="hl kwa">private</span> <span class="hl kwb">int</span> firstId <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
      Future current<span class="hl opt">;</span>

      <span class="hl kwa">public</span> Pair <span class="hl kwd">meet</span><span class="hl opt">(</span><span class="hl kwb">int</span> id<span class="hl opt">,</span> Colour c<span class="hl opt">){</span>
         Future newPair<span class="hl opt">;</span>
         <span class="hl kwd">lock</span> <span class="hl opt">(</span><span class="hl kwa">this</span><span class="hl opt">) {</span>
            <span class="hl kwa">if</span> <span class="hl opt">(</span>meetingsLeft <span class="hl opt">==</span> <span class="hl num">0</span><span class="hl opt">) {</span>
               <span class="hl kwa">throw new</span> <span class="hl kwd">Exception</span><span class="hl opt">(</span><span class="hl str">&quot;Finished&quot;</span><span class="hl opt">);</span>
            <span class="hl opt">}</span> <span class="hl kwa">else</span> <span class="hl opt">{</span>
               <span class="hl kwa">if</span> <span class="hl opt">(</span>firstColour <span class="hl opt">==</span> <span class="hl kwa">null</span><span class="hl opt">) {</span>
                  firstColour <span class="hl opt">=</span> c<span class="hl opt">;</span>
                  firstId <span class="hl opt">=</span> id<span class="hl opt">;</span>
                  current <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">Future</span><span class="hl opt">();</span>
               <span class="hl opt">}</span> <span class="hl kwa">else</span> <span class="hl opt">{</span>
                  Colour newColour <span class="hl opt">=</span> <span class="hl kwd">doCompliment</span><span class="hl opt">(</span>c<span class="hl opt">,</span> firstColour<span class="hl opt">.</span>Value<span class="hl opt">);</span>
                  current<span class="hl opt">.</span>Item <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">Pair</span><span class="hl opt">(</span>id <span class="hl opt">==</span> firstId<span class="hl opt">,</span> newColour<span class="hl opt">);</span>
                  firstColour <span class="hl opt">=</span> <span class="hl kwa">null</span><span class="hl opt">;</span>
                  meetingsLeft<span class="hl opt">--;</span>
               <span class="hl opt">}</span>
               newPair <span class="hl opt">=</span> current<span class="hl opt">;</span>
            <span class="hl opt">}</span>
         <span class="hl opt">}</span>
         <span class="hl kwa">return</span> newPair<span class="hl opt">.</span>Item<span class="hl opt">;</span>
      <span class="hl opt">}</span>
   <span class="hl opt">}</span>

   <span class="hl kwa">public sealed class</span> Future <span class="hl opt">{</span>

      <span class="hl kwa">private</span> Pair? t<span class="hl opt">;</span>
      
      <span class="hl kwa">public</span> Pair Item
      <span class="hl opt">{</span>
         <span class="hl kwa">get</span>
         <span class="hl opt">{</span>
            <span class="hl kwa">while</span> <span class="hl opt">(</span>t <span class="hl opt">==</span> <span class="hl kwa">null</span><span class="hl opt">)</span>
            <span class="hl opt">{</span>
               Thread<span class="hl opt">.</span><span class="hl kwd">Sleep</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">);</span>
            <span class="hl opt">}</span>
            <span class="hl kwa">return</span> t<span class="hl opt">.</span>Value<span class="hl opt">;</span>
         <span class="hl opt">}</span>
         <span class="hl slc">// need synchronization ?</span>
         <span class="hl kwa">set</span>
         <span class="hl opt">{</span>
            t <span class="hl opt">=</span> <span class="hl kwa">value</span><span class="hl opt">;</span>
         <span class="hl opt">}</span>
      <span class="hl opt">}</span>
   <span class="hl opt">}</span>

   <span class="hl kwa">sealed class</span> Creature<span class="hl opt">{</span>

      <span class="hl kwa">private readonly</span> MeetingPlace place<span class="hl opt">;</span>
      <span class="hl kwa">private</span> <span class="hl kwb">int</span> count <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
      <span class="hl kwa">private</span> <span class="hl kwb">int</span> sameCount <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
      <span class="hl kwa">private</span> Colour colour<span class="hl opt">;</span>
      <span class="hl kwa">private</span> <span class="hl kwb">int</span> id<span class="hl opt">;</span>

      <span class="hl kwa">public</span> <span class="hl kwd">Creature</span><span class="hl opt">(</span>MeetingPlace place<span class="hl opt">,</span> Colour colour<span class="hl opt">) {</span>
         <span class="hl kwa">this</span><span class="hl opt">.</span>place <span class="hl opt">=</span> place<span class="hl opt">;</span>
         <span class="hl kwa">this</span><span class="hl opt">.</span>id <span class="hl opt">=</span> <span class="hl kwa">this</span><span class="hl opt">.</span><span class="hl kwd">GetHashCode</span><span class="hl opt">();</span>
         <span class="hl kwa">this</span><span class="hl opt">.</span>colour <span class="hl opt">=</span> colour<span class="hl opt">;</span>
      <span class="hl opt">}</span>

      <span class="hl kwa">public</span> <span class="hl kwb">void</span> <span class="hl kwd">run</span><span class="hl opt">() {</span>
         <span class="hl kwa">try</span> <span class="hl opt">{</span>

            <span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">true</span><span class="hl opt">) {</span>
               Pair p <span class="hl opt">=</span> place<span class="hl opt">.</span><span class="hl kwd">meet</span><span class="hl opt">(</span>id<span class="hl opt">,</span> colour<span class="hl opt">);</span>
               colour <span class="hl opt">=</span> p<span class="hl opt">.</span>colour<span class="hl opt">;</span>
               <span class="hl kwa">if</span> <span class="hl opt">(</span>p<span class="hl opt">.</span>sameId<span class="hl opt">) {</span>
                  sameCount<span class="hl opt">++;</span>
               <span class="hl opt">}</span>
               count<span class="hl opt">++;</span>
            <span class="hl opt">}</span>

         <span class="hl opt">}</span> <span class="hl kwa">catch</span> <span class="hl opt">(</span>Exception<span class="hl opt">) {}</span>
      <span class="hl opt">}</span>

      <span class="hl kwa">public</span> <span class="hl kwb">int</span> Count <span class="hl opt">{</span>
         <span class="hl kwa">get</span>
         <span class="hl opt">{</span>
            <span class="hl kwa">return</span> count<span class="hl opt">;</span>
         <span class="hl opt">}</span>
      <span class="hl opt">}</span>

      <span class="hl kwa">public override</span> String <span class="hl kwd">ToString</span><span class="hl opt">() {</span>
         <span class="hl kwa">return</span> count<span class="hl opt">.</span><span class="hl kwd">ToString</span><span class="hl opt">() +</span> <span class="hl kwd">getNumber</span><span class="hl opt">(</span>sameCount<span class="hl opt">);</span>
      <span class="hl opt">}</span>
   <span class="hl opt">}</span>

   <span class="hl kwa">private static</span> <span class="hl kwb">void</span> <span class="hl kwd">run</span><span class="hl opt">(</span><span class="hl kwb">int</span> n<span class="hl opt">,</span> params Colour<span class="hl opt">[]</span> colours<span class="hl opt">) {</span>
      MeetingPlace place <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">MeetingPlace</span><span class="hl opt">(</span>n<span class="hl opt">);</span>
      Creature<span class="hl opt">[]</span> creatures <span class="hl opt">=</span> <span class="hl kwa">new</span> Creature<span class="hl opt">[</span>colours<span class="hl opt">.</span>Length<span class="hl opt">];</span>
      <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwb">int</span> i <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> i <span class="hl opt">&lt;</span> colours<span class="hl opt">.</span>Length<span class="hl opt">;</span> i<span class="hl opt">++) {</span>
         Console<span class="hl opt">.</span><span class="hl kwd">Write</span><span class="hl opt">(</span><span class="hl str">&quot; &quot;</span> <span class="hl opt">+</span> colours<span class="hl opt">[</span>i<span class="hl opt">]);</span>
         creatures<span class="hl opt">[</span>i<span class="hl opt">] =</span> <span class="hl kwa">new</span> <span class="hl kwd">Creature</span><span class="hl opt">(</span>place<span class="hl opt">,</span> colours<span class="hl opt">[</span>i<span class="hl opt">]);</span>
      <span class="hl opt">}</span>
      Console<span class="hl opt">.</span><span class="hl kwd">WriteLine</span><span class="hl opt">();</span>
      Thread<span class="hl opt">[]</span> ts <span class="hl opt">=</span> <span class="hl kwa">new</span> Thread<span class="hl opt">[</span>colours<span class="hl opt">.</span>Length<span class="hl opt">];</span>
      <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwb">int</span> i <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> i <span class="hl opt">&lt;</span> colours<span class="hl opt">.</span>Length<span class="hl opt">;</span> i<span class="hl opt">++) {</span>
         ts<span class="hl opt">[</span>i<span class="hl opt">] =</span> <span class="hl kwa">new</span> <span class="hl kwd">Thread</span><span class="hl opt">(</span>creatures<span class="hl opt">[</span>i<span class="hl opt">].</span>run<span class="hl opt">);</span>
         ts<span class="hl opt">[</span>i<span class="hl opt">].</span><span class="hl kwd">Start</span><span class="hl opt">();</span>
      <span class="hl opt">}</span>

      <span class="hl kwa">foreach</span> <span class="hl opt">(</span>Thread t <span class="hl kwa">in</span> ts<span class="hl opt">) {</span>
            t<span class="hl opt">.</span><span class="hl kwd">Join</span><span class="hl opt">();</span>
      <span class="hl opt">}</span>

      <span class="hl kwb">int</span> total <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
      <span class="hl kwa">foreach</span> <span class="hl opt">(</span>Creature creature <span class="hl kwa">in</span> creatures<span class="hl opt">) {</span>
         Console<span class="hl opt">.</span><span class="hl kwd">WriteLine</span><span class="hl opt">(</span>creature<span class="hl opt">);</span>
         total <span class="hl opt">+=</span> creature<span class="hl opt">.</span>Count<span class="hl opt">;</span>
      <span class="hl opt">}</span>
      Console<span class="hl opt">.</span><span class="hl kwd">WriteLine</span><span class="hl opt">(</span><span class="hl kwd">getNumber</span><span class="hl opt">(</span>total<span class="hl opt">));</span>
      Console<span class="hl opt">.</span><span class="hl kwd">WriteLine</span><span class="hl opt">();</span>
   <span class="hl opt">}</span>

   <span class="hl kwa">public static</span> <span class="hl kwb">void</span> <span class="hl kwd">Main</span><span class="hl opt">(</span>String<span class="hl opt">[]</span> args<span class="hl opt">) {</span>

      <span class="hl kwb">int</span> n <span class="hl opt">=</span> <span class="hl num">600</span><span class="hl opt">;</span>
      <span class="hl kwa">if</span><span class="hl opt">(</span>args<span class="hl opt">.</span>Length <span class="hl opt">&gt;</span> <span class="hl num">0</span><span class="hl opt">)</span>
         n <span class="hl opt">=</span> Int32<span class="hl opt">.</span><span class="hl kwd">Parse</span><span class="hl opt">(</span>args<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">]);</span>

      <span class="hl kwd">printColours</span><span class="hl opt">();</span>
      Console<span class="hl opt">.</span><span class="hl kwd">WriteLine</span><span class="hl opt">();</span>
      <span class="hl kwd">run</span><span class="hl opt">(</span>n<span class="hl opt">,</span> Colour<span class="hl opt">.</span>blue<span class="hl opt">,</span> Colour<span class="hl opt">.</span>red<span class="hl opt">,</span> Colour<span class="hl opt">.</span>yellow<span class="hl opt">);</span>
      <span class="hl kwd">run</span><span class="hl opt">(</span>n<span class="hl opt">,</span> Colour<span class="hl opt">.</span>blue<span class="hl opt">,</span> Colour<span class="hl opt">.</span>red<span class="hl opt">,</span> Colour<span class="hl opt">.</span>yellow<span class="hl opt">,</span> Colour<span class="hl opt">.</span>red<span class="hl opt">,</span> Colour<span class="hl opt">.</span>yellow<span class="hl opt">,</span>
            Colour<span class="hl opt">.</span>blue<span class="hl opt">,</span> Colour<span class="hl opt">.</span>red<span class="hl opt">,</span> Colour<span class="hl opt">.</span>yellow<span class="hl opt">,</span> Colour<span class="hl opt">.</span>red<span class="hl opt">,</span> Colour<span class="hl opt">.</span>blue<span class="hl opt">);</span>
   <span class="hl opt">}</span>

   <span class="hl kwa">public</span> <span class="hl kwb">struct</span> Pair <span class="hl opt">{</span>
      <span class="hl kwa">public readonly</span> <span class="hl kwb">bool</span> sameId<span class="hl opt">;</span>
      <span class="hl kwa">public readonly</span> Colour colour<span class="hl opt">;</span>

      <span class="hl kwa">public</span> <span class="hl kwd">Pair</span><span class="hl opt">(</span><span class="hl kwb">bool</span> sameId<span class="hl opt">,</span> Colour c<span class="hl opt">) {</span>
         <span class="hl kwa">this</span><span class="hl opt">.</span>sameId <span class="hl opt">=</span> sameId<span class="hl opt">;</span>
         <span class="hl kwa">this</span><span class="hl opt">.</span>colour <span class="hl opt">=</span> c<span class="hl opt">;</span>
      <span class="hl opt">}</span>
   <span class="hl opt">}</span>

   <span class="hl kwa">private static</span> String<span class="hl opt">[]</span> NUMBERS <span class="hl opt">= {</span>
      <span class="hl str">&quot;zero&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;one&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;two&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;three&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;four&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;five&quot;</span><span class="hl opt">,</span>
      <span class="hl str">&quot;six&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;seven&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;eight&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;nine&quot;</span>
   <span class="hl opt">};</span>

   <span class="hl kwa">private static</span> String <span class="hl kwd">getNumber</span><span class="hl opt">(</span><span class="hl kwb">int</span> n<span class="hl opt">) {</span>
      StringBuilder sb <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">StringBuilder</span><span class="hl opt">();</span>
      String nStr <span class="hl opt">=</span> n<span class="hl opt">.</span><span class="hl kwd">ToString</span><span class="hl opt">();</span>
      <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwb">int</span> i <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> i <span class="hl opt">&lt;</span> nStr<span class="hl opt">.</span>Length<span class="hl opt">;</span> i<span class="hl opt">++) {</span>
         sb<span class="hl opt">.</span><span class="hl kwd">Append</span><span class="hl opt">(</span><span class="hl str">&quot; &quot;</span><span class="hl opt">);</span>
         sb<span class="hl opt">.</span><span class="hl kwd">Append</span><span class="hl opt">(</span>NUMBERS<span class="hl opt">[(</span><span class="hl kwb">int</span><span class="hl opt">)</span>Char<span class="hl opt">.</span><span class="hl kwd">GetNumericValue</span><span class="hl opt">(</span>nStr<span class="hl opt">[</span>i<span class="hl opt">])]);</span>
      <span class="hl opt">}</span>

      <span class="hl kwa">return</span> sb<span class="hl opt">.</span><span class="hl kwd">ToString</span><span class="hl opt">();</span>
   <span class="hl opt">}</span>

   <span class="hl kwa">private static</span> <span class="hl kwb">void</span> <span class="hl kwd">printColours</span><span class="hl opt">() {</span>
      <span class="hl kwd">printColours</span><span class="hl opt">(</span>Colour<span class="hl opt">.</span>blue<span class="hl opt">,</span> Colour<span class="hl opt">.</span>blue<span class="hl opt">);</span>
      <span class="hl kwd">printColours</span><span class="hl opt">(</span>Colour<span class="hl opt">.</span>blue<span class="hl opt">,</span> Colour<span class="hl opt">.</span>red<span class="hl opt">);</span>
      <span class="hl kwd">printColours</span><span class="hl opt">(</span>Colour<span class="hl opt">.</span>blue<span class="hl opt">,</span> Colour<span class="hl opt">.</span>yellow<span class="hl opt">);</span>
      <span class="hl kwd">printColours</span><span class="hl opt">(</span>Colour<span class="hl opt">.</span>red<span class="hl opt">,</span> Colour<span class="hl opt">.</span>blue<span class="hl opt">);</span>
      <span class="hl kwd">printColours</span><span class="hl opt">(</span>Colour<span class="hl opt">.</span>red<span class="hl opt">,</span> Colour<span class="hl opt">.</span>red<span class="hl opt">);</span>
      <span class="hl kwd">printColours</span><span class="hl opt">(</span>Colour<span class="hl opt">.</span>red<span class="hl opt">,</span> Colour<span class="hl opt">.</span>yellow<span class="hl opt">);</span>
      <span class="hl kwd">printColours</span><span class="hl opt">(</span>Colour<span class="hl opt">.</span>yellow<span class="hl opt">,</span> Colour<span class="hl opt">.</span>blue<span class="hl opt">);</span>
      <span class="hl kwd">printColours</span><span class="hl opt">(</span>Colour<span class="hl opt">.</span>yellow<span class="hl opt">,</span> Colour<span class="hl opt">.</span>red<span class="hl opt">);</span>
      <span class="hl kwd">printColours</span><span class="hl opt">(</span>Colour<span class="hl opt">.</span>yellow<span class="hl opt">,</span> Colour<span class="hl opt">.</span>yellow<span class="hl opt">);</span>
   <span class="hl opt">}</span>

   <span class="hl kwa">private static</span> <span class="hl kwb">void</span> <span class="hl kwd">printColours</span><span class="hl opt">(</span>Colour c1<span class="hl opt">,</span> Colour c2<span class="hl opt">) {</span>
      Console<span class="hl opt">.</span><span class="hl kwd">WriteLine</span><span class="hl opt">(</span>c1 <span class="hl opt">+</span> <span class="hl str">&quot; + &quot;</span> <span class="hl opt">+</span> c2 <span class="hl opt">+</span> <span class="hl str">&quot; -&gt; &quot;</span> <span class="hl opt">+</span> <span class="hl kwd">doCompliment</span><span class="hl opt">(</span>c1<span class="hl opt">,</span> c2<span class="hl opt">));</span>
   <span class="hl opt">}</span>


<span class="hl opt">}</span>

