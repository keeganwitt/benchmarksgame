<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"></span>
<span class="hl com">   Contributed by Eric Willigers</span>
<span class="hl com">   Port of Java implementation by Michael Barker and Luzius Meisser</span>
<span class="hl com">*/</span>

<span class="hl kwa">object</span> Colours <span class="hl kwa">extends</span> Enumeration <span class="hl opt">{</span>
   <span class="hl kwa">val</span> Blue <span class="hl opt">=</span> <span class="hl kwd">Value</span><span class="hl opt">(</span><span class="hl str">&quot;blue&quot;</span><span class="hl opt">)</span>
   <span class="hl kwa">val</span> Red <span class="hl opt">=</span> <span class="hl kwd">Value</span><span class="hl opt">(</span><span class="hl str">&quot;red&quot;</span><span class="hl opt">)</span>
   <span class="hl kwa">val</span> Yellow <span class="hl opt">=</span> <span class="hl kwd">Value</span><span class="hl opt">(</span><span class="hl str">&quot;yellow&quot;</span><span class="hl opt">)</span>
<span class="hl opt">}</span>

<span class="hl kwa">import</span> Colours<span class="hl opt">.{</span>Blue<span class="hl opt">,</span> Red<span class="hl opt">,</span> Yellow<span class="hl opt">,</span> Value <span class="hl opt">=&gt;</span> Colour<span class="hl opt">}</span>

<span class="hl kwa">final class</span> <span class="hl kwd">Creature</span><span class="hl opt">(</span>place<span class="hl opt">:</span> MeetingPlace<span class="hl opt">,</span> <span class="hl kwa">var</span> colour<span class="hl opt">:</span> Colour<span class="hl opt">)</span> <span class="hl kwa">extends</span> Runnable <span class="hl opt">{</span>
   <span class="hl kwa">val</span> id <span class="hl opt">=</span> System<span class="hl opt">.</span><span class="hl kwd">identityHashCode</span><span class="hl opt">(</span><span class="hl kwa">this</span><span class="hl opt">)</span>
   <span class="hl kwa">var</span> sameCount <span class="hl opt">=</span> <span class="hl num">0</span>
   <span class="hl kwa">var</span> count <span class="hl opt">=</span> <span class="hl num">0</span>

   <span class="hl kwa">def</span> <span class="hl kwd">run</span><span class="hl opt">() =</span> <span class="hl kwa">try</span> <span class="hl opt">{</span>
      <span class="hl kwa">while</span> <span class="hl opt">(</span>true<span class="hl opt">) {</span>
         <span class="hl kwa">val</span> p <span class="hl opt">=</span> place<span class="hl opt">.</span><span class="hl kwd">meet</span><span class="hl opt">(</span>id<span class="hl opt">,</span> colour<span class="hl opt">)</span>
         colour <span class="hl opt">=</span> p<span class="hl opt">.</span>colour
         <span class="hl kwa">if</span> <span class="hl opt">(</span>p<span class="hl opt">.</span>sameId<span class="hl opt">)</span>
            sameCount <span class="hl opt">+=</span> <span class="hl num">1</span>
         count <span class="hl opt">+=</span><span class="hl num">1</span>
      <span class="hl opt">}</span>
   <span class="hl opt">}</span> <span class="hl kwa">catch</span> <span class="hl opt">{</span>
      <span class="hl kwa">case</span> _<span class="hl opt">:</span> Exception <span class="hl opt">=&gt; ()</span>
   <span class="hl opt">}</span>

   <span class="hl kwa">override def</span> toString <span class="hl opt">=</span> String<span class="hl opt">.</span><span class="hl kwd">valueOf</span><span class="hl opt">(</span>count<span class="hl opt">)+</span><span class="hl str">&quot; &quot;</span><span class="hl opt">+</span>chameneosredux<span class="hl opt">.</span><span class="hl kwd">getNumber</span><span class="hl opt">(</span>sameCount<span class="hl opt">)</span>
<span class="hl opt">}</span>

<span class="hl kwa">final class</span> <span class="hl kwd">MeetingPlace</span><span class="hl opt">(</span><span class="hl kwa">var</span> meetingsLeft<span class="hl opt">:</span> Int<span class="hl opt">) {</span>
   <span class="hl kwa">var</span> firstColour<span class="hl opt">:</span> Option<span class="hl opt">[</span>Colour<span class="hl opt">] =</span> None
   <span class="hl kwa">var</span> firstId <span class="hl opt">=</span> <span class="hl num">0</span>
   <span class="hl kwa">var</span> current<span class="hl opt">:</span> Future <span class="hl opt">=</span> _

   <span class="hl kwa">def</span> <span class="hl kwd">meet</span><span class="hl opt">(</span>id<span class="hl opt">:</span> Int<span class="hl opt">,</span> c<span class="hl opt">:</span> Colour<span class="hl opt">) =</span> <span class="hl kwa">synchronized</span> <span class="hl opt">{</span>
      <span class="hl kwa">if</span> <span class="hl opt">(</span>meetingsLeft <span class="hl opt">==</span> <span class="hl num">0</span><span class="hl opt">) {</span>
         <span class="hl kwa">throw new</span> <span class="hl kwd">Exception</span><span class="hl opt">(</span><span class="hl str">&quot;Finished&quot;</span><span class="hl opt">)</span>
      <span class="hl opt">}</span> <span class="hl kwa">else</span> <span class="hl opt">{</span>
         <span class="hl kwa">if</span> <span class="hl opt">(</span>firstColour<span class="hl opt">.</span>isEmpty<span class="hl opt">) {</span>
            firstColour <span class="hl opt">=</span> <span class="hl kwd">Some</span><span class="hl opt">(</span>c<span class="hl opt">)</span>
            firstId <span class="hl opt">=</span> id
            current <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">Future</span><span class="hl opt">()</span>
         <span class="hl opt">}</span> <span class="hl kwa">else</span> <span class="hl opt">{</span>
            current<span class="hl opt">.</span><span class="hl kwd">setItem</span><span class="hl opt">(</span><span class="hl kwa">new</span> <span class="hl kwd">Pair</span><span class="hl opt">(</span>id <span class="hl opt">==</span> firstId<span class="hl opt">,</span> chameneosredux<span class="hl opt">.</span><span class="hl kwd">doCompliment</span><span class="hl opt">(</span>c<span class="hl opt">,</span> firstColour<span class="hl opt">.</span>get<span class="hl opt">)))</span>
            firstColour <span class="hl opt">=</span> None
            meetingsLeft <span class="hl opt">-=</span> <span class="hl num">1</span>
         <span class="hl opt">}</span>

         current
      <span class="hl opt">}</span>
   <span class="hl opt">}.</span><span class="hl kwd">getItem</span><span class="hl opt">()</span>
<span class="hl opt">}</span>

<span class="hl kwa">final class</span> Future <span class="hl opt">{</span>
   <span class="hl kwc">&#64;volatile</span> <span class="hl kwa">var</span> p<span class="hl opt">:</span> Pair <span class="hl opt">=</span> _

   <span class="hl kwa">def</span> <span class="hl kwd">getItem</span><span class="hl opt">() = {</span>
      <span class="hl kwa">while</span> <span class="hl opt">(</span>p <span class="hl opt">==</span> null<span class="hl opt">)</span>
         Thread<span class="hl opt">.</span>`<span class="hl kwa">yield</span>`<span class="hl opt">()</span>   
      p
   <span class="hl opt">}</span>

   <span class="hl kwa">def</span> <span class="hl kwd">setItem</span><span class="hl opt">(</span>_p<span class="hl opt">:</span> Pair<span class="hl opt">) {</span>
      <span class="hl kwa">this</span><span class="hl opt">.</span>p <span class="hl opt">=</span> _p
   <span class="hl opt">}</span>
<span class="hl opt">}</span>

<span class="hl kwa">final case class</span> <span class="hl kwd">Pair</span><span class="hl opt">(</span>sameId<span class="hl opt">:</span> Boolean<span class="hl opt">,</span> colour<span class="hl opt">:</span> Colour<span class="hl opt">)</span>

<span class="hl kwa">object</span> chameneosredux <span class="hl opt">{</span>
   <span class="hl kwa">def</span> <span class="hl kwd">doCompliment</span><span class="hl opt">(</span>c1<span class="hl opt">:</span> Colour<span class="hl opt">,</span> c2<span class="hl opt">:</span> Colour<span class="hl opt">) = (</span>c1<span class="hl opt">,</span> c2<span class="hl opt">)</span> match <span class="hl opt">{</span>
      <span class="hl kwa">case</span> <span class="hl opt">(</span>Blue<span class="hl opt">,</span> Blue<span class="hl opt">) =&gt;</span> Blue   
      <span class="hl kwa">case</span> <span class="hl opt">(</span>Blue<span class="hl opt">,</span> Red<span class="hl opt">) =&gt;</span> Yellow   
      <span class="hl kwa">case</span> <span class="hl opt">(</span>Blue<span class="hl opt">,</span> Yellow<span class="hl opt">) =&gt;</span> Red   
      <span class="hl kwa">case</span> <span class="hl opt">(</span>Red<span class="hl opt">,</span> Blue<span class="hl opt">) =&gt;</span> Yellow
      <span class="hl kwa">case</span> <span class="hl opt">(</span>Red<span class="hl opt">,</span> Red<span class="hl opt">) =&gt;</span> Red
      <span class="hl kwa">case</span> <span class="hl opt">(</span>Red<span class="hl opt">,</span> Yellow<span class="hl opt">) =&gt;</span> Blue   
      <span class="hl kwa">case</span> <span class="hl opt">(</span>Yellow<span class="hl opt">,</span> Blue<span class="hl opt">) =&gt;</span> Red   
      <span class="hl kwa">case</span> <span class="hl opt">(</span>Yellow<span class="hl opt">,</span> Red<span class="hl opt">) =&gt;</span> Blue
      <span class="hl kwa">case</span> <span class="hl opt">(</span>Yellow<span class="hl opt">,</span> Yellow<span class="hl opt">) =&gt;</span> Yellow
   <span class="hl opt">}</span>

   <span class="hl kwa">def</span> <span class="hl kwd">run</span><span class="hl opt">(</span>n<span class="hl opt">:</span> Int<span class="hl opt">,</span> colours<span class="hl opt">:</span> Colour<span class="hl opt">*) {</span>
      <span class="hl kwa">val</span> place <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">MeetingPlace</span><span class="hl opt">(</span>n<span class="hl opt">)</span>
      colours<span class="hl opt">.</span>foreach <span class="hl opt">{</span> c <span class="hl opt">=&gt;</span> <span class="hl kwd">print</span><span class="hl opt">(</span><span class="hl str">&quot; &quot;</span><span class="hl opt">+</span>c<span class="hl opt">) }</span>
      <span class="hl kwa">val</span> creatures <span class="hl opt">=</span> colours<span class="hl opt">.</span>map <span class="hl opt">{</span> <span class="hl kwa">new</span> <span class="hl kwd">Creature</span><span class="hl opt">(</span>place<span class="hl opt">,</span> _<span class="hl opt">) }.</span>toArray
      <span class="hl kwd">println</span><span class="hl opt">()</span>
      <span class="hl kwa">val</span> ts <span class="hl opt">=</span> creatures<span class="hl opt">.</span>map <span class="hl opt">{</span> <span class="hl kwa">new</span> <span class="hl kwd">Thread</span><span class="hl opt">(</span>_<span class="hl opt">) }</span>
      ts<span class="hl opt">.</span>foreach <span class="hl opt">{</span> _<span class="hl opt">.</span><span class="hl kwd">start</span><span class="hl opt">() }</span>
      ts<span class="hl opt">.</span>foreach <span class="hl opt">{</span> _<span class="hl opt">.</span><span class="hl kwd">join</span><span class="hl opt">() }</span>
      creatures<span class="hl opt">.</span>foreach <span class="hl opt">{</span> <span class="hl kwd">println</span><span class="hl opt">(</span>_<span class="hl opt">) }</span>
      <span class="hl kwd">println</span><span class="hl opt">(</span><span class="hl kwd">getNumber</span><span class="hl opt">(</span>creatures<span class="hl opt">.</span><span class="hl kwd">foldLeft</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">){</span>_ <span class="hl opt">+</span> _<span class="hl opt">.</span>count<span class="hl opt">}))</span>
      <span class="hl kwd">println</span><span class="hl opt">()</span>
   <span class="hl opt">}</span>

   <span class="hl kwa">def</span> <span class="hl kwd">main</span><span class="hl opt">(</span>args<span class="hl opt">:</span> Array<span class="hl opt">[</span>String<span class="hl opt">]) {</span>
      <span class="hl kwa">val</span> n <span class="hl opt">=</span> <span class="hl kwa">if</span> <span class="hl opt">(</span>args<span class="hl opt">.</span>isEmpty<span class="hl opt">)</span> <span class="hl num">600</span> <span class="hl kwa">else</span> Integer<span class="hl opt">.</span><span class="hl kwd">parseInt</span><span class="hl opt">(</span><span class="hl kwd">args</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">))</span>
      <span class="hl kwd">printColours</span><span class="hl opt">()</span>
      <span class="hl kwd">println</span><span class="hl opt">()</span>
      <span class="hl kwd">run</span><span class="hl opt">(</span>n<span class="hl opt">,</span> Blue<span class="hl opt">,</span> Red<span class="hl opt">,</span> Yellow<span class="hl opt">)</span>
      <span class="hl kwd">run</span><span class="hl opt">(</span>n<span class="hl opt">,</span> Blue<span class="hl opt">,</span> Red<span class="hl opt">,</span> Yellow<span class="hl opt">,</span> Red<span class="hl opt">,</span> Yellow<span class="hl opt">,</span>
            Blue<span class="hl opt">,</span> Red<span class="hl opt">,</span> Yellow<span class="hl opt">,</span> Red<span class="hl opt">,</span> Blue<span class="hl opt">)</span>
   <span class="hl opt">}</span>

   <span class="hl kwa">val</span> Numbers <span class="hl opt">=</span> Array<span class="hl opt">[</span>String<span class="hl opt">](</span><span class="hl str">&quot;zero&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;one&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;two&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;three&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;four&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;five&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;six&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;seven&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;eight&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;nine&quot;</span><span class="hl opt">)</span>

   <span class="hl kwa">def</span> <span class="hl kwd">getNumber</span><span class="hl opt">(</span>n<span class="hl opt">:</span> Int<span class="hl opt">) =</span> String<span class="hl opt">.</span><span class="hl kwd">valueOf</span><span class="hl opt">(</span>n<span class="hl opt">).</span>toList<span class="hl opt">.</span>map <span class="hl opt">{</span> ch <span class="hl opt">=&gt;</span> <span class="hl kwd">Numbers</span><span class="hl opt">(</span>Character<span class="hl opt">.</span><span class="hl kwd">getNumericValue</span><span class="hl opt">(</span>ch<span class="hl opt">)) } .</span><span class="hl kwd">mkString</span><span class="hl opt">(</span><span class="hl str">&quot; &quot;</span><span class="hl opt">)</span>

   <span class="hl kwa">def</span> <span class="hl kwd">printColours</span><span class="hl opt">() {</span>
      <span class="hl kwd">printColours</span><span class="hl opt">(</span>Blue<span class="hl opt">,</span> Blue<span class="hl opt">)</span>
      <span class="hl kwd">printColours</span><span class="hl opt">(</span>Blue<span class="hl opt">,</span> Red<span class="hl opt">)</span>
      <span class="hl kwd">printColours</span><span class="hl opt">(</span>Blue<span class="hl opt">,</span> Yellow<span class="hl opt">)</span>
      <span class="hl kwd">printColours</span><span class="hl opt">(</span>Red<span class="hl opt">,</span> Blue<span class="hl opt">)</span>   
      <span class="hl kwd">printColours</span><span class="hl opt">(</span>Red<span class="hl opt">,</span> Red<span class="hl opt">)</span>
      <span class="hl kwd">printColours</span><span class="hl opt">(</span>Red<span class="hl opt">,</span> Yellow<span class="hl opt">)</span>
      <span class="hl kwd">printColours</span><span class="hl opt">(</span>Yellow<span class="hl opt">,</span> Blue<span class="hl opt">)</span>
      <span class="hl kwd">printColours</span><span class="hl opt">(</span>Yellow<span class="hl opt">,</span> Red<span class="hl opt">)</span>
      <span class="hl kwd">printColours</span><span class="hl opt">(</span>Yellow<span class="hl opt">,</span> Yellow<span class="hl opt">)</span>
   <span class="hl opt">}</span>

   <span class="hl kwa">def</span> <span class="hl kwd">printColours</span><span class="hl opt">(</span>c1<span class="hl opt">:</span> Colour<span class="hl opt">,</span> c2<span class="hl opt">:</span> Colour<span class="hl opt">) {</span>
      <span class="hl kwd">println</span><span class="hl opt">(</span>c1<span class="hl opt">+</span><span class="hl str">&quot; + &quot;</span><span class="hl opt">+</span>c2<span class="hl opt">+</span><span class="hl str">&quot; -&gt; &quot;</span><span class="hl opt">+</span><span class="hl kwd">doCompliment</span><span class="hl opt">(</span>c1<span class="hl opt">,</span> c2<span class="hl opt">))</span>   
   <span class="hl opt">}</span>
<span class="hl opt">}</span>

