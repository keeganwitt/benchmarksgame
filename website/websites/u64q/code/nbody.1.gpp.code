<span class="hl com">/*</span>
<span class="hl com"> * The Computer Language Benchmarks Game</span>
<span class="hl com"> * http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"> *</span>
<span class="hl com"> * contributed by Jeffrey Beu</span>
<span class="hl com"> *  </span>
<span class="hl com"> */</span>

<span class="hl ppc">#include &lt;stdio.h&gt;</span>
<span class="hl ppc">#include &lt;stdlib.h&gt;</span>
<span class="hl ppc">#include &lt;math.h&gt;</span>

<span class="hl kwa">namespace</span> 
<span class="hl opt">{</span>

<span class="hl kwc">template</span><span class="hl opt">&lt;</span> typename <span class="hl opt">...  &gt;</span> <span class="hl kwb">struct</span> tuple<span class="hl opt">{};</span>

<span class="hl kwc">template</span><span class="hl opt">&lt;</span>typename H<span class="hl opt">,</span> typename<span class="hl opt">...</span> T<span class="hl opt">&gt;</span>
<span class="hl kwb">struct</span> tuple<span class="hl opt">&lt;</span>H<span class="hl opt">,</span>T<span class="hl opt">...&gt;</span>
<span class="hl opt">{</span>
  <span class="hl kwc">typedef</span> H head<span class="hl opt">;</span>
  <span class="hl kwc">typedef</span> tuple<span class="hl opt">&lt;</span>T<span class="hl opt">...&gt;</span> tail<span class="hl opt">;</span>
 
  head fst<span class="hl opt">;</span>
  tail snd<span class="hl opt">;</span>
 
  <span class="hl kwd">tuple</span><span class="hl opt">(</span><span class="hl kwb">const</span> head<span class="hl opt">&amp;</span> a<span class="hl opt">,</span><span class="hl kwb">const</span> tail<span class="hl opt">&amp;</span> b<span class="hl opt">):</span><span class="hl kwd">fst</span><span class="hl opt">(</span>a<span class="hl opt">),</span><span class="hl kwd">snd</span><span class="hl opt">(</span>b<span class="hl opt">){}</span>
  <span class="hl kwd">tuple</span><span class="hl opt">() =</span> <span class="hl kwa">delete</span><span class="hl opt">;</span>
<span class="hl opt">};</span>

tuple<span class="hl opt">&lt;&gt;</span> <span class="hl kwd">construct_tuple</span><span class="hl opt">()</span>
<span class="hl opt">{</span> <span class="hl kwa">return</span> tuple<span class="hl opt">&lt;&gt;();</span>  
<span class="hl opt">}</span>

<span class="hl kwc">template</span><span class="hl opt">&lt;</span><span class="hl kwc">class</span> H<span class="hl opt">,</span> <span class="hl kwc">class</span><span class="hl opt">...</span>T<span class="hl opt">&gt;</span> tuple<span class="hl opt">&lt;</span>H<span class="hl opt">,</span>T<span class="hl opt">...&gt;</span> <span class="hl kwd">construct_tuple</span><span class="hl opt">(</span>H h<span class="hl opt">,</span> T<span class="hl opt">...</span> a<span class="hl opt">)</span>
<span class="hl opt">{</span>
  tuple<span class="hl opt">&lt;</span>H<span class="hl opt">,</span>T<span class="hl opt">...&gt;</span> <span class="hl kwd">r</span><span class="hl opt">(</span>h<span class="hl opt">,</span><span class="hl kwd">construct_tuple</span><span class="hl opt">(</span>a<span class="hl opt">...));</span>
  <span class="hl kwa">return</span> r<span class="hl opt">;</span>
<span class="hl opt">}</span>

<span class="hl kwc">template</span><span class="hl opt">&lt;</span><span class="hl kwc">class</span> OP<span class="hl opt">&gt;</span> <span class="hl kwb">void</span> <span class="hl kwd">FOREACH</span><span class="hl opt">(</span>OP<span class="hl opt">,</span>tuple<span class="hl opt">&lt;&gt;){}</span>
<span class="hl kwc">template</span><span class="hl opt">&lt;</span>typename OP<span class="hl opt">,</span><span class="hl kwc">class</span> <span class="hl opt">...</span>T<span class="hl opt">&gt;</span> <span class="hl kwb">void</span> <span class="hl kwd">FOREACH</span><span class="hl opt">(</span>OP<span class="hl opt">&amp;</span> op<span class="hl opt">,</span>tuple<span class="hl opt">&lt;</span>T<span class="hl opt">...&gt;&amp;</span> t<span class="hl opt">)</span>
<span class="hl opt">{</span>
  <span class="hl kwd">op</span><span class="hl opt">(</span>t<span class="hl opt">.</span>fst<span class="hl opt">);</span>
  <span class="hl kwd">FOREACH</span><span class="hl opt">(</span>op<span class="hl opt">,</span>t<span class="hl opt">.</span>snd<span class="hl opt">);</span>
<span class="hl opt">}</span>

<span class="hl kwc">template</span><span class="hl opt">&lt;</span><span class="hl kwc">class</span> OP<span class="hl opt">&gt;</span> <span class="hl kwb">void</span> <span class="hl kwd">FOR</span><span class="hl opt">(</span>OP<span class="hl opt">,</span>tuple<span class="hl opt">&lt;&gt;){}</span>

<span class="hl kwc">template</span><span class="hl opt">&lt;</span>typename OP<span class="hl opt">,</span> <span class="hl kwc">class</span> <span class="hl opt">...</span>T<span class="hl opt">&gt;</span> <span class="hl kwb">void</span> <span class="hl kwd">FOR</span><span class="hl opt">(</span>OP<span class="hl opt">&amp;</span> op<span class="hl opt">,</span>tuple<span class="hl opt">&lt;</span>T<span class="hl opt">...&gt;&amp;</span> t<span class="hl opt">)</span>
<span class="hl opt">{</span>
  <span class="hl kwd">op</span><span class="hl opt">(</span>t<span class="hl opt">);</span>
  <span class="hl kwd">FOR</span><span class="hl opt">(</span>op<span class="hl opt">,</span>t<span class="hl opt">.</span>snd<span class="hl opt">);</span>
<span class="hl opt">}</span>



<span class="hl kwb">struct</span> body <span class="hl opt">{</span>
  <span class="hl kwb">double</span> x<span class="hl opt">,</span> y<span class="hl opt">,</span> z<span class="hl opt">;</span>
  <span class="hl kwb">double</span> vx<span class="hl opt">,</span> vy<span class="hl opt">,</span> vz<span class="hl opt">;</span>
  <span class="hl kwb">const double</span> mass<span class="hl opt">;</span>
<span class="hl opt">};</span>

<span class="hl kwb">const double</span> pi <span class="hl opt">=</span> <span class="hl num">3.141592653589793</span><span class="hl opt">;</span>
<span class="hl kwb">const double</span> solar_mass <span class="hl opt">=</span> <span class="hl num">4</span> <span class="hl opt">*</span> pi <span class="hl opt">*</span> pi<span class="hl opt">;</span>
<span class="hl kwb">const double</span> days_per_year <span class="hl opt">=</span> <span class="hl num">365.24</span><span class="hl opt">;</span>
<span class="hl kwb">const double</span> dt <span class="hl opt">=</span> <span class="hl num">0.01</span><span class="hl opt">;</span>

<span class="hl kwb">const</span> body sun <span class="hl opt">=</span> 
<span class="hl opt">{</span>
  <span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">0</span><span class="hl opt">,</span>
  <span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">0</span><span class="hl opt">,</span>
  solar_mass
<span class="hl opt">};</span>

<span class="hl kwb">const</span> body jupiter <span class="hl opt">=</span>  
<span class="hl opt">{</span>
   <span class="hl num">4.84143144246472090e+00</span><span class="hl opt">,</span>
  <span class="hl opt">-</span><span class="hl num">1.16032004402742839e+00</span><span class="hl opt">,</span>
  <span class="hl opt">-</span><span class="hl num">1.03622044471123109e-01</span><span class="hl opt">,</span>
   <span class="hl num">1.66007664274403694e-03</span> <span class="hl opt">*</span> days_per_year<span class="hl opt">,</span>
   <span class="hl num">7.69901118419740425e-03</span> <span class="hl opt">*</span> days_per_year<span class="hl opt">,</span>
  <span class="hl opt">-</span><span class="hl num">6.90460016972063023e-05</span> <span class="hl opt">*</span> days_per_year<span class="hl opt">,</span>
   <span class="hl num">9.54791938424326609e-04</span> <span class="hl opt">*</span> solar_mass
<span class="hl opt">};</span>

<span class="hl kwb">const</span> body saturn <span class="hl opt">=</span> 
<span class="hl opt">{</span>        
   <span class="hl num">8.34336671824457987e+00</span><span class="hl opt">,</span>
   <span class="hl num">4.12479856412430479e+00</span><span class="hl opt">,</span>
  <span class="hl opt">-</span><span class="hl num">4.03523417114321381e-01</span><span class="hl opt">,</span>
  <span class="hl opt">-</span><span class="hl num">2.76742510726862411e-03</span> <span class="hl opt">*</span> days_per_year<span class="hl opt">,</span>
   <span class="hl num">4.99852801234917238e-03</span> <span class="hl opt">*</span> days_per_year<span class="hl opt">,</span>
   <span class="hl num">2.30417297573763929e-05</span> <span class="hl opt">*</span> days_per_year<span class="hl opt">,</span>
   <span class="hl num">2.85885980666130812e-04</span> <span class="hl opt">*</span> solar_mass
<span class="hl opt">};</span>

<span class="hl kwb">const</span> body uranus <span class="hl opt">=</span>
<span class="hl opt">{</span> 
   <span class="hl num">1.28943695621391310e+01</span><span class="hl opt">,</span>
  <span class="hl opt">-</span><span class="hl num">1.51111514016986312e+01</span><span class="hl opt">,</span>
  <span class="hl opt">-</span><span class="hl num">2.23307578892655734e-01</span><span class="hl opt">,</span>
   <span class="hl num">2.96460137564761618e-03</span> <span class="hl opt">*</span> days_per_year<span class="hl opt">,</span>
   <span class="hl num">2.37847173959480950e-03</span> <span class="hl opt">*</span> days_per_year<span class="hl opt">,</span>
  <span class="hl opt">-</span><span class="hl num">2.96589568540237556e-05</span> <span class="hl opt">*</span> days_per_year<span class="hl opt">,</span>
   <span class="hl num">4.36624404335156298e-05</span> <span class="hl opt">*</span> solar_mass
<span class="hl opt">};</span>

<span class="hl kwb">const</span> body neptune <span class="hl opt">=</span> 
<span class="hl opt">{</span>  
   <span class="hl num">1.53796971148509165e+01</span><span class="hl opt">,</span>
  <span class="hl opt">-</span><span class="hl num">2.59193146099879641e+01</span><span class="hl opt">,</span>
   <span class="hl num">1.79258772950371181e-01</span><span class="hl opt">,</span>
   <span class="hl num">2.68067772490389322e-03</span> <span class="hl opt">*</span> days_per_year<span class="hl opt">,</span>
   <span class="hl num">1.62824170038242295e-03</span> <span class="hl opt">*</span> days_per_year<span class="hl opt">,</span>
  <span class="hl opt">-</span><span class="hl num">9.51592254519715870e-05</span> <span class="hl opt">*</span> days_per_year<span class="hl opt">,</span>
   <span class="hl num">5.15138902046611451e-05</span> <span class="hl opt">*</span> solar_mass
<span class="hl opt">};</span>


<span class="hl kwb">struct</span>
<span class="hl opt">{</span> <span class="hl kwb">struct</span> 
  <span class="hl opt">{</span> <span class="hl kwc">template</span><span class="hl opt">&lt;</span><span class="hl kwc">class</span> T<span class="hl opt">&gt;</span> <span class="hl kwb">struct</span> foreach_block
    <span class="hl opt">{</span> T <span class="hl opt">&amp;</span>t<span class="hl opt">;</span>
      <span class="hl kwc">template</span><span class="hl opt">&lt;</span><span class="hl kwc">class</span> T2<span class="hl opt">&gt;</span> <span class="hl kwb">void</span> <span class="hl kwc">operator</span><span class="hl opt">()(</span>T2<span class="hl opt">&amp;</span> b2<span class="hl opt">)</span>
      <span class="hl opt">{</span>
	<span class="hl kwc">auto</span><span class="hl opt">&amp;</span> b <span class="hl opt">=</span> t<span class="hl opt">.</span>fst<span class="hl opt">;</span>
        <span class="hl kwb">double</span> dx <span class="hl opt">=</span> b<span class="hl opt">.</span>x <span class="hl opt">-</span> b2<span class="hl opt">.</span>x<span class="hl opt">;</span>
        <span class="hl kwb">double</span> dy <span class="hl opt">=</span> b<span class="hl opt">.</span>y <span class="hl opt">-</span> b2<span class="hl opt">.</span>y<span class="hl opt">;</span>
        <span class="hl kwb">double</span> dz <span class="hl opt">=</span> b<span class="hl opt">.</span>z <span class="hl opt">-</span> b2<span class="hl opt">.</span>z<span class="hl opt">;</span>
        <span class="hl kwb">double</span> distance <span class="hl opt">=</span> <span class="hl kwd">sqrt</span><span class="hl opt">(</span>dx <span class="hl opt">*</span> dx <span class="hl opt">+</span> dy <span class="hl opt">*</span> dy <span class="hl opt">+</span> dz <span class="hl opt">*</span> dz<span class="hl opt">);</span>
        <span class="hl kwb">double</span> mag <span class="hl opt">=</span> dt <span class="hl opt">/ (</span>distance <span class="hl opt">*</span> distance <span class="hl opt">*</span> distance<span class="hl opt">);</span>
        b<span class="hl opt">.</span>vx <span class="hl opt">-=</span> dx <span class="hl opt">*</span> b2<span class="hl opt">.</span>mass <span class="hl opt">*</span> mag<span class="hl opt">;</span>
        b<span class="hl opt">.</span>vy <span class="hl opt">-=</span> dy <span class="hl opt">*</span> b2<span class="hl opt">.</span>mass <span class="hl opt">*</span> mag<span class="hl opt">;</span>
        b<span class="hl opt">.</span>vz <span class="hl opt">-=</span> dz <span class="hl opt">*</span> b2<span class="hl opt">.</span>mass <span class="hl opt">*</span> mag<span class="hl opt">;</span>
        b2<span class="hl opt">.</span>vx <span class="hl opt">+=</span> dx <span class="hl opt">*</span> b<span class="hl opt">.</span>mass <span class="hl opt">*</span> mag<span class="hl opt">;</span>
        b2<span class="hl opt">.</span>vy <span class="hl opt">+=</span> dy <span class="hl opt">*</span> b<span class="hl opt">.</span>mass <span class="hl opt">*</span> mag<span class="hl opt">;</span>
        b2<span class="hl opt">.</span>vz <span class="hl opt">+=</span> dz <span class="hl opt">*</span> b<span class="hl opt">.</span>mass <span class="hl opt">*</span> mag<span class="hl opt">;</span> 
      <span class="hl opt">}</span>     
    <span class="hl opt">};</span>

    
    <span class="hl kwc">template</span><span class="hl opt">&lt;</span><span class="hl kwc">class</span> T<span class="hl opt">&gt;</span> <span class="hl kwb">void</span> <span class="hl kwc">operator</span><span class="hl opt">()(</span>T<span class="hl opt">&amp;</span> bodies<span class="hl opt">)</span>
    <span class="hl opt">{</span>
      foreach_block<span class="hl opt">&lt;</span><span class="hl kwc">decltype</span><span class="hl opt">(</span>bodies<span class="hl opt">)&gt;</span> run <span class="hl opt">= {</span>bodies<span class="hl opt">};</span>
      <span class="hl kwd">FOREACH</span><span class="hl opt">(</span>run<span class="hl opt">,</span>bodies<span class="hl opt">.</span>snd<span class="hl opt">);</span>
    <span class="hl opt">}</span>
  <span class="hl opt">}</span>for_block<span class="hl opt">;</span>


  <span class="hl kwb">struct</span>
  <span class="hl opt">{</span>
    <span class="hl kwc">template</span><span class="hl opt">&lt;</span><span class="hl kwc">class</span> T<span class="hl opt">&gt;</span> <span class="hl kwb">void</span> <span class="hl kwc">operator</span><span class="hl opt">()(</span>T<span class="hl opt">&amp;</span> body<span class="hl opt">)</span> 
    <span class="hl opt">{</span>
      body<span class="hl opt">.</span>x <span class="hl opt">+=</span> dt <span class="hl opt">*</span> body<span class="hl opt">.</span>vx<span class="hl opt">;</span>
      body<span class="hl opt">.</span>y <span class="hl opt">+=</span> dt <span class="hl opt">*</span> body<span class="hl opt">.</span>vy<span class="hl opt">;</span>
      body<span class="hl opt">.</span>z <span class="hl opt">+=</span> dt <span class="hl opt">*</span> body<span class="hl opt">.</span>vz<span class="hl opt">;</span>
    <span class="hl opt">}</span>
  <span class="hl opt">}</span>foreach_block<span class="hl opt">;</span>
  
  <span class="hl kwc">template</span><span class="hl opt">&lt;</span><span class="hl kwc">class</span> T<span class="hl opt">&gt;</span> <span class="hl kwb">void</span> <span class="hl kwc">operator</span><span class="hl opt">()(</span>T<span class="hl opt">&amp;</span> bodies<span class="hl opt">)</span>
  <span class="hl opt">{</span>
    <span class="hl kwd">FOR</span><span class="hl opt">(</span>for_block<span class="hl opt">,</span>bodies<span class="hl opt">);</span>
    <span class="hl kwd">FOREACH</span><span class="hl opt">(</span>foreach_block<span class="hl opt">,</span>bodies<span class="hl opt">);</span>
  <span class="hl opt">}</span>
  
<span class="hl opt">}</span>advance<span class="hl opt">;</span>

<span class="hl kwb">struct</span>
<span class="hl opt">{</span>
  <span class="hl kwb">struct</span> for_block
  <span class="hl opt">{</span> <span class="hl kwb">double</span> <span class="hl opt">&amp;</span>e<span class="hl opt">;</span>
    <span class="hl kwc">template</span><span class="hl opt">&lt;</span><span class="hl kwc">class</span> T<span class="hl opt">&gt;</span> <span class="hl kwb">struct</span> foreach_block
    <span class="hl opt">{</span> T <span class="hl opt">&amp;</span>t<span class="hl opt">;</span>
      <span class="hl kwb">double</span> <span class="hl opt">&amp;</span>e<span class="hl opt">;</span>
      <span class="hl kwc">template</span><span class="hl opt">&lt;</span><span class="hl kwc">class</span> T2<span class="hl opt">&gt;</span> <span class="hl kwb">void</span> <span class="hl kwc">operator</span><span class="hl opt">()(</span>T2<span class="hl opt">&amp;</span> b2<span class="hl opt">)</span>
      <span class="hl opt">{</span>
	<span class="hl kwc">auto</span><span class="hl opt">&amp;</span> b <span class="hl opt">=</span> t<span class="hl opt">.</span>fst<span class="hl opt">;</span>
        <span class="hl kwb">double</span> dx <span class="hl opt">=</span> b<span class="hl opt">.</span>x <span class="hl opt">-</span> b2<span class="hl opt">.</span>x<span class="hl opt">;</span>
        <span class="hl kwb">double</span> dy <span class="hl opt">=</span> b<span class="hl opt">.</span>y <span class="hl opt">-</span> b2<span class="hl opt">.</span>y<span class="hl opt">;</span>
        <span class="hl kwb">double</span> dz <span class="hl opt">=</span> b<span class="hl opt">.</span>z <span class="hl opt">-</span> b2<span class="hl opt">.</span>z<span class="hl opt">;</span>
        <span class="hl kwb">double</span> distance <span class="hl opt">=</span> <span class="hl kwd">sqrt</span><span class="hl opt">(</span>dx <span class="hl opt">*</span> dx <span class="hl opt">+</span> dy <span class="hl opt">*</span> dy <span class="hl opt">+</span> dz <span class="hl opt">*</span> dz<span class="hl opt">);</span>
        e <span class="hl opt">-= (</span>b<span class="hl opt">.</span>mass <span class="hl opt">*</span> b2<span class="hl opt">.</span>mass<span class="hl opt">) /</span> distance<span class="hl opt">;</span>
      <span class="hl opt">}</span>  
    <span class="hl opt">};</span>
    
    <span class="hl kwc">template</span><span class="hl opt">&lt;</span><span class="hl kwc">class</span> T<span class="hl opt">&gt;</span> <span class="hl kwb">void</span> <span class="hl kwc">operator</span><span class="hl opt">()(</span>T<span class="hl opt">&amp;</span> bodies<span class="hl opt">)</span>
    <span class="hl opt">{</span>
      <span class="hl kwc">auto</span><span class="hl opt">&amp;</span> p <span class="hl opt">=</span> bodies<span class="hl opt">.</span>fst<span class="hl opt">;</span>
      e <span class="hl opt">+=</span> <span class="hl num">0.5</span> <span class="hl opt">*</span> p<span class="hl opt">.</span>mass <span class="hl opt">* (</span>p<span class="hl opt">.</span>vx <span class="hl opt">*</span> p<span class="hl opt">.</span>vx <span class="hl opt">+</span> p<span class="hl opt">.</span>vy <span class="hl opt">*</span> p<span class="hl opt">.</span>vy <span class="hl opt">+</span> p<span class="hl opt">.</span>vz <span class="hl opt">*</span> p<span class="hl opt">.</span>vz<span class="hl opt">);</span>
      
      foreach_block<span class="hl opt">&lt;</span><span class="hl kwc">decltype</span><span class="hl opt">(</span>bodies<span class="hl opt">)&gt;</span> run <span class="hl opt">= {</span>bodies<span class="hl opt">,</span>e<span class="hl opt">};</span>
      <span class="hl kwd">FOREACH</span><span class="hl opt">(</span>run<span class="hl opt">,</span>bodies<span class="hl opt">.</span>snd<span class="hl opt">);</span>
    <span class="hl opt">}</span>
  <span class="hl opt">};</span>

  <span class="hl kwc">template</span><span class="hl opt">&lt;</span><span class="hl kwc">class</span> T<span class="hl opt">&gt;</span> <span class="hl kwb">double</span> <span class="hl kwc">operator</span><span class="hl opt">()(</span>T<span class="hl opt">&amp;</span> bodies<span class="hl opt">)</span>
  <span class="hl opt">{</span>
    <span class="hl kwb">double</span> e <span class="hl opt">=</span> <span class="hl num">0.0</span><span class="hl opt">;</span>
    for_block run <span class="hl opt">= {</span>e<span class="hl opt">};</span>
    <span class="hl kwd">FOR</span><span class="hl opt">(</span>run<span class="hl opt">,</span>bodies<span class="hl opt">);</span>
    <span class="hl kwa">return</span> e<span class="hl opt">;</span>
  <span class="hl opt">}</span>
  
<span class="hl opt">}</span>energy<span class="hl opt">;</span>

<span class="hl kwb">struct</span>
<span class="hl opt">{</span>
  <span class="hl kwb">struct</span> foreach_block
  <span class="hl opt">{</span>
    <span class="hl kwb">double</span> <span class="hl opt">&amp;</span>px<span class="hl opt">, &amp;</span>py<span class="hl opt">, &amp;</span>pz<span class="hl opt">;</span>
    <span class="hl kwc">template</span><span class="hl opt">&lt;</span><span class="hl kwc">class</span> T<span class="hl opt">&gt;</span> <span class="hl kwb">void</span> <span class="hl kwc">operator</span><span class="hl opt">()(</span>T<span class="hl opt">&amp;</span> body<span class="hl opt">)</span> 
    <span class="hl opt">{</span>
      px <span class="hl opt">+=</span> body<span class="hl opt">.</span>vx <span class="hl opt">*</span> body<span class="hl opt">.</span>mass<span class="hl opt">;</span>
      py <span class="hl opt">+=</span> body<span class="hl opt">.</span>vy <span class="hl opt">*</span> body<span class="hl opt">.</span>mass<span class="hl opt">;</span>
      pz <span class="hl opt">+=</span> body<span class="hl opt">.</span>vz <span class="hl opt">*</span> body<span class="hl opt">.</span>mass<span class="hl opt">;</span>
    <span class="hl opt">}</span>
  <span class="hl opt">};</span>
  
  <span class="hl kwc">template</span><span class="hl opt">&lt;</span><span class="hl kwc">class</span> T<span class="hl opt">&gt;</span> <span class="hl kwb">void</span> <span class="hl kwc">operator</span><span class="hl opt">()(</span>T<span class="hl opt">&amp;</span> bodies<span class="hl opt">)</span>
  <span class="hl opt">{</span>
    <span class="hl kwb">double</span> px <span class="hl opt">=</span> <span class="hl num">0.0</span><span class="hl opt">,</span> py <span class="hl opt">=</span> <span class="hl num">0.0</span><span class="hl opt">,</span> pz <span class="hl opt">=</span> <span class="hl num">0.0</span><span class="hl opt">;</span>
    foreach_block run <span class="hl opt">= {</span>px<span class="hl opt">,</span>py<span class="hl opt">,</span>pz<span class="hl opt">};</span>
    <span class="hl kwd">FOREACH</span><span class="hl opt">(</span>run<span class="hl opt">,</span>bodies<span class="hl opt">);</span>
    
    bodies<span class="hl opt">.</span>fst<span class="hl opt">.</span>vx <span class="hl opt">= -</span>px <span class="hl opt">/</span> solar_mass<span class="hl opt">;</span>
    bodies<span class="hl opt">.</span>fst<span class="hl opt">.</span>vy <span class="hl opt">= -</span>py <span class="hl opt">/</span> solar_mass<span class="hl opt">;</span>
    bodies<span class="hl opt">.</span>fst<span class="hl opt">.</span>vz <span class="hl opt">= -</span>pz <span class="hl opt">/</span> solar_mass<span class="hl opt">;</span>
  <span class="hl opt">}</span>
  
<span class="hl opt">}</span>offset<span class="hl opt">;</span>


<span class="hl opt">}</span>

<span class="hl kwb">int</span> <span class="hl kwd">main</span><span class="hl opt">(</span><span class="hl kwb">int</span><span class="hl opt">,</span><span class="hl kwb">char</span><span class="hl opt">**</span> argv<span class="hl opt">)</span>
<span class="hl opt">{</span>
 
  <span class="hl kwc">auto</span> solar_system <span class="hl opt">=</span> <span class="hl kwd">construct_tuple</span><span class="hl opt">(</span>sun<span class="hl opt">,</span>jupiter<span class="hl opt">,</span>saturn<span class="hl opt">,</span>uranus<span class="hl opt">,</span>neptune<span class="hl opt">);</span>
  <span class="hl kwd">offset</span><span class="hl opt">(</span>solar_system<span class="hl opt">);</span>

  <span class="hl kwd">printf</span> <span class="hl opt">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">,</span> <span class="hl kwd">energy</span><span class="hl opt">(</span>solar_system<span class="hl opt">));</span>
  
  <span class="hl kwb">int</span> n <span class="hl opt">=</span> <span class="hl kwd">atoi</span><span class="hl opt">(</span>argv<span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">]);</span>
  
  <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwb">int</span> i <span class="hl opt">=</span> <span class="hl num">1</span><span class="hl opt">;</span> i <span class="hl opt">&lt;=</span> n<span class="hl opt">;</span> i<span class="hl opt">++)</span>
  <span class="hl opt">{</span>
    <span class="hl kwd">advance</span><span class="hl opt">(</span>solar_system<span class="hl opt">);</span>
  <span class="hl opt">}</span>

  <span class="hl kwd">printf</span> <span class="hl opt">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">,</span> <span class="hl kwd">energy</span><span class="hl opt">(</span>solar_system<span class="hl opt">));</span>

  <span class="hl kwa">return</span> <span class="hl num">0</span><span class="hl opt">;</span>
<span class="hl opt">}</span>



