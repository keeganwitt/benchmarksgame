<span class="hl com">{-</span>
<span class="hl com">   	The Computer Language Benchmarks Game</span>
<span class="hl com">   	http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com">   	contributed by Bertram Felgenhauer</span>
<span class="hl com">-}</span>

<span class="hl kwd">import</span> Data<span class="hl opt">.</span>Word
<span class="hl kwd">import</span> Data<span class="hl opt">.</span><span class="hl kwb">Array</span>
<span class="hl kwd">import</span> Data<span class="hl opt">.</span>Bits
<span class="hl kwd">import</span> System<span class="hl opt">.</span>Environment

pieces <span class="hl opt">= [</span>
    <span class="hl opt">[(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">0</span><span class="hl opt">),(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">),(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">),(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">3</span><span class="hl opt">),(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">3</span><span class="hl opt">)],</span>
    <span class="hl opt">[(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">0</span><span class="hl opt">),(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">),(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">3</span><span class="hl opt">),(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">0</span><span class="hl opt">),(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">)],</span>
    <span class="hl opt">[(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">0</span><span class="hl opt">),(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">),(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">),(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">),(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">)],</span>
    <span class="hl opt">[(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">0</span><span class="hl opt">),(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">),(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">),(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">),(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">)],</span>
    <span class="hl opt">[(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">0</span><span class="hl opt">),(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">),(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">0</span><span class="hl opt">),(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">),(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">)],</span>
    <span class="hl opt">[(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">0</span><span class="hl opt">),(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">),(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">),(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">),(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">)],</span>
    <span class="hl opt">[(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">0</span><span class="hl opt">),(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">),(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">),(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">),(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">)],</span>
    <span class="hl opt">[(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">0</span><span class="hl opt">),(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">),(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">),(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">0</span><span class="hl opt">),(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">)],</span>
    <span class="hl opt">[(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">0</span><span class="hl opt">),(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">),(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">),(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">),(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">3</span><span class="hl opt">)],</span>
    <span class="hl opt">[(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">0</span><span class="hl opt">),(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">),(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">),(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">3</span><span class="hl opt">),(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">)]]</span>

transform p <span class="hl opt">=</span>
    <span class="hl opt">[</span> <span class="hl kwc">map</span> <span class="hl opt">(\(</span>y<span class="hl opt">,</span>x<span class="hl opt">) -&gt; (</span>y<span class="hl opt">-</span>dy<span class="hl opt">,</span>x<span class="hl opt">-</span>dx<span class="hl opt">))</span> p<span class="hl opt">''</span>
    | p<span class="hl opt">' &lt;-</span> <span class="hl kwc">take</span> <span class="hl num">6</span> <span class="hl opt">(</span><span class="hl kwc">iterate</span> <span class="hl opt">(</span><span class="hl kwc">map</span> <span class="hl opt">(\(</span>y<span class="hl opt">,</span>x<span class="hl opt">) -&gt; (</span>x<span class="hl opt">+</span>y<span class="hl opt">,-</span>y<span class="hl opt">)))</span> p<span class="hl opt">),</span>
      p<span class="hl opt">'' &lt;-</span> <span class="hl kwc">take</span> <span class="hl num">2</span> <span class="hl opt">(</span><span class="hl kwc">iterate</span> <span class="hl opt">(</span><span class="hl kwc">map</span> <span class="hl opt">(\(</span>y<span class="hl opt">,</span>x<span class="hl opt">) -&gt; (</span>x<span class="hl opt">,</span>y<span class="hl opt">)))</span> p<span class="hl opt">'),</span>
      <span class="hl kwd">let</span> <span class="hl opt">(</span>dy<span class="hl opt">,</span>dx<span class="hl opt">) =</span> <span class="hl kwc">minimum</span> p<span class="hl opt">'']</span>

pieceMasks <span class="hl opt">=</span> <span class="hl kwc">listArray</span> <span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">9</span><span class="hl opt">) (</span><span class="hl kwc">map</span> <span class="hl opt">(</span>pieceMasks<span class="hl opt">' .</span> transform<span class="hl opt">)</span> pieces<span class="hl opt">)</span> <span class="hl kwd">where</span>
    pieceMasks<span class="hl opt">'</span> ps <span class="hl opt">=</span> <span class="hl kwc">listArray</span> <span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">9</span><span class="hl opt">) [</span>pieceMasks<span class="hl opt">''</span> ps <span class="hl opt">(</span>y<span class="hl opt">,</span>x<span class="hl opt">)</span> | y <span class="hl opt">&lt;- [</span><span class="hl num">0</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">],</span> x <span class="hl opt">&lt;- [</span><span class="hl num">0</span><span class="hl opt">.</span><span class="hl num">.4</span><span class="hl opt">]]</span>
    pieceMasks<span class="hl opt">''</span> ps pos <span class="hl opt">= [</span>m | p <span class="hl opt">&lt;-</span> ps<span class="hl opt">,</span> m <span class="hl opt">&lt;-</span> mask <span class="hl num">0</span> pos p<span class="hl opt">]</span>
    mask m <span class="hl opt">(</span>dy<span class="hl opt">,</span>dx<span class="hl opt">) [] = [</span>m<span class="hl opt">]</span>
    mask m <span class="hl opt">(</span>dy<span class="hl opt">,</span>dx<span class="hl opt">) ((</span>y<span class="hl opt">,</span>x<span class="hl opt">):</span>ps<span class="hl opt">)</span>
        | x<span class="hl opt">' &lt;</span> <span class="hl num">0</span> || x<span class="hl opt">' &gt;</span> <span class="hl num">4</span> <span class="hl opt">= []</span>
        | <span class="hl kwa">True</span> <span class="hl opt">=</span> mask <span class="hl opt">(</span>m <span class="hl opt">.</span>|<span class="hl opt">.</span> shiftL <span class="hl num">1</span> <span class="hl opt">((</span>dy<span class="hl opt">+</span>y<span class="hl opt">)*</span><span class="hl num">5</span><span class="hl opt">+</span>x<span class="hl opt">')) (</span>dy<span class="hl opt">,</span>dx<span class="hl opt">)</span> ps
        <span class="hl kwd">where</span> x<span class="hl opt">' =</span> x <span class="hl opt">+</span> dx <span class="hl opt">+</span> <span class="hl kwc">div</span> <span class="hl opt">(</span>y<span class="hl opt">+</span>dy<span class="hl opt">)</span> <span class="hl num">2</span>

search m <span class="hl num">50</span> p ps <span class="hl opt">= [</span>ps<span class="hl opt">]</span>
search m i p ps | <span class="hl opt">(</span>m <span class="hl opt">.&amp;.</span> shiftL <span class="hl num">1</span> i<span class="hl opt">) &gt;</span> <span class="hl num">0</span> <span class="hl opt">=</span> search m <span class="hl opt">(</span>i<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span> p ps
search m i p ps <span class="hl opt">=</span> <span class="hl kwd">let</span> <span class="hl opt">(</span>q<span class="hl opt">,</span>r<span class="hl opt">) =</span> <span class="hl kwc">divMod</span> i <span class="hl num">10</span> <span class="hl kwd">in</span>
    <span class="hl opt">[</span> ps<span class="hl opt">'</span>
    | p<span class="hl opt">' &lt;- [</span><span class="hl num">0</span><span class="hl opt">.</span><span class="hl num">.9</span><span class="hl opt">],</span> p <span class="hl opt">.&amp;.</span> shiftL <span class="hl num">1</span> p<span class="hl opt">' ==</span> <span class="hl num">0</span><span class="hl opt">,</span>
      mask <span class="hl opt">&lt;-</span> pieceMasks <span class="hl opt">!</span> p<span class="hl opt">' !</span> r<span class="hl opt">,</span>
      <span class="hl kwd">let</span> mask<span class="hl opt">' =</span> shiftL mask <span class="hl opt">(</span><span class="hl num">10</span><span class="hl opt">*</span>q<span class="hl opt">),</span>
      m <span class="hl opt">.&amp;.</span> mask<span class="hl opt">' ==</span> <span class="hl num">0</span><span class="hl opt">,</span>
      ps<span class="hl opt">' &lt;-</span> search <span class="hl opt">(</span>m <span class="hl opt">.</span>|<span class="hl opt">.</span> mask<span class="hl opt">') (</span>i<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">) (</span>p <span class="hl opt">.</span>|<span class="hl opt">.</span> shiftL <span class="hl num">1</span> p<span class="hl opt">') ((</span>p<span class="hl opt">',</span>mask<span class="hl opt">'):</span>ps<span class="hl opt">)]</span>

rows ps <span class="hl opt">= [[</span>i | x <span class="hl opt">&lt;- [</span><span class="hl num">0</span><span class="hl opt">.</span><span class="hl num">.4</span><span class="hl opt">], (</span>i<span class="hl opt">,</span>m<span class="hl opt">) &lt;-</span> ps<span class="hl opt">,</span> shiftL <span class="hl num">1</span> <span class="hl opt">(</span>y<span class="hl opt">*</span><span class="hl num">5</span><span class="hl opt">+</span>x<span class="hl opt">) .&amp;.</span> m <span class="hl opt">/=</span> <span class="hl num">0</span><span class="hl opt">]</span> | y <span class="hl opt">&lt;- [</span><span class="hl num">0</span><span class="hl opt">.</span><span class="hl num">.9</span><span class="hl opt">]]</span>

main <span class="hl opt">=</span> <span class="hl kwd">do</span>
    n <span class="hl opt">&lt;-</span> <span class="hl kwc">readIO</span> <span class="hl opt">.</span> <span class="hl kwc">head</span> <span class="hl opt">=&lt;&lt;</span> <span class="hl kwc">getArgs</span>
    <span class="hl kwd">let</span> sols <span class="hl opt">=</span> <span class="hl kwc">map</span> rows <span class="hl opt">(</span><span class="hl kwc">take</span> n <span class="hl opt">(</span>search <span class="hl opt">(-</span>shiftL <span class="hl num">1 50</span> <span class="hl opt">::</span> Word64<span class="hl opt">)</span> <span class="hl num">0</span> <span class="hl opt">(</span><span class="hl num">0</span> <span class="hl opt">::</span> Word<span class="hl opt">) []))</span>
    <span class="hl kwc">putStrLn</span> <span class="hl opt">(</span><span class="hl kwc">show</span> <span class="hl opt">(</span><span class="hl kwa">length</span> sols<span class="hl opt">) ++</span> <span class="hl str">&quot; solutions found</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">)</span>
    <span class="hl kwc">mapM</span> <span class="hl opt">(</span><span class="hl kwc">putStrLn</span> <span class="hl opt">.</span> <span class="hl kwc">unlines</span> <span class="hl opt">. (</span><span class="hl kwc">zipWith</span> <span class="hl opt">(++) (</span><span class="hl kwc">cycle</span> <span class="hl opt">[</span><span class="hl str">&quot;&quot;</span><span class="hl opt">,</span><span class="hl str">&quot; &quot;</span><span class="hl opt">]))</span>
         <span class="hl opt">.</span> <span class="hl kwc">map</span> <span class="hl opt">((++</span> <span class="hl str">&quot; &quot;</span><span class="hl opt">) .</span> <span class="hl kwc">unwords</span> <span class="hl opt">.</span> <span class="hl kwc">map show</span><span class="hl opt">)) [</span><span class="hl kwc">minimum</span> sols<span class="hl opt">,</span><span class="hl kwc">maximum</span> sols<span class="hl opt">]</span>
