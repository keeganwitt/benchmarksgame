<span class="hl com">/* The Computer Language Benchmarks game</span>
<span class="hl com">   http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"></span>
<span class="hl com">   contributed by Jos Hirth, transliterated from Jarkko Miettinen's Java program</span>
<span class="hl com">*/</span>

final <span class="hl kwb">int</span> minDepth <span class="hl opt">=</span> <span class="hl num">4</span><span class="hl opt">;</span>

<span class="hl kwa">void</span> <span class="hl kwd">main</span><span class="hl opt">(</span>args<span class="hl opt">){</span>
  <span class="hl kwb">int</span> n <span class="hl opt">=</span> args<span class="hl opt">.</span>length <span class="hl opt">&gt;</span> <span class="hl num">0</span> ? <span class="hl kwb">int</span><span class="hl opt">.</span><span class="hl kwd">parse</span><span class="hl opt">(</span>args<span class="hl kwc">[0]</span><span class="hl opt">) :</span> <span class="hl num">0</span><span class="hl opt">;</span>

  <span class="hl kwb">int</span> maxDepth <span class="hl opt">= (</span>minDepth <span class="hl opt">+</span> <span class="hl num">2</span> <span class="hl opt">&gt;</span> n<span class="hl opt">)</span> ? minDepth <span class="hl opt">+</span> <span class="hl num">2</span> <span class="hl opt">:</span> n<span class="hl opt">;</span>
  <span class="hl kwb">int</span> stretchDepth <span class="hl opt">=</span> maxDepth <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">;</span>

  <span class="hl kwb">int</span> check <span class="hl opt">= (</span>TreeNode<span class="hl opt">.</span><span class="hl kwd">bottomUpTree</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">,</span> stretchDepth<span class="hl opt">)).</span><span class="hl kwd">itemCheck</span><span class="hl opt">();</span>
  <span class="hl kwd">print</span><span class="hl opt">(</span><span class="hl str">&quot;stretch tree of depth $stretchDepth</span><span class="hl esc">\t</span> <span class="hl str">check: $check&quot;</span><span class="hl opt">);</span>

  TreeNode longLivedTree <span class="hl opt">=</span> TreeNode<span class="hl opt">.</span><span class="hl kwd">bottomUpTree</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">,</span> maxDepth<span class="hl opt">);</span>

  <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwb">int</span> depth <span class="hl opt">=</span> minDepth<span class="hl opt">;</span> depth <span class="hl opt">&lt;=</span> maxDepth<span class="hl opt">;</span> depth <span class="hl opt">+=</span> <span class="hl num">2</span><span class="hl opt">){</span>
    <span class="hl kwb">int</span> iterations <span class="hl opt">=</span> <span class="hl num">1</span> <span class="hl opt">&lt;&lt; (</span>maxDepth <span class="hl opt">-</span> depth <span class="hl opt">+</span> minDepth<span class="hl opt">);</span>
    check <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>

    <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwb">int</span> i <span class="hl opt">=</span> <span class="hl num">1</span><span class="hl opt">;</span> i <span class="hl opt">&lt;=</span> iterations<span class="hl opt">;</span> i<span class="hl opt">++){</span>
      check <span class="hl opt">+= (</span>TreeNode<span class="hl opt">.</span><span class="hl kwd">bottomUpTree</span><span class="hl opt">(</span>i<span class="hl opt">,</span> depth<span class="hl opt">)).</span><span class="hl kwd">itemCheck</span><span class="hl opt">();</span>
      check <span class="hl opt">+= (</span>TreeNode<span class="hl opt">.</span><span class="hl kwd">bottomUpTree</span><span class="hl opt">(-</span>i<span class="hl opt">,</span> depth<span class="hl opt">)).</span><span class="hl kwd">itemCheck</span><span class="hl opt">();</span>
    <span class="hl opt">}</span>
    <span class="hl kwd">print</span><span class="hl opt">(</span><span class="hl str">&quot;${iterations * 2}</span><span class="hl esc">\t</span> <span class="hl str">trees of depth $depth</span><span class="hl esc">\t</span> <span class="hl str">check: $check&quot;</span><span class="hl opt">);</span>
  <span class="hl opt">}</span>
  <span class="hl kwd">print</span><span class="hl opt">(</span><span class="hl str">&quot;long lived tree of depth $maxDepth</span><span class="hl esc">\t</span> <span class="hl str">check: ${longLivedTree.itemCheck()}&quot;</span><span class="hl opt">);</span>
<span class="hl opt">}</span>


<span class="hl kwa">class</span> TreeNode<span class="hl opt">{</span>
  TreeNode left<span class="hl opt">,</span> right<span class="hl opt">;</span>
  <span class="hl kwb">int</span> item<span class="hl opt">;</span>

  <span class="hl kwd">TreeNode</span><span class="hl opt">(</span><span class="hl kwa">this</span><span class="hl opt">.</span>item<span class="hl opt">, [</span><span class="hl kwa">this</span><span class="hl opt">.</span>left<span class="hl opt">,</span> <span class="hl kwa">this</span><span class="hl opt">.</span>right<span class="hl opt">]);</span>

  <span class="hl kwb">static</span> TreeNode <span class="hl kwd">bottomUpTree</span><span class="hl opt">(</span><span class="hl kwb">int</span> item<span class="hl opt">,</span> <span class="hl kwb">int</span> depth<span class="hl opt">){</span>
    <span class="hl kwa">if</span> <span class="hl opt">(</span>depth <span class="hl opt">&gt;</span> <span class="hl num">0</span><span class="hl opt">){</span>
      <span class="hl kwa">return new</span> <span class="hl kwd">TreeNode</span><span class="hl opt">(</span>
        item<span class="hl opt">,</span>
        <span class="hl kwd">bottomUpTree</span><span class="hl opt">(</span><span class="hl num">2</span> <span class="hl opt">*</span> item <span class="hl opt">-</span> <span class="hl num">1</span><span class="hl opt">,</span> depth <span class="hl opt">-</span> <span class="hl num">1</span><span class="hl opt">),</span>
        <span class="hl kwd">bottomUpTree</span><span class="hl opt">(</span><span class="hl num">2</span> <span class="hl opt">*</span> item<span class="hl opt">,</span> depth <span class="hl opt">-</span> <span class="hl num">1</span><span class="hl opt">)</span>
      <span class="hl opt">);</span>
    <span class="hl opt">}</span>
    <span class="hl kwa">return new</span> <span class="hl kwd">TreeNode</span><span class="hl opt">(</span>item<span class="hl opt">);</span>
  <span class="hl opt">}</span>

  <span class="hl kwb">int</span> <span class="hl kwd">itemCheck</span><span class="hl opt">(){</span>
    <span class="hl kwa">if</span> <span class="hl opt">(</span>left <span class="hl opt">==</span> <span class="hl kwa">null</span><span class="hl opt">){</span>
      <span class="hl kwa">return</span> item<span class="hl opt">;</span>
    <span class="hl opt">}</span>
    <span class="hl kwa">return</span> item <span class="hl opt">+</span> left<span class="hl opt">.</span><span class="hl kwd">itemCheck</span><span class="hl opt">() -</span> right<span class="hl opt">.</span><span class="hl kwd">itemCheck</span><span class="hl opt">();</span>
  <span class="hl opt">}</span>
<span class="hl opt">}</span>
