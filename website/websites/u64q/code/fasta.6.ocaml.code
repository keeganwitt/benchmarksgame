<span class="hl com">(* The Computer Language Benchmarks Game</span>
<span class="hl com"> * http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"> *</span>
<span class="hl com"> * contributed by Troestler Christophe</span>
<span class="hl com"> * modified by Mauricio Fernandez</span>
<span class="hl com"> * modified by Fabrice Le Fessant</span>
<span class="hl com"> *)</span>

<span class="hl com">(* Random number generator *)</span>


<span class="hl kwa">let</span> im <span class="hl opt">=</span> <span class="hl num">139968</span>
<span class="hl kwa">let</span> ia <span class="hl opt">=</span> <span class="hl num">3877</span>
<span class="hl kwa">let</span> ic <span class="hl opt">=</span> <span class="hl num">29573</span>
<span class="hl kwa">let</span> width <span class="hl opt">=</span> <span class="hl num">60</span>
<span class="hl kwa">let</span> im_inv_f <span class="hl opt">=</span> <span class="hl num">1</span><span class="hl opt">. /.</span> <span class="hl kwb">float</span> im

<span class="hl kwa">let</span> rand_char last ps line j chars <span class="hl opt">=</span>
  <span class="hl kwa">let</span> n <span class="hl opt">= (</span>last <span class="hl opt">*</span> ia <span class="hl opt">+</span> ic<span class="hl opt">)</span> <span class="hl kwa">mod</span> im <span class="hl kwa">in</span>
  <span class="hl kwa">let</span> p <span class="hl opt">=</span> <span class="hl kwb">float</span> n <span class="hl opt">*.</span> im_inv_f <span class="hl kwa">in</span>
  <span class="hl kwa">let</span> len <span class="hl opt">=</span> <span class="hl kwc">Array</span><span class="hl opt">.</span>length ps <span class="hl kwa">in</span>
  <span class="hl kwa">let</span> i <span class="hl opt">=</span> len<span class="hl opt">/</span><span class="hl num">2</span> <span class="hl kwa">in</span>
  <span class="hl kwa">let</span> i <span class="hl opt">=</span>
  <span class="hl kwa">if</span> p <span class="hl opt">&gt;=</span> ps<span class="hl opt">.(</span>i<span class="hl opt">)</span> <span class="hl kwa">then</span>
    <span class="hl kwa">let</span> i <span class="hl opt">=</span> <span class="hl kwb">ref</span> <span class="hl opt">(</span>i<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span> <span class="hl kwa">in</span>
    <span class="hl kwa">while</span> p <span class="hl opt">&gt;=</span> ps<span class="hl opt">.(!</span>i<span class="hl opt">)</span> <span class="hl kwa">do</span> incr i <span class="hl kwa">done</span><span class="hl opt">;</span>
    <span class="hl opt">!</span>i
  <span class="hl kwa">else</span>
    <span class="hl kwa">let</span> i <span class="hl opt">=</span> <span class="hl kwb">ref</span> <span class="hl num">0</span> <span class="hl kwa">in</span>
    <span class="hl kwa">while</span> p <span class="hl opt">&gt;=</span> ps<span class="hl opt">.(!</span>i<span class="hl opt">)</span> <span class="hl kwa">do</span> incr i <span class="hl kwa">done</span><span class="hl opt">;</span>
    <span class="hl opt">!</span>i
  <span class="hl kwa">in</span>
  line<span class="hl opt">.[</span>j<span class="hl opt">] &lt;-</span> chars<span class="hl opt">.(</span>i<span class="hl opt">);</span>
  n

<span class="hl kwa">let</span> make_random_fasta last id desc table n <span class="hl opt">=</span>
  print_char <span class="hl str">'&gt;'</span><span class="hl opt">;</span> print_string id<span class="hl opt">;</span>
  print_char <span class="hl str">' '</span><span class="hl opt">;</span> print_string desc<span class="hl opt">;</span>
  print_char <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">;</span>
  <span class="hl kwa">let</span> len_table <span class="hl opt">=</span> <span class="hl kwc">Array</span><span class="hl opt">.</span>length table <span class="hl kwa">in</span>
  <span class="hl kwa">let</span> ps <span class="hl opt">=</span> <span class="hl kwc">Array</span><span class="hl opt">.</span>create len_table <span class="hl num">0</span><span class="hl opt">.</span> <span class="hl kwa">in</span>
  <span class="hl kwa">let</span> chars <span class="hl opt">=</span> <span class="hl kwc">Array</span><span class="hl opt">.</span>create len_table <span class="hl str">'</span><span class="hl esc">\000</span><span class="hl str">'</span> <span class="hl kwa">in</span>
  <span class="hl kwa">let</span> p <span class="hl opt">=</span> <span class="hl kwb">ref</span> <span class="hl num">0.0</span> <span class="hl kwa">in</span>
  <span class="hl kwa">for</span> i <span class="hl opt">=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> len_table <span class="hl opt">-</span><span class="hl num">1</span> <span class="hl kwa">do</span>
    <span class="hl kwa">let</span> <span class="hl opt">(</span>c<span class="hl opt">,</span> px<span class="hl opt">) =</span> table<span class="hl opt">.(</span>i<span class="hl opt">)</span> <span class="hl kwa">in</span>
    chars<span class="hl opt">.(</span>i<span class="hl opt">) &lt;-</span> c<span class="hl opt">;</span>
    p <span class="hl opt">:= !</span>p <span class="hl opt">+.</span> px<span class="hl opt">;</span>
    ps<span class="hl opt">.(</span>i<span class="hl opt">) &lt;- !</span>p<span class="hl opt">;</span>
  <span class="hl kwa">done</span><span class="hl opt">;</span>
  <span class="hl kwa">let</span> nlines <span class="hl opt">= (</span>n <span class="hl opt">+</span> width <span class="hl opt">-</span> <span class="hl num">1</span><span class="hl opt">) /</span> width <span class="hl kwa">in</span>
  <span class="hl kwa">let</span> nchars <span class="hl opt">=</span> n <span class="hl opt">+</span> nlines <span class="hl kwa">in</span>
  <span class="hl kwa">let</span> line <span class="hl opt">=</span> <span class="hl kwc">String</span><span class="hl opt">.</span>create nchars <span class="hl kwa">in</span>
  <span class="hl kwa">let</span> last_n <span class="hl opt">=</span> <span class="hl kwb">ref</span> last <span class="hl kwa">in</span>
  <span class="hl kwa">let</span> pos <span class="hl opt">=</span> <span class="hl kwb">ref</span> <span class="hl num">0</span> <span class="hl kwa">in</span>
  <span class="hl kwa">for</span> i <span class="hl opt">=</span> <span class="hl num">1</span> <span class="hl kwa">to</span> nlines<span class="hl opt">-</span><span class="hl num">1</span> <span class="hl kwa">do</span>
    <span class="hl kwa">let</span> current_pos <span class="hl opt">= !</span>pos <span class="hl kwa">in</span>
    <span class="hl kwa">let</span> final_pos <span class="hl opt">=</span> current_pos <span class="hl opt">+</span> width<span class="hl opt">-</span><span class="hl num">1</span> <span class="hl kwa">in</span>
    <span class="hl kwa">for</span> j <span class="hl opt">=</span> current_pos <span class="hl kwa">to</span> final_pos <span class="hl kwa">do</span>
      last_n <span class="hl opt">:=</span> rand_char <span class="hl opt">!</span>last_n ps line j chars<span class="hl opt">;</span>
    <span class="hl kwa">done</span><span class="hl opt">;</span>
    pos <span class="hl opt">:=</span> final_pos <span class="hl opt">+</span> <span class="hl num">2</span><span class="hl opt">;</span>
    line<span class="hl opt">.[</span>final_pos<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">] &lt;-</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">;</span>
  <span class="hl kwa">done</span><span class="hl opt">;</span>
  <span class="hl kwa">for</span> j <span class="hl opt">= !</span>pos <span class="hl kwa">to</span> nchars <span class="hl opt">-</span> <span class="hl num">2</span> <span class="hl kwa">do</span>
    last_n <span class="hl opt">:=</span> rand_char <span class="hl opt">!</span>last_n ps line j chars<span class="hl opt">;</span>
  <span class="hl kwa">done</span><span class="hl opt">;</span>
  line<span class="hl opt">.[</span>nchars<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">] &lt;-</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">;</span>
  output_string stdout line<span class="hl opt">;</span>
  <span class="hl opt">!</span>last_n

<span class="hl com">(* [write s i0 l w] outputs [w] chars of [s.[0 .. l]], followed by a</span>
<span class="hl com">   newline, starting with [s.[i0]] and considering the substring [s.[0</span>
<span class="hl com">   .. l]] as a &quot;circle&quot;.</span>
<span class="hl com">   One assumes [0 &lt;= i0 &lt;= l &lt;= String.length s].</span>
<span class="hl com">   &#64;return [i0] needed for subsequent writes.  *)</span>
<span class="hl kwa">let rec</span> write s i0 l w <span class="hl opt">=</span>
  <span class="hl kwa">let</span> len <span class="hl opt">=</span> l <span class="hl opt">-</span> i0 <span class="hl kwa">in</span>
  <span class="hl kwa">if</span> w <span class="hl opt">&lt;=</span> len <span class="hl kwa">then</span> <span class="hl opt">(</span>output stdout s i0 w<span class="hl opt">;</span> print_char <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">;</span> i0 <span class="hl opt">+</span> w<span class="hl opt">)</span>
  <span class="hl kwa">else</span> <span class="hl opt">(</span>output stdout s i0 len<span class="hl opt">;</span> write s <span class="hl num">0</span> l <span class="hl opt">(</span>w <span class="hl opt">-</span> len<span class="hl opt">))</span>

<span class="hl kwa">let</span> make_repeat_fasta id desc src n <span class="hl opt">=</span>
  print_char <span class="hl str">'&gt;'</span><span class="hl opt">;</span>
  print_string id<span class="hl opt">;</span>
  print_char <span class="hl str">' '</span><span class="hl opt">;</span>
  print_string desc<span class="hl opt">;</span>
  print_char <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">;</span>
  <span class="hl kwa">let</span> l <span class="hl opt">=</span> <span class="hl kwc">String</span><span class="hl opt">.</span>length src
  <span class="hl kwa">and</span> i0 <span class="hl opt">=</span> <span class="hl kwb">ref</span> <span class="hl num">0</span> <span class="hl kwa">in</span>
  <span class="hl kwa">for</span> i <span class="hl opt">=</span> <span class="hl num">1</span> <span class="hl kwa">to</span> n <span class="hl opt">/</span> width <span class="hl kwa">do</span>
    i0 <span class="hl opt">:=</span> write src <span class="hl opt">!</span>i0 l width<span class="hl opt">;</span>
  <span class="hl kwa">done</span><span class="hl opt">;</span>
  <span class="hl kwa">let</span> w <span class="hl opt">=</span> n <span class="hl kwa">mod</span> width <span class="hl kwa">in</span>
  <span class="hl kwa">if</span> w <span class="hl opt">&gt;</span> <span class="hl num">0</span> <span class="hl kwa">then</span> ignore<span class="hl opt">(</span>write src <span class="hl opt">!</span>i0 l w<span class="hl opt">)</span>


<span class="hl kwa">let</span> alu <span class="hl opt">=</span> <span class="hl str">&quot;GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG\</span>
<span class="hl str">GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA\</span>
<span class="hl str">CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT\</span>
<span class="hl str">ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA\</span>
<span class="hl str">GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG\</span>
<span class="hl str">AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC\</span>
<span class="hl str">AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA&quot;</span>

<span class="hl kwa">let</span> iub <span class="hl opt">= [</span>| <span class="hl opt">(</span><span class="hl str">'a'</span><span class="hl opt">,</span> <span class="hl num">0.27</span><span class="hl opt">);  (</span><span class="hl str">'c'</span><span class="hl opt">,</span> <span class="hl num">0.12</span><span class="hl opt">);  (</span><span class="hl str">'g'</span><span class="hl opt">,</span> <span class="hl num">0.12</span><span class="hl opt">);  (</span><span class="hl str">'t'</span><span class="hl opt">,</span> <span class="hl num">0.27</span><span class="hl opt">);</span>
	     <span class="hl opt">(</span><span class="hl str">'B'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">);  (</span><span class="hl str">'D'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">);  (</span><span class="hl str">'H'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">);  (</span><span class="hl str">'K'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">);</span>
	     <span class="hl opt">(</span><span class="hl str">'M'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">);  (</span><span class="hl str">'N'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">);  (</span><span class="hl str">'R'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">);  (</span><span class="hl str">'S'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">);</span>
	     <span class="hl opt">(</span><span class="hl str">'V'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">);  (</span><span class="hl str">'W'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">);  (</span><span class="hl str">'Y'</span><span class="hl opt">,</span> <span class="hl num">0.02</span><span class="hl opt">);</span>  |<span class="hl opt">]</span>

<span class="hl kwa">let</span> homosapiens <span class="hl opt">= [</span>| <span class="hl opt">(</span><span class="hl str">'a'</span><span class="hl opt">,</span> <span class="hl num">0.3029549426680</span><span class="hl opt">);    (</span><span class="hl str">'c'</span><span class="hl opt">,</span> <span class="hl num">0.1979883004921</span><span class="hl opt">);</span>
		     <span class="hl opt">(</span><span class="hl str">'g'</span><span class="hl opt">,</span> <span class="hl num">0.1975473066391</span><span class="hl opt">);    (</span><span class="hl str">'t'</span><span class="hl opt">,</span> <span class="hl num">0.3015094502008</span><span class="hl opt">);</span>  |<span class="hl opt">]</span>

<span class="hl kwa">let</span> <span class="hl opt">() =</span>
  <span class="hl kwa">let</span> n <span class="hl opt">=</span> <span class="hl kwa">try</span> int_of_string<span class="hl opt">(</span><span class="hl kwc">Array</span><span class="hl opt">.</span>get <span class="hl kwc">Sys</span><span class="hl opt">.</span>argv <span class="hl num">1</span><span class="hl opt">)</span> <span class="hl kwa">with</span> _ <span class="hl opt">-&gt;</span> <span class="hl num">1000</span> <span class="hl kwa">in</span>
  make_repeat_fasta <span class="hl str">&quot;ONE&quot;</span> <span class="hl str">&quot;Homo sapiens alu&quot;</span> alu <span class="hl opt">(</span>n<span class="hl opt">*</span><span class="hl num">2</span><span class="hl opt">);</span>
  <span class="hl kwa">let</span> last <span class="hl opt">=</span> <span class="hl num">42</span> <span class="hl kwa">in</span>
  <span class="hl kwa">let</span> last <span class="hl opt">=</span> make_random_fasta last <span class="hl str">&quot;TWO&quot;</span> <span class="hl str">&quot;IUB ambiguity codes&quot;</span> iub <span class="hl opt">(</span>n<span class="hl opt">*</span><span class="hl num">3</span><span class="hl opt">)</span> <span class="hl kwa">in</span>
  <span class="hl kwa">let</span> _last <span class="hl opt">=</span>
    make_random_fasta last <span class="hl str">&quot;THREE&quot;</span> <span class="hl str">&quot;Homo sapiens frequency&quot;</span> homosapiens <span class="hl opt">(</span>n<span class="hl opt">*</span><span class="hl num">5</span><span class="hl opt">)</span>
  <span class="hl kwa">in</span>
  <span class="hl opt">()</span>
