<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://benchmarksgame.alioth.debian.org/</span>
<span class="hl slc"># </span>
<span class="hl slc"># contributed by Jacob Lee, Steven Bethard, et al</span>
<span class="hl slc"># 2to3</span>
<span class="hl slc"># fixed by Daniele Varrazzo</span>

<span class="hl kwa">import</span> sys<span class="hl opt">,</span> string

<span class="hl kwa">def</span> <span class="hl kwd">show</span><span class="hl opt">(</span>seq<span class="hl opt">,</span> 
         table<span class="hl opt">=</span>bytes<span class="hl opt">.</span><span class="hl kwd">maketrans</span><span class="hl opt">(</span>b<span class="hl str">'ACBDGHK</span><span class="hl esc">\n</span><span class="hl str">MNSRUTWVYacbdghkmnsrutwvy'</span><span class="hl opt">,</span>
                                b<span class="hl str">'TGVHCDM</span><span class="hl esc">\n</span><span class="hl str">KNSYAAWBRTGVHCDMKNSYAAWBR'</span><span class="hl opt">)):</span>
                                
   seq <span class="hl opt">= (</span><span class="hl str">''</span><span class="hl opt">.</span><span class="hl kwd">join</span><span class="hl opt">(</span>seq<span class="hl opt">)).</span><span class="hl kwd">translate</span><span class="hl opt">(</span>table<span class="hl opt">)[::-</span><span class="hl num">1</span><span class="hl opt">]</span>
   <span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl kwb">range</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">,</span> <span class="hl kwb">len</span><span class="hl opt">(</span>seq<span class="hl opt">),</span> <span class="hl num">60</span><span class="hl opt">):</span>
      <span class="hl kwa">print</span><span class="hl opt">(</span>seq<span class="hl opt">[</span>i<span class="hl opt">:</span>i<span class="hl opt">+</span><span class="hl num">60</span><span class="hl opt">])</span>
      

<span class="hl kwa">def</span> <span class="hl kwd">main</span><span class="hl opt">():</span>
   seq <span class="hl opt">= []</span>
   add_line <span class="hl opt">=</span> seq<span class="hl opt">.</span>append
   <span class="hl kwa">for</span> line <span class="hl kwa">in</span> sys<span class="hl opt">.</span>stdin<span class="hl opt">:</span>
      <span class="hl kwa">if</span> line<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">]</span> <span class="hl kwa">in</span> <span class="hl str">'&gt;;'</span><span class="hl opt">:</span>
         <span class="hl kwd">show</span><span class="hl opt">(</span>seq<span class="hl opt">)</span>
         <span class="hl kwa">print</span><span class="hl opt">(</span>line<span class="hl opt">,</span> end<span class="hl opt">=</span><span class="hl str">''</span><span class="hl opt">)</span>
         <span class="hl kwa">del</span> seq<span class="hl opt">[:]</span>
      <span class="hl kwa">else</span><span class="hl opt">:</span>
         <span class="hl kwd">add_line</span><span class="hl opt">(</span>line<span class="hl opt">[:-</span><span class="hl num">1</span><span class="hl opt">])</span>
   <span class="hl kwd">show</span><span class="hl opt">(</span>seq<span class="hl opt">)</span>

<span class="hl kwd">main</span><span class="hl opt">()</span>
