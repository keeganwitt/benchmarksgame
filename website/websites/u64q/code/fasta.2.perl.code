<span class="hl slc"># The Computer Language Benchmarks game</span>
<span class="hl slc"># http://benchmarksgame.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc"># contributed by David Pyke</span>
<span class="hl slc"># tweaked by Danny Sauer</span>

<span class="hl kwa">use</span> constant IM <span class="hl opt">=&gt;</span> <span class="hl num">139968</span><span class="hl opt">;</span>
<span class="hl kwa">use</span> constant IA <span class="hl opt">=&gt;</span> <span class="hl num">3877</span><span class="hl opt">;</span>
<span class="hl kwa">use</span> constant IC <span class="hl opt">=&gt;</span> <span class="hl num">29573</span><span class="hl opt">;</span>

<span class="hl kwa">use</span> constant LINELENGTH <span class="hl opt">=&gt;</span> <span class="hl num">60</span><span class="hl opt">;</span>

<span class="hl kwc">my</span> <span class="hl kwb">$LAST</span> <span class="hl opt">=</span> <span class="hl num">42</span><span class="hl opt">;</span>
<span class="hl kwa">sub</span> gen_random <span class="hl opt">($) {</span>
    <span class="hl kwa">return</span> <span class="hl opt">( (</span><span class="hl kwb">$_</span><span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">] * (</span><span class="hl kwb">$LAST</span> <span class="hl opt">= (</span><span class="hl kwb">$LAST</span> <span class="hl opt">*</span> IA <span class="hl opt">+</span> IC<span class="hl opt">) %</span> IM<span class="hl opt">)) /</span> IM <span class="hl opt">);</span>
<span class="hl opt">}</span>

<span class="hl kwa">sub</span> makeCumulative<span class="hl opt">($){</span>
    <span class="hl kwc">my</span><span class="hl opt">(</span><span class="hl kwb">$genelist</span><span class="hl opt">) =</span> <span class="hl kwb">&#64;_</span><span class="hl opt">;</span>
    <span class="hl kwb">$cp</span> <span class="hl opt">=</span> <span class="hl num">0.0</span><span class="hl opt">;</span>

    <span class="hl kwa">foreach</span> <span class="hl opt">(</span>&#64;<span class="hl kwb">$genelist</span><span class="hl opt">){</span>
        <span class="hl kwb">$_</span><span class="hl opt">-&gt;[</span><span class="hl num">1</span><span class="hl opt">] =</span> <span class="hl kwb">$cp</span> <span class="hl opt">+=</span> <span class="hl kwb">$_</span><span class="hl opt">-&gt;[</span><span class="hl num">1</span><span class="hl opt">];</span>
    <span class="hl opt">}</span>
<span class="hl opt">}</span>

<span class="hl kwa">sub</span> selectRandom<span class="hl opt">($){</span>
    <span class="hl kwc">my</span><span class="hl opt">(</span><span class="hl kwb">$genelist</span><span class="hl opt">) =</span> <span class="hl kwb">&#64;_</span><span class="hl opt">;</span>
    <span class="hl kwb">$r</span> <span class="hl opt">=</span> gen_random <span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">);</span>

    <span class="hl kwa">foreach</span> <span class="hl opt">(</span>&#64;<span class="hl kwb">$genelist</span><span class="hl opt">){</span>
        <span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwb">$r</span> <span class="hl opt">&lt;</span> <span class="hl kwb">$_</span><span class="hl opt">-&gt;[</span><span class="hl num">1</span><span class="hl opt">]){</span> <span class="hl kwa">return</span> <span class="hl kwb">$_</span><span class="hl opt">-&gt;[</span><span class="hl num">0</span><span class="hl opt">]; }</span>
    <span class="hl opt">}</span>
<span class="hl opt">}</span>


<span class="hl kwa">sub</span> makeRandomFasta<span class="hl opt">($$$$){</span>
<span class="hl slc">#void makeRandomFasta (const char * id, const char * desc, const struct aminoacids * genelist, int count, int n) {</span>
    <span class="hl kwc">my</span><span class="hl opt">(</span><span class="hl kwb">$id</span><span class="hl opt">,</span><span class="hl kwb">$desc</span><span class="hl opt">,</span><span class="hl kwb">$n</span><span class="hl opt">,</span><span class="hl kwb">$genelist</span><span class="hl opt">) =</span> <span class="hl kwb">&#64;_</span><span class="hl opt">;</span>

    <span class="hl kwc">print</span> <span class="hl str">&quot;&gt;$id $desc</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">;</span>
    <span class="hl kwb">$pick</span><span class="hl opt">=</span><span class="hl str">''</span><span class="hl opt">;</span>

    <span class="hl slc"># print whole lines</span>
    <span class="hl kwa">foreach</span> <span class="hl opt">(</span><span class="hl num">1</span> <span class="hl opt">..</span> <span class="hl kwc">int</span><span class="hl opt">(</span><span class="hl kwb">$n</span> <span class="hl opt">/</span> LINELENGTH<span class="hl opt">) ){</span>
        <span class="hl kwa">foreach</span> <span class="hl opt">(</span><span class="hl num">1</span> <span class="hl opt">..</span>  LINELENGTH <span class="hl opt">){</span>
            <span class="hl kwb">$pick</span> <span class="hl opt">.=</span> selectRandom<span class="hl opt">(</span><span class="hl kwb">$genelist</span><span class="hl opt">);</span>
        <span class="hl opt">}</span>
        <span class="hl kwc">print</span> <span class="hl str">&quot;$pick</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">;</span>
        <span class="hl kwb">$pick</span> <span class="hl opt">=</span> <span class="hl str">''</span><span class="hl opt">;</span>
    <span class="hl opt">}</span>
    <span class="hl slc">#print remaining line (if required)</span>
    <span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwb">$n</span> <span class="hl opt">%</span> LINELENGTH<span class="hl opt">){</span>
        <span class="hl kwa">foreach</span> <span class="hl opt">(</span><span class="hl num">1</span> <span class="hl opt">..</span>  <span class="hl kwb">$n</span> <span class="hl opt">%</span> LINELENGTH <span class="hl opt">){</span>
            <span class="hl kwb">$pick</span> <span class="hl opt">.=</span> selectRandom<span class="hl opt">(</span><span class="hl kwb">$genelist</span><span class="hl opt">);</span>
        <span class="hl opt">}</span>
        <span class="hl kwc">print</span> <span class="hl str">&quot;$pick</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">;</span>
    <span class="hl opt">}</span>
<span class="hl opt">}</span>

<span class="hl kwa">sub</span> makeRepeatFasta<span class="hl opt">($$$$){</span>
<span class="hl slc">#void makeRepeatFasta (const char * id, const char * desc, const char * s, int n) {</span>
    <span class="hl slc"># we want to print $n characters of $s (repeated if nessary) with newlines every LINELENGTH</span>
    <span class="hl kwc">my</span><span class="hl opt">(</span><span class="hl kwb">$id</span><span class="hl opt">,</span><span class="hl kwb">$desc</span><span class="hl opt">,</span><span class="hl kwb">$s</span><span class="hl opt">,</span><span class="hl kwb">$n</span><span class="hl opt">) =</span> <span class="hl kwb">&#64;_</span><span class="hl opt">;</span>

    <span class="hl kwc">print</span> <span class="hl str">&quot;&gt;$id $desc</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">;</span>

    <span class="hl slc"># what we need, and the extra (if any) will be discarded.</span>
    <span class="hl kwa">foreach</span> <span class="hl opt">(</span><span class="hl num">1</span> <span class="hl opt">..</span> <span class="hl kwc">int</span><span class="hl opt">(</span><span class="hl kwb">$n</span> <span class="hl opt">/</span> LINELENGTH<span class="hl opt">) ){</span>
        <span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwc">length</span> <span class="hl kwb">$ss</span> <span class="hl opt">&lt;</span> LINELENGTH<span class="hl opt">){</span>
            <span class="hl kwb">$ss</span> <span class="hl opt">.=</span> <span class="hl kwb">$s</span><span class="hl opt">;</span>
        <span class="hl opt">}</span>
        <span class="hl kwc">print substr</span><span class="hl opt">(</span><span class="hl kwb">$ss</span><span class="hl opt">,</span><span class="hl num">0</span><span class="hl opt">,</span>LINELENGTH<span class="hl opt">),</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">;</span>
        <span class="hl kwb">$ss</span> <span class="hl opt">=</span> <span class="hl kwc">substr</span><span class="hl opt">(</span><span class="hl kwb">$ss</span><span class="hl opt">,</span>LINELENGTH<span class="hl opt">);</span>
    <span class="hl opt">}</span>
    <span class="hl slc">#final_line</span>
    <span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwc">length</span> <span class="hl kwb">$ss</span> <span class="hl opt">&lt;</span> LINELENGTH<span class="hl opt">){</span>
        <span class="hl kwb">$ss</span> <span class="hl opt">.=</span> <span class="hl kwb">$s</span><span class="hl opt">;</span>
    <span class="hl opt">}</span>
    <span class="hl kwc">print substr</span><span class="hl opt">(</span><span class="hl kwb">$ss</span><span class="hl opt">,</span> <span class="hl num">0</span><span class="hl opt">, (</span><span class="hl kwb">$n</span> <span class="hl opt">%</span> LINELENGTH<span class="hl opt">)),</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">;</span>
<span class="hl kwc">print</span> STDERR <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">;</span>
<span class="hl opt">}</span>


<span class="hl kwc">my</span> <span class="hl kwb">$iub</span> <span class="hl opt">= [</span>
    <span class="hl opt">[</span> <span class="hl str">'a'</span><span class="hl opt">,</span> <span class="hl num">0.27</span> <span class="hl opt">],</span>
    <span class="hl opt">[</span> <span class="hl str">'c'</span><span class="hl opt">,</span> <span class="hl num">0.12</span> <span class="hl opt">],</span>
    <span class="hl opt">[</span> <span class="hl str">'g'</span><span class="hl opt">,</span> <span class="hl num">0.12</span> <span class="hl opt">],</span>
    <span class="hl opt">[</span> <span class="hl str">'t'</span><span class="hl opt">,</span> <span class="hl num">0.27</span> <span class="hl opt">],</span>
    <span class="hl opt">[</span> <span class="hl str">'B'</span><span class="hl opt">,</span> <span class="hl num">0.02</span> <span class="hl opt">],</span>
    <span class="hl opt">[</span> <span class="hl str">'D'</span><span class="hl opt">,</span> <span class="hl num">0.02</span> <span class="hl opt">],</span>
    <span class="hl opt">[</span> <span class="hl str">'H'</span><span class="hl opt">,</span> <span class="hl num">0.02</span> <span class="hl opt">],</span>
    <span class="hl opt">[</span> <span class="hl str">'K'</span><span class="hl opt">,</span> <span class="hl num">0.02</span> <span class="hl opt">],</span>
    <span class="hl opt">[</span> <span class="hl str">'M'</span><span class="hl opt">,</span> <span class="hl num">0.02</span> <span class="hl opt">],</span>
    <span class="hl opt">[</span> <span class="hl str">'N'</span><span class="hl opt">,</span> <span class="hl num">0.02</span> <span class="hl opt">],</span>
    <span class="hl opt">[</span> <span class="hl str">'R'</span><span class="hl opt">,</span> <span class="hl num">0.02</span> <span class="hl opt">],</span>
    <span class="hl opt">[</span> <span class="hl str">'S'</span><span class="hl opt">,</span> <span class="hl num">0.02</span> <span class="hl opt">],</span>
    <span class="hl opt">[</span> <span class="hl str">'V'</span><span class="hl opt">,</span> <span class="hl num">0.02</span> <span class="hl opt">],</span>
    <span class="hl opt">[</span> <span class="hl str">'W'</span><span class="hl opt">,</span> <span class="hl num">0.02</span> <span class="hl opt">],</span>
    <span class="hl opt">[</span> <span class="hl str">'Y'</span><span class="hl opt">,</span> <span class="hl num">0.02</span> <span class="hl opt">]</span>
<span class="hl opt">];</span>

<span class="hl kwc">my</span> <span class="hl kwb">$homosapiens</span> <span class="hl opt">= [</span>
    <span class="hl opt">[</span> <span class="hl str">'a'</span><span class="hl opt">,</span> <span class="hl num">0.3029549426680</span> <span class="hl opt">],</span>
    <span class="hl opt">[</span> <span class="hl str">'c'</span><span class="hl opt">,</span> <span class="hl num">0.1979883004921</span> <span class="hl opt">],</span>
    <span class="hl opt">[</span> <span class="hl str">'g'</span><span class="hl opt">,</span> <span class="hl num">0.1975473066391</span> <span class="hl opt">],</span>
    <span class="hl opt">[</span> <span class="hl str">'t'</span><span class="hl opt">,</span> <span class="hl num">0.3015094502008</span> <span class="hl opt">]</span>
<span class="hl opt">];</span>

<span class="hl kwb">$alu</span> <span class="hl opt">=</span>
    <span class="hl str">'GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG'</span> <span class="hl opt">.</span>
    <span class="hl str">'GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA'</span> <span class="hl opt">.</span>
    <span class="hl str">'CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT'</span> <span class="hl opt">.</span>
    <span class="hl str">'ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA'</span> <span class="hl opt">.</span>
    <span class="hl str">'GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG'</span> <span class="hl opt">.</span>
    <span class="hl str">'AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC'</span> <span class="hl opt">.</span>
    <span class="hl str">'AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA'</span><span class="hl opt">;</span>

<span class="hl slc">######################################################################</span>
<span class="hl slc">#main</span>

<span class="hl kwc">my</span> <span class="hl kwb">$n</span> <span class="hl opt">= (</span><span class="hl kwb">$ARGV</span><span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">] ||</span> <span class="hl num">1000</span><span class="hl opt">) ;</span>

makeCumulative <span class="hl kwb">$iub</span><span class="hl opt">;</span>
makeCumulative <span class="hl kwb">$homosapiens</span><span class="hl opt">;</span>

makeRepeatFasta <span class="hl opt">(</span><span class="hl str">'ONE'</span><span class="hl opt">,</span> <span class="hl str">'Homo sapiens alu'</span><span class="hl opt">,</span> <span class="hl kwb">$alu</span><span class="hl opt">,</span> <span class="hl kwb">$n</span><span class="hl opt">*</span><span class="hl num">2</span><span class="hl opt">);</span>
makeRandomFasta <span class="hl opt">(</span><span class="hl str">'TWO'</span><span class="hl opt">,</span> <span class="hl str">'IUB ambiguity codes'</span><span class="hl opt">,</span> <span class="hl kwb">$n</span><span class="hl opt">*</span><span class="hl num">3</span><span class="hl opt">,</span> <span class="hl kwb">$iub</span><span class="hl opt">);</span>
makeRandomFasta <span class="hl opt">(</span><span class="hl str">'THREE'</span><span class="hl opt">,</span> <span class="hl str">'Homo sapiens frequency'</span><span class="hl opt">,</span> <span class="hl kwb">$n</span><span class="hl opt">*</span><span class="hl num">5</span><span class="hl opt">,</span> <span class="hl kwb">$homosapiens</span><span class="hl opt">);</span>

<span class="hl kwa">exit</span> <span class="hl num">0</span><span class="hl opt">;</span>

<span class="hl slc">#END OF FILE</span>
