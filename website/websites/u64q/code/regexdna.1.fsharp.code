<span class="hl slc">// The Computer Language Benchmarks Game</span>
<span class="hl slc">// http://benchmarksgame.alioth.debian.org/</span>
<span class="hl slc">//</span>
<span class="hl slc">// Modified version of Valentin Kraevskiy</span>
<span class="hl slc">// Contributed by Vassil Keremidchiev</span>

<span class="hl kwa">open</span> <span class="hl kwd">System</span><span class="hl opt">.</span><span class="hl kwd">Text</span><span class="hl opt">.</span><span class="hl kwd">RegularExpressions</span>
<span class="hl kwa">open</span> <span class="hl kwd">System</span><span class="hl opt">.</span><span class="hl kwd">Threading</span>

<span class="hl kwa">let</span> regex s <span class="hl opt">=</span> <span class="hl kwd">Regex</span> <span class="hl opt">(</span>s<span class="hl opt">,</span> <span class="hl kwd">RegexOptions</span><span class="hl opt">.</span><span class="hl kwd">Compiled</span><span class="hl opt">)</span>
<span class="hl kwa">let</span> input <span class="hl opt">=</span> stdin<span class="hl opt">.</span><span class="hl kwd">ReadToEnd</span> <span class="hl opt">()</span>
<span class="hl kwa">let</span> withoutComments <span class="hl opt">= (</span>regex <span class="hl str">&quot;&gt;.*</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">).</span><span class="hl kwd">Replace</span> <span class="hl opt">(</span>input<span class="hl opt">,</span> <span class="hl str">&quot;&quot;</span><span class="hl opt">)</span>
<span class="hl kwa">let</span> text <span class="hl opt">= (</span>regex <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">).</span><span class="hl kwd">Replace</span> <span class="hl opt">(</span>withoutComments<span class="hl opt">,</span> <span class="hl str">&quot;&quot;</span><span class="hl opt">)</span>

<span class="hl kwa">let rec</span> onblocks res s <span class="hl opt">=</span>
    <span class="hl kwa">let</span> size <span class="hl opt">=</span> <span class="hl num">1024</span><span class="hl opt">*</span><span class="hl num">4096</span>
    <span class="hl kwa">match</span> s <span class="hl kwa">with</span>
    | <span class="hl str">&quot;&quot;</span> <span class="hl opt">-&gt;</span> res
    | s <span class="hl kwa">when</span> <span class="hl opt">(</span>s<span class="hl opt">.</span><span class="hl kwd">Length</span> <span class="hl opt">&lt;</span> size<span class="hl opt">) -&gt;</span> res <span class="hl opt">&#64; [</span>s<span class="hl opt">]</span>
    | s <span class="hl opt">-&gt;</span> onblocks <span class="hl opt">(</span>res <span class="hl opt">&#64; [</span>s<span class="hl opt">.</span><span class="hl kwd">Substring</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">,</span> size<span class="hl opt">)]) (</span>s<span class="hl opt">.</span><span class="hl kwd">Substring</span><span class="hl opt">(</span>size<span class="hl opt">))</span> 

<span class="hl opt">[</span><span class="hl str">&quot;agggtaaa|tttaccct&quot;</span>
 <span class="hl str">&quot;[cgt]gggtaaa|tttaccc[acg]&quot;</span>
 <span class="hl str">&quot;a[act]ggtaaa|tttacc[agt]t&quot;</span>
 <span class="hl str">&quot;ag[act]gtaaa|tttac[agt]ct&quot;</span>
 <span class="hl str">&quot;agg[act]taaa|ttta[agt]cct&quot;</span>
 <span class="hl str">&quot;aggg[acg]aaa|ttt[cgt]ccct&quot;</span>
 <span class="hl str">&quot;agggt[cgt]aa|tt[acg]accct&quot;</span>
 <span class="hl str">&quot;agggta[cgt]a|t[acg]taccct&quot;</span>
 <span class="hl str">&quot;agggtaa[cgt]|[acg]ttaccct&quot;</span><span class="hl opt">]</span>
|<span class="hl opt">&gt;</span> <span class="hl kwd">List</span><span class="hl opt">.</span>map <span class="hl opt">(</span><span class="hl kwa">fun</span> s <span class="hl opt">-&gt;</span> async <span class="hl opt">{</span> 
        return <span class="hl kwd">System</span><span class="hl opt">.</span><span class="hl kwd">String</span><span class="hl opt">.</span><span class="hl kwd">Format</span><span class="hl opt">(</span> <span class="hl str">&quot;{0} {1}&quot;</span><span class="hl opt">,</span> s<span class="hl opt">,</span> 
                                        <span class="hl opt">((</span>regex s<span class="hl opt">).</span><span class="hl kwd">Matches</span> text<span class="hl opt">).</span><span class="hl kwd">Count</span><span class="hl opt">) } )</span> 
|<span class="hl opt">&gt;</span> <span class="hl kwd">Async</span><span class="hl opt">.</span><span class="hl kwd">Parallel</span> |<span class="hl opt">&gt;</span> <span class="hl kwd">Async</span><span class="hl opt">.</span><span class="hl kwd">RunSynchronously</span> 
|<span class="hl opt">&gt;</span> <span class="hl kwd">Array</span><span class="hl opt">.</span>iter <span class="hl opt">(</span>printfn <span class="hl str">&quot;%s&quot;</span><span class="hl opt">)</span>

<span class="hl kwa">let</span> newTextLength t <span class="hl opt">=</span>
    <span class="hl opt">[</span><span class="hl str">&quot;B&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;(c|g|t)&quot;</span>
     <span class="hl str">&quot;D&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;(a|g|t)&quot;</span>
     <span class="hl str">&quot;H&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;(a|c|t)&quot;</span>
     <span class="hl str">&quot;K&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;(g|t)&quot;</span>
     <span class="hl str">&quot;M&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;(a|c)&quot;</span>
     <span class="hl str">&quot;N&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;(a|c|g|t)&quot;</span>
     <span class="hl str">&quot;R&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;(a|g)&quot;</span>
     <span class="hl str">&quot;S&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;(c|g)&quot;</span>
     <span class="hl str">&quot;V&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;(a|c|g)&quot;</span>
     <span class="hl str">&quot;W&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;(a|t)&quot;</span>
     <span class="hl str">&quot;Y&quot;</span><span class="hl opt">,</span> <span class="hl str">&quot;(c|t)&quot;</span><span class="hl opt">]</span>
     |<span class="hl opt">&gt;</span> <span class="hl kwd">List</span><span class="hl opt">.</span>fold <span class="hl opt">(</span><span class="hl kwa">fun</span> s <span class="hl opt">(</span>code<span class="hl opt">,</span> alt<span class="hl opt">) -&gt; (</span>regex code<span class="hl opt">).</span><span class="hl kwd">Replace</span> <span class="hl opt">(</span>s<span class="hl opt">,</span> alt<span class="hl opt">))</span> t 
     |<span class="hl opt">&gt;</span> <span class="hl kwd">String</span><span class="hl opt">.</span>length

<span class="hl kwa">let</span> newText <span class="hl opt">=</span> 
    text |<span class="hl opt">&gt;</span> onblocks <span class="hl opt">[]</span> 
    |<span class="hl opt">&gt;</span> <span class="hl kwd">Seq</span><span class="hl opt">.</span>map <span class="hl opt">(</span><span class="hl kwa">fun</span> s <span class="hl opt">-&gt;</span> async <span class="hl opt">{</span> return newTextLength s <span class="hl opt">} )</span> 
    |<span class="hl opt">&gt;</span> <span class="hl kwd">Async</span><span class="hl opt">.</span><span class="hl kwd">Parallel</span> |<span class="hl opt">&gt;</span> <span class="hl kwd">Async</span><span class="hl opt">.</span><span class="hl kwd">RunSynchronously</span>
    |<span class="hl opt">&gt;</span> <span class="hl kwd">Array</span><span class="hl opt">.</span>sum

printf <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">%i</span><span class="hl esc">\n</span><span class="hl str">%i</span><span class="hl esc">\n</span><span class="hl str">%i</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> input<span class="hl opt">.</span><span class="hl kwd">Length</span> text<span class="hl opt">.</span><span class="hl kwd">Length</span> newText
