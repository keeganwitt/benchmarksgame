<span class="hl slc">// The Computer Language Benchmarks Game</span>
<span class="hl slc">// http://benchmarksgame.alioth.debian.org/</span>
<span class="hl slc">//</span>
<span class="hl slc">// contributed by Jos Hirth</span>
<span class="hl slc">// based on the JavaScript version by Ian Osgood with modifications by Isaac Gouy</span>

<span class="hl kwa">import</span> <span class="hl str">'dart:math'</span> as Math<span class="hl opt">;</span>
<span class="hl kwa">import</span> <span class="hl str">'dart:typed_data'</span><span class="hl opt">;</span>

<span class="hl kwb">double</span> <span class="hl kwd">A</span><span class="hl opt">(</span><span class="hl kwb">int</span> i<span class="hl opt">,</span> <span class="hl kwb">int</span> j<span class="hl opt">) {</span>
  <span class="hl kwb">int</span> div <span class="hl opt">= ((</span>i <span class="hl opt">+</span> j<span class="hl opt">) * (</span>i <span class="hl opt">+</span> j <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">) &gt;&gt;</span> <span class="hl num">1</span><span class="hl opt">) +</span> i <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">;</span>
  <span class="hl kwa">return</span> <span class="hl num">1.0</span> <span class="hl opt">/</span> div<span class="hl opt">;</span>
<span class="hl opt">}</span>

<span class="hl kwa">void</span> <span class="hl kwd">Au</span><span class="hl opt">(</span>Float64List u<span class="hl opt">,</span> Float64List w<span class="hl opt">) {</span>
  <span class="hl kwb">int</span> len <span class="hl opt">=</span> u<span class="hl opt">.</span>length<span class="hl opt">;</span>
  <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwb">int</span> i <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> i <span class="hl opt">&lt;</span> len<span class="hl opt">; ++</span>i<span class="hl opt">) {</span>
    <span class="hl kwb">double</span> t <span class="hl opt">=</span> <span class="hl num">0.0</span><span class="hl opt">;</span>
    <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwb">int</span> j <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> j <span class="hl opt">&lt;</span> len<span class="hl opt">; ++</span>j<span class="hl opt">) {</span>
      t <span class="hl opt">+=</span> <span class="hl kwd">A</span><span class="hl opt">(</span>i<span class="hl opt">,</span> j<span class="hl opt">) *</span> u<span class="hl kwc">[j]</span><span class="hl opt">;</span>
    <span class="hl opt">}</span>
    w<span class="hl kwc">[i]</span> <span class="hl opt">=</span> t<span class="hl opt">;</span>
  <span class="hl opt">}</span>
<span class="hl opt">}</span>

<span class="hl kwa">void</span> <span class="hl kwd">Atu</span><span class="hl opt">(</span>Float64List w<span class="hl opt">,</span> Float64List v<span class="hl opt">) {</span>
  <span class="hl kwb">int</span> len <span class="hl opt">=</span> w<span class="hl opt">.</span>length<span class="hl opt">;</span>
  <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwb">int</span> i <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> i <span class="hl opt">&lt;</span> len<span class="hl opt">; ++</span>i<span class="hl opt">) {</span>
    <span class="hl kwb">double</span> t <span class="hl opt">=</span> <span class="hl num">0.0</span><span class="hl opt">;</span>
    <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwb">int</span> j <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> j <span class="hl opt">&lt;</span> len<span class="hl opt">; ++</span>j<span class="hl opt">) {</span>
      t <span class="hl opt">+=</span> <span class="hl kwd">A</span><span class="hl opt">(</span>j<span class="hl opt">,</span> i<span class="hl opt">) *</span> w<span class="hl kwc">[j]</span><span class="hl opt">;</span>
    <span class="hl opt">}</span>
    v<span class="hl kwc">[i]</span> <span class="hl opt">=</span> t<span class="hl opt">;</span>
  <span class="hl opt">}</span>
<span class="hl opt">}</span>

<span class="hl kwa">void</span> <span class="hl kwd">AtAu</span><span class="hl opt">(</span>Float64List u<span class="hl opt">,</span> Float64List v<span class="hl opt">,</span> Float64List w<span class="hl opt">) {</span>
  <span class="hl kwd">Au</span><span class="hl opt">(</span>u<span class="hl opt">,</span> w<span class="hl opt">);</span>
  <span class="hl kwd">Atu</span><span class="hl opt">(</span>w<span class="hl opt">,</span> v<span class="hl opt">);</span>
<span class="hl opt">}</span>

<span class="hl kwb">double</span> <span class="hl kwd">spectralNorm</span><span class="hl opt">(</span>n<span class="hl opt">) {</span>
  <span class="hl kwa">var</span> u <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">Float64List</span><span class="hl opt">(</span>n<span class="hl opt">)..</span><span class="hl kwd">fillRange</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">,</span> n<span class="hl opt">,</span> <span class="hl num">1.0</span><span class="hl opt">),</span>
      v <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">Float64List</span><span class="hl opt">(</span>n<span class="hl opt">),</span>
      w <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">Float64List</span><span class="hl opt">(</span>n<span class="hl opt">),</span>
      vv <span class="hl opt">=</span> <span class="hl num">0.0</span><span class="hl opt">,</span>
      vBv <span class="hl opt">=</span> <span class="hl num">0.0</span><span class="hl opt">;</span>

  <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwb">int</span> i <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> i <span class="hl opt">&lt;</span> <span class="hl num">10</span><span class="hl opt">; ++</span>i<span class="hl opt">) {</span>
    <span class="hl kwd">AtAu</span><span class="hl opt">(</span>u<span class="hl opt">,</span> v<span class="hl opt">,</span> w<span class="hl opt">);</span>
    <span class="hl kwd">AtAu</span><span class="hl opt">(</span>v<span class="hl opt">,</span> u<span class="hl opt">,</span> w<span class="hl opt">);</span>
  <span class="hl opt">}</span>
  <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl kwb">int</span> i <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> i <span class="hl opt">&lt;</span> n<span class="hl opt">; ++</span>i<span class="hl opt">) {</span>
    vBv <span class="hl opt">+=</span> u<span class="hl kwc">[i]</span> <span class="hl opt">*</span> v<span class="hl kwc">[i]</span><span class="hl opt">;</span>
    vv  <span class="hl opt">+=</span> v<span class="hl kwc">[i]</span> <span class="hl opt">*</span> v<span class="hl kwc">[i]</span><span class="hl opt">;</span>
  <span class="hl opt">}</span>
  <span class="hl kwa">return</span> Math<span class="hl opt">.</span><span class="hl kwd">sqrt</span><span class="hl opt">(</span>vBv <span class="hl opt">/</span> vv<span class="hl opt">);</span>
<span class="hl opt">}</span>

<span class="hl kwa">void</span> <span class="hl kwd">main</span><span class="hl opt">(</span>args<span class="hl opt">) {</span>
  <span class="hl kwb">int</span> n <span class="hl opt">=</span> args<span class="hl opt">.</span>length <span class="hl opt">&gt;</span> <span class="hl num">0</span> ? <span class="hl kwb">int</span><span class="hl opt">.</span><span class="hl kwd">parse</span><span class="hl opt">(</span>args<span class="hl kwc">[0]</span><span class="hl opt">) :</span> <span class="hl num">100</span><span class="hl opt">;</span>
  <span class="hl kwd">print</span><span class="hl opt">(</span><span class="hl kwd">spectralNorm</span><span class="hl opt">(</span>n<span class="hl opt">).</span><span class="hl kwd">toStringAsFixed</span><span class="hl opt">(</span><span class="hl num">9</span><span class="hl opt">));</span>
<span class="hl opt">}</span>
