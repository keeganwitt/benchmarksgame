<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://benchmarksgame.alioth.debian.org</span>
<span class="hl slc">#</span>
<span class="hl slc"># contributed by jose fco. gonzalez</span>
<span class="hl slc"># optimized &amp; parallelized by Rick Branson</span>
<span class="hl slc"># optimized for ruby2 by Aaron Tavistock</span>
<span class="hl slc"># optimized more by Utkarsh Kukreti</span>

MATCHERS <span class="hl opt">= [</span>
  <span class="hl kwc">/agggtaaa|tttaccct/</span><span class="hl opt">,</span>
  <span class="hl kwc">/[cgt]gggtaaa|tttaccc[acg]/</span><span class="hl opt">,</span>
  <span class="hl kwc">/a[act]ggtaaa|tttacc[agt]t/</span><span class="hl opt">,</span>
  <span class="hl kwc">/ag[act]gtaaa|tttac[agt]ct/</span><span class="hl opt">,</span>
  <span class="hl kwc">/agg[act]taaa|ttta[agt]cct/</span><span class="hl opt">,</span>
  <span class="hl kwc">/aggg[acg]aaa|ttt[cgt]ccct/</span><span class="hl opt">,</span>
  <span class="hl kwc">/agggt[cgt]aa|tt[acg]accct/</span><span class="hl opt">,</span>
  <span class="hl kwc">/agggta[cgt]a|t[acg]taccct/</span><span class="hl opt">,</span>
  <span class="hl kwc">/agggtaa[cgt]|[acg]ttaccct/</span>
<span class="hl opt">]</span>

seq <span class="hl opt">=</span> <span class="hl kwc">STDIN</span><span class="hl opt">.</span>read
ilen <span class="hl opt">=</span> seq<span class="hl opt">.</span>size

seq<span class="hl opt">.</span>gsub<span class="hl opt">!(</span><span class="hl kwc">/&gt;.*\n|\n/</span><span class="hl opt">,</span><span class="hl str">&quot;&quot;</span>)
clen <span class="hl opt">=</span> seq<span class="hl opt">.</span>length

MATCHERS<span class="hl opt">.</span>each <span class="hl kwa">do</span> <span class="hl opt">|</span>m<span class="hl opt">|</span>
  puts <span class="hl str">&quot;</span><span class="hl esc">#{m.source}</span> <span class="hl str"></span><span class="hl esc">#{seq.scan(m).size}</span><span class="hl str">&quot;</span>
<span class="hl kwa">end</span>

hash <span class="hl opt">= {</span>
  <span class="hl str">'B'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'(c|g|t)'</span><span class="hl opt">,</span> 
  <span class="hl str">'D'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'(a|g|t)'</span><span class="hl opt">,</span> 
  <span class="hl str">'H'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'(a|c|t)'</span><span class="hl opt">,</span> 
  <span class="hl str">'K'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'(g|t)'</span><span class="hl opt">,</span>
  <span class="hl str">'M'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'(a|c)'</span><span class="hl opt">,</span> 
  <span class="hl str">'N'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'(a|c|g|t)'</span><span class="hl opt">,</span> 
  <span class="hl str">'R'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'(a|g)'</span><span class="hl opt">,</span> 
  <span class="hl str">'S'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'(c|t)'</span><span class="hl opt">,</span>
  <span class="hl str">'V'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'(a|c|g)'</span><span class="hl opt">,</span> 
  <span class="hl str">'W'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'(a|t)'</span><span class="hl opt">,</span> 
  <span class="hl str">'Y'</span> <span class="hl opt">=&gt;</span> <span class="hl str">'(c|t)'</span>
<span class="hl opt">}</span>

seq<span class="hl opt">.</span>gsub<span class="hl opt">!(</span><span class="hl kwc">/B|D|H|K|M|N|R|S|V|W|Y/</span><span class="hl opt">,</span> hash)

puts
puts ilen
puts clen

puts seq<span class="hl opt">.</span>length
