<span class="hl com">(* The Computer Language Benchmarks Game</span>
<span class="hl com"> * http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"></span>
<span class="hl com">   contributed by Ingo Bormuth</span>
<span class="hl com">   modified by Fabrice Le Fessant </span>
<span class="hl com">*)</span>

<span class="hl kwa">let</span> verbose <span class="hl opt">=</span> <span class="hl kwa">false</span>

<span class="hl kwa">let rec</span> print_args list <span class="hl opt">=</span>
  <span class="hl kwa">match</span> list <span class="hl kwa">with</span>
      <span class="hl opt">[] -&gt; ()</span>
    | x <span class="hl opt">::</span> tail <span class="hl opt">-&gt;</span>
	<span class="hl kwc">Printf</span><span class="hl opt">.</span>fprintf stderr <span class="hl str">&quot; %d&quot;</span> x<span class="hl opt">;</span>
	print_args tail

<span class="hl kwa">let</span> enter name list <span class="hl opt">=</span>
  <span class="hl kwa">if</span> verbose <span class="hl kwa">then begin</span>
    <span class="hl kwc">Printf</span><span class="hl opt">.</span>fprintf stderr <span class="hl str">&quot;%s:&quot;</span> name<span class="hl opt">;</span>
    print_args list<span class="hl opt">;</span>
    <span class="hl kwc">Printf</span><span class="hl opt">.</span>fprintf stderr <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">%!&quot;</span>
  <span class="hl kwa">end</span>

<span class="hl kwa">let</span> arch64 <span class="hl opt">=</span>
  <span class="hl kwa">match</span> <span class="hl kwc">Sys</span><span class="hl opt">.</span>word_size <span class="hl kwa">with</span>
      <span class="hl num">32</span> <span class="hl opt">-&gt;</span> <span class="hl kwa">false</span>
    | <span class="hl num">64</span> <span class="hl opt">-&gt;</span> <span class="hl kwa">true</span>
    | _ <span class="hl opt">-&gt;</span> <span class="hl kwa">assert false</span>


<span class="hl kwa">module</span> <span class="hl kwd">LineReader</span> <span class="hl opt">:</span> <span class="hl kwa">sig</span>

  <span class="hl com">(* read all non empty lines *)</span>
  <span class="hl kwa">val</span> read <span class="hl opt">:</span>
    <span class="hl com">(* from : *)</span> <span class="hl kwc">Unix</span><span class="hl opt">.</span>file_descr <span class="hl opt">-&gt;</span>
    <span class="hl com">(* max_line_length : *)</span> <span class="hl kwb">int</span> <span class="hl opt">-&gt;</span>
    <span class="hl com">(* handler : *)</span> <span class="hl opt">(</span><span class="hl kwb">string</span> <span class="hl opt">-&gt;</span> <span class="hl kwb">int</span> <span class="hl opt">-&gt;</span> <span class="hl kwb">int</span> <span class="hl opt">-&gt;</span> <span class="hl kwb">unit</span><span class="hl opt">) -&gt;</span> <span class="hl kwb">unit</span>

<span class="hl kwa">end</span> <span class="hl opt">=</span> <span class="hl kwa">struct</span>

  <span class="hl kwa">let</span> read ic maxlen handler <span class="hl opt">=</span>
    <span class="hl kwa">let</span> s <span class="hl opt">=</span> <span class="hl kwc">String</span><span class="hl opt">.</span>create maxlen <span class="hl kwa">in</span>

    <span class="hl kwa">let rec</span> iter begin_pos pos <span class="hl opt">=</span>
      <span class="hl kwa">let</span> to_read <span class="hl opt">=</span> maxlen <span class="hl opt">-</span> pos <span class="hl kwa">in</span>
	<span class="hl kwa">if</span> to_read <span class="hl opt">&lt;</span> <span class="hl num">32000</span> <span class="hl kwa">then begin</span>
	  <span class="hl kwa">let</span> len <span class="hl opt">=</span> pos <span class="hl opt">-</span> begin_pos <span class="hl kwa">in</span>
	    <span class="hl kwc">String</span><span class="hl opt">.</span>blit s begin_pos s <span class="hl num">0</span> len<span class="hl opt">;</span>
	    iter <span class="hl num">0</span> len
	<span class="hl kwa">end else</span>
	  <span class="hl kwa">let</span> nread <span class="hl opt">=</span> <span class="hl kwc">Unix</span><span class="hl opt">.</span>read ic s pos to_read <span class="hl kwa">in</span>
	<span class="hl kwa">if</span> nread <span class="hl opt">=</span> <span class="hl num">0</span> <span class="hl kwa">then</span> raise <span class="hl kwd">End_of_file</span><span class="hl opt">;</span>
	<span class="hl kwa">let</span> end_pos <span class="hl opt">=</span> pos <span class="hl opt">+</span> nread <span class="hl kwa">in</span>
	iter2 begin_pos pos end_pos

    <span class="hl kwa">and</span> iter2 begin_pos pos end_pos <span class="hl opt">=</span>
      <span class="hl kwa">if</span> pos <span class="hl opt">=</span> end_pos <span class="hl kwa">then</span>
	iter begin_pos end_pos
      <span class="hl kwa">else</span>
	<span class="hl kwa">match</span> s<span class="hl opt">.[</span>pos<span class="hl opt">]</span> <span class="hl kwa">with</span>
	    <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span> | <span class="hl str">'</span><span class="hl esc">\r</span><span class="hl str">'</span> <span class="hl opt">-&gt;</span>
	      <span class="hl kwa">if</span> pos <span class="hl opt">&gt;</span> begin_pos <span class="hl kwa">then</span>
		handler s begin_pos <span class="hl opt">(</span>pos <span class="hl opt">-</span> begin_pos<span class="hl opt">);</span>
	      iter2 <span class="hl opt">(</span>pos<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">) (</span>pos<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span> end_pos
	  | _ <span class="hl opt">-&gt;</span>
	      iter2 begin_pos <span class="hl opt">(</span>pos<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span> end_pos

    <span class="hl kwa">in</span>
      iter <span class="hl num">0 0</span>

<span class="hl kwa">end</span>

<span class="hl kwa">let</span> t <span class="hl opt">=</span> <span class="hl kwc">String</span><span class="hl opt">.</span>make <span class="hl num">256</span> <span class="hl str">' '</span>
<span class="hl kwa">let</span> b <span class="hl opt">=</span> <span class="hl kwc">String</span><span class="hl opt">.</span>make <span class="hl num">61</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span>
<span class="hl kwa">let</span> bi <span class="hl opt">=</span> <span class="hl kwb">ref</span> <span class="hl num">1</span>
<span class="hl kwa">let</span> _ <span class="hl opt">=</span>
  <span class="hl kwc">String</span><span class="hl opt">.</span>blit <span class="hl str">&quot;TVGHEFCDIJMLKNOPQYSAABWXRZ&quot;</span> <span class="hl num">0</span> t <span class="hl num">65 26</span><span class="hl opt">;</span>
  <span class="hl kwc">String</span><span class="hl opt">.</span>blit t <span class="hl num">65</span> t <span class="hl num">97 26</span>
<span class="hl opt">;;</span>

<span class="hl kwa">let</span> t <span class="hl opt">=</span>
  <span class="hl kwa">let</span> s <span class="hl opt">=</span> <span class="hl kwc">Array</span><span class="hl opt">.</span>create <span class="hl num">256</span> <span class="hl str">' '</span> <span class="hl kwa">in</span>
    <span class="hl kwa">for</span> i <span class="hl opt">=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> <span class="hl num">255</span> <span class="hl kwa">do</span>
      s<span class="hl opt">.(</span>i<span class="hl opt">) &lt;-</span> t<span class="hl opt">.[</span>i<span class="hl opt">]</span>
    <span class="hl kwa">done</span><span class="hl opt">;</span>
    s
<span class="hl opt">;;</span>

<span class="hl kwa">module</span> <span class="hl kwd">Fasta</span> <span class="hl opt">:</span> <span class="hl kwa">sig</span>

  <span class="hl kwa">val</span> clear <span class="hl opt">:</span> <span class="hl kwb">unit</span> <span class="hl opt">-&gt;</span> <span class="hl kwb">unit</span>
  <span class="hl kwa">val</span> flush <span class="hl opt">:</span> <span class="hl kwb">unit</span> <span class="hl opt">-&gt;</span> <span class="hl kwb">unit</span>
  <span class="hl kwa">val</span> print <span class="hl opt">:</span> <span class="hl kwb">string</span> <span class="hl opt">-&gt;</span> <span class="hl kwb">int</span> <span class="hl opt">-&gt;</span> <span class="hl kwb">int</span> <span class="hl opt">-&gt;</span> <span class="hl kwb">unit</span>

<span class="hl kwa">end</span> <span class="hl opt">=</span> <span class="hl kwa">struct</span>

  <span class="hl kwa">let</span> printed <span class="hl opt">=</span> <span class="hl kwb">ref</span> <span class="hl num">0</span>

  <span class="hl kwa">let</span> clear <span class="hl opt">() =</span> printed <span class="hl opt">:=</span> <span class="hl num">0</span>
  <span class="hl kwa">let</span> flush <span class="hl opt">() =</span>
    <span class="hl kwa">if</span> <span class="hl opt">!</span>printed <span class="hl opt">&gt;</span> <span class="hl num">0</span> <span class="hl kwa">then</span> print_newline <span class="hl opt">();</span>
    printed <span class="hl opt">:=</span> <span class="hl num">0</span>

  <span class="hl kwa">let rec</span> print s pos len <span class="hl opt">=</span>
    <span class="hl kwa">if</span> len <span class="hl opt">&gt;</span> <span class="hl num">60</span> <span class="hl kwa">then begin</span>
      output stdout s pos <span class="hl num">60</span><span class="hl opt">;</span>
      output_char stdout <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">;</span>
      print s <span class="hl opt">(</span>pos <span class="hl opt">+</span> <span class="hl num">60</span><span class="hl opt">) (</span>len<span class="hl opt">-</span><span class="hl num">60</span><span class="hl opt">)</span>
    <span class="hl kwa">end else</span>
      <span class="hl kwa">if</span> len <span class="hl opt">&gt;</span> <span class="hl num">0</span> <span class="hl kwa">then</span>
	<span class="hl kwa">begin</span>
	  output stdout s pos len<span class="hl opt">;</span>
	  printed <span class="hl opt">:=</span> len
	<span class="hl kwa">end</span>

  <span class="hl kwa">let</span> print s pos len <span class="hl opt">=</span>
    <span class="hl kwa">let</span> to_print <span class="hl opt">=</span> <span class="hl num">60</span> <span class="hl opt">- !</span>printed <span class="hl kwa">in</span>
      <span class="hl kwa">if</span> len <span class="hl opt">&lt;</span> to_print <span class="hl kwa">then begin</span>
	output stdout s pos len<span class="hl opt">;</span>
	printed <span class="hl opt">:= !</span>printed <span class="hl opt">+</span> len
      <span class="hl kwa">end else begin</span>
	output stdout s pos to_print<span class="hl opt">;</span>
	output_char stdout <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">;</span>
	printed <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span>
	print s <span class="hl opt">(</span>pos <span class="hl opt">+</span> to_print<span class="hl opt">) (</span>len <span class="hl opt">-</span> to_print<span class="hl opt">);</span>
      <span class="hl kwa">end</span>

<span class="hl kwa">end</span>

<span class="hl kwa">module</span> <span class="hl kwd">IMPLEMENTATION32</span> <span class="hl opt">:</span> <span class="hl kwa">sig</span>
  <span class="hl kwa">val</span> main <span class="hl opt">:</span> <span class="hl kwb">unit</span> <span class="hl opt">-&gt;</span> <span class="hl kwb">unit</span>
<span class="hl kwa">end</span> <span class="hl opt">=</span> <span class="hl kwa">struct</span>

<span class="hl kwa">module</span> <span class="hl kwd">BigRevBuffer</span> <span class="hl opt">:</span> <span class="hl kwa">sig</span>

  <span class="hl kwa">val</span> clear <span class="hl opt">:</span> <span class="hl kwb">unit</span> <span class="hl opt">-&gt;</span> <span class="hl kwb">unit</span>
  <span class="hl kwa">val</span> length <span class="hl opt">:</span> <span class="hl kwb">unit</span> <span class="hl opt">-&gt;</span> <span class="hl kwb">int</span>
  <span class="hl kwa">val</span> add <span class="hl opt">:</span> <span class="hl kwb">string</span> <span class="hl opt">-&gt;</span> <span class="hl kwb">int</span> <span class="hl opt">-&gt;</span> <span class="hl kwb">int</span> <span class="hl opt">-&gt;</span> <span class="hl kwb">unit</span>
<span class="hl com">(*  val iter : (string -&gt; int -&gt; int -&gt; unit) -&gt; unit *)</span>
  <span class="hl kwa">val</span> reverse_iter <span class="hl opt">:</span> <span class="hl kwb">unit</span> <span class="hl opt">-&gt;</span> <span class="hl kwb">unit</span>

<span class="hl kwa">end</span> <span class="hl opt">=</span> <span class="hl kwa">struct</span>

<span class="hl com">(* don't allocate any buffers on x64 *)</span>
  <span class="hl kwa">let</span> nbuffers <span class="hl opt">=</span> <span class="hl kwa">if</span> arch64 <span class="hl kwa">then</span> <span class="hl num">0</span> <span class="hl kwa">else</span> <span class="hl num">256</span>


  <span class="hl kwa">let</span> buffer_len <span class="hl opt">=</span> <span class="hl num">1_000_000</span>

  <span class="hl kwa">let</span> buffers <span class="hl opt">=</span> <span class="hl kwc">Array</span><span class="hl opt">.</span>init nbuffers <span class="hl opt">(</span><span class="hl kwa">fun</span> _ <span class="hl opt">-&gt;</span> <span class="hl kwc">String</span><span class="hl opt">.</span>create buffer_len<span class="hl opt">)</span>
  <span class="hl kwa">let</span> buffer_pos <span class="hl opt">=</span> <span class="hl kwc">Array</span><span class="hl opt">.</span>create nbuffers buffer_len
  <span class="hl kwa">let</span> last_buffer <span class="hl opt">=</span> <span class="hl kwb">ref</span> <span class="hl num">0</span>

  <span class="hl kwa">let</span> clear <span class="hl opt">() =</span>
    last_buffer <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span>
    <span class="hl kwa">for</span> i <span class="hl opt">=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> <span class="hl num">255</span> <span class="hl kwa">do</span>
      buffer_pos<span class="hl opt">.(</span>i<span class="hl opt">) &lt;-</span> buffer_len<span class="hl opt">;</span>
    <span class="hl kwa">done</span>

  <span class="hl kwa">let</span> length <span class="hl opt">() =</span>
    <span class="hl opt">!</span>last_buffer <span class="hl opt">*</span> buffer_len <span class="hl opt">+ (</span>buffer_len <span class="hl opt">-</span> buffer_pos<span class="hl opt">.(!</span>last_buffer<span class="hl opt">))</span>

  <span class="hl kwa">let rec</span> blit_rev src end_pos dst dpos len <span class="hl opt">=</span>
    <span class="hl kwa">if</span> len <span class="hl opt">&gt;</span> <span class="hl num">0</span> <span class="hl kwa">then begin</span>
      dst<span class="hl opt">.[</span>dpos<span class="hl opt">] &lt;-</span> t<span class="hl opt">.(</span><span class="hl kwc">Char</span><span class="hl opt">.</span>code  src<span class="hl opt">.[</span>end_pos<span class="hl opt">]);</span>
      blit_rev src <span class="hl opt">(</span>end_pos<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">)</span> dst <span class="hl opt">(</span>dpos<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">) (</span>len<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">)</span>
    <span class="hl kwa">end</span>

  <span class="hl kwa">let</span> blit_rev src spos dst dpos len <span class="hl opt">=</span>
    <span class="hl kwa">let</span> end_pos <span class="hl opt">=</span> spos <span class="hl opt">+</span> len <span class="hl opt">-</span> <span class="hl num">1</span> <span class="hl kwa">in</span>
    blit_rev src end_pos dst dpos len

  <span class="hl kwa">let rec</span> add s pos len <span class="hl opt">=</span>
    <span class="hl kwa">if</span> len <span class="hl opt">&gt;</span> <span class="hl num">0</span> <span class="hl kwa">then</span>
      <span class="hl kwa">let</span> b <span class="hl opt">=</span> buffers<span class="hl opt">.(!</span>last_buffer<span class="hl opt">)</span> <span class="hl kwa">in</span>
      <span class="hl kwa">let</span> bpos <span class="hl opt">=</span> buffer_pos<span class="hl opt">.(!</span>last_buffer<span class="hl opt">)</span> <span class="hl kwa">in</span>
	<span class="hl kwa">if</span> bpos <span class="hl opt">&gt;</span> len <span class="hl kwa">then begin</span>
	  <span class="hl kwa">let</span> new_pos <span class="hl opt">=</span> bpos <span class="hl opt">-</span> len <span class="hl kwa">in</span>
	    blit_rev s pos b new_pos len<span class="hl opt">;</span>
	    buffer_pos<span class="hl opt">.(!</span>last_buffer<span class="hl opt">) &lt;-</span> new_pos
	<span class="hl kwa">end else begin</span>
	  blit_rev s pos b <span class="hl num">0</span> bpos<span class="hl opt">;</span>
	  buffer_pos<span class="hl opt">.(!</span>last_buffer<span class="hl opt">) &lt;-</span> <span class="hl num">0</span><span class="hl opt">;</span>
	  incr last_buffer<span class="hl opt">;</span>
	  add s <span class="hl opt">(</span>pos <span class="hl opt">+</span> bpos<span class="hl opt">) (</span>len <span class="hl opt">-</span> bpos<span class="hl opt">)</span>
	<span class="hl kwa">end</span>

<span class="hl com">(*</span>
<span class="hl com"></span>
<span class="hl com">  let iter f =</span>
<span class="hl com">    let rec iter f i last_buffer =</span>
<span class="hl com">      if i &lt; last_buffer then begin</span>
<span class="hl com">	f  buffers.(i) 0 buffer_len;</span>
<span class="hl com">	iter f (i+1) last_buffer</span>
<span class="hl com">      end</span>
<span class="hl com">      else</span>
<span class="hl com">	let pos = buffer_pos.(last_buffer) in</span>
<span class="hl com">	  f buffers.(last_buffer) pos (buffer_len - pos)</span>
<span class="hl com">    in</span>
<span class="hl com">      iter f 0 !last_buffer</span>
<span class="hl com"></span>
<span class="hl com">  let rev_iter f =</span>
<span class="hl com">    let rec iter f i =</span>
<span class="hl com">      if i &gt;= 0 then begin</span>
<span class="hl com">	f  buffers.(i) 0 buffer_len;</span>
<span class="hl com">	iter f (i-1)</span>
<span class="hl com">      end</span>
<span class="hl com">    in</span>
<span class="hl com">    let pos = buffer_pos.(!last_buffer) in</span>
<span class="hl com">      f buffers.(!last_buffer) pos (buffer_len - pos);</span>
<span class="hl com">      iter f (!last_buffer-1)</span>
<span class="hl com">*)</span>

  <span class="hl kwa">let</span> reverse_iter f <span class="hl opt">=</span>
    <span class="hl kwa">let rec</span> iter i <span class="hl opt">=</span>
      <span class="hl kwa">if</span> i <span class="hl opt">&gt;=</span> <span class="hl num">0</span> <span class="hl kwa">then begin</span>
	<span class="hl kwc">Fasta</span><span class="hl opt">.</span>print  buffers<span class="hl opt">.(</span>i<span class="hl opt">)</span> <span class="hl num">0</span> buffer_len<span class="hl opt">;</span>
	iter <span class="hl opt">(</span>i<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">)</span>
      <span class="hl kwa">end</span>
    <span class="hl kwa">in</span>
    <span class="hl kwa">let</span> pos <span class="hl opt">=</span> buffer_pos<span class="hl opt">.(!</span>last_buffer<span class="hl opt">)</span> <span class="hl kwa">in</span>
      <span class="hl kwa">if</span> pos <span class="hl opt">&lt;</span> buffer_len <span class="hl kwa">then</span>
	<span class="hl kwc">Fasta</span><span class="hl opt">.</span>print buffers<span class="hl opt">.(!</span>last_buffer<span class="hl opt">)</span> pos <span class="hl opt">(</span>buffer_len <span class="hl opt">-</span> pos<span class="hl opt">);</span>
      iter <span class="hl opt">(!</span>last_buffer<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">)</span>

<span class="hl kwa">end</span>

<span class="hl kwa">let</span> reverse <span class="hl opt">() =</span>
  <span class="hl kwa">if</span> <span class="hl kwc">BigRevBuffer</span><span class="hl opt">.</span>length <span class="hl opt">() &gt;</span> <span class="hl num">0</span> <span class="hl kwa">then begin</span>
    <span class="hl kwc">Fasta</span><span class="hl opt">.</span>clear <span class="hl opt">();</span>
    <span class="hl kwc">BigRevBuffer</span><span class="hl opt">.</span>reverse_iter <span class="hl opt">();</span>
    <span class="hl kwc">BigRevBuffer</span><span class="hl opt">.</span>clear <span class="hl opt">();</span>
    <span class="hl kwc">Fasta</span><span class="hl opt">.</span>flush <span class="hl opt">()</span>
  <span class="hl kwa">end</span>

<span class="hl kwa">let</span> main <span class="hl opt">() =</span>
  <span class="hl kwa">try</span>
    <span class="hl kwc">LineReader</span><span class="hl opt">.</span>read <span class="hl kwc">Unix</span><span class="hl opt">.</span>stdin <span class="hl num">1_000_000</span>
      <span class="hl opt">(</span><span class="hl kwa">fun</span> s pos len <span class="hl opt">-&gt;</span>
	 <span class="hl kwa">if</span> s<span class="hl opt">.[</span>pos<span class="hl opt">] =</span> <span class="hl str">'&gt;'</span> <span class="hl kwa">then begin</span>
	   reverse <span class="hl opt">();</span>
	   output stdout s pos len<span class="hl opt">;</span>
	   output_char stdout <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">;</span>
	 <span class="hl kwa">end else</span>
	   <span class="hl kwc">BigRevBuffer</span><span class="hl opt">.</span>add s pos len
      <span class="hl opt">)</span>
  <span class="hl kwa">with</span> <span class="hl kwd">End_of_file</span> <span class="hl opt">-&gt;</span> reverse <span class="hl opt">()</span>
    | e <span class="hl opt">-&gt;</span>
	<span class="hl kwc">Printf</span><span class="hl opt">.</span>fprintf stderr <span class="hl str">&quot;exception %s</span><span class="hl esc">\n</span><span class="hl str">%!&quot;</span> <span class="hl opt">(</span><span class="hl kwc">Printexc</span><span class="hl opt">.</span>to_string e<span class="hl opt">);</span>
	exit <span class="hl num">2</span>

<span class="hl kwa">end</span>

<span class="hl kwa">module</span> <span class="hl kwd">IMPLEMENTATION64</span> <span class="hl opt">:</span> <span class="hl kwa">sig</span>

  <span class="hl kwa">val</span> main <span class="hl opt">:</span> <span class="hl kwb">unit</span> <span class="hl opt">-&gt;</span> <span class="hl kwb">unit</span>

<span class="hl kwa">end</span> <span class="hl opt">=</span> <span class="hl kwa">struct</span>

  <span class="hl kwa">let</span> buffer_len <span class="hl opt">=</span> <span class="hl num">150_000_000</span>

  <span class="hl kwa">let</span> buffer <span class="hl opt">=</span> <span class="hl kwa">if</span> arch64 <span class="hl kwa">then</span> <span class="hl kwc">String</span><span class="hl opt">.</span>create buffer_len <span class="hl kwa">else</span> <span class="hl str">&quot;&quot;</span>
  <span class="hl kwa">let</span> buffer_pos <span class="hl opt">=</span> <span class="hl kwb">ref</span> buffer_len

  <span class="hl kwa">let</span> wait_for <span class="hl opt">=</span> <span class="hl kwb">ref</span> <span class="hl kwd">None</span>

  <span class="hl kwa">let</span> reverse <span class="hl opt">() =</span>
    <span class="hl kwa">begin</span>
      <span class="hl kwa">match</span> <span class="hl opt">!</span>wait_for <span class="hl kwa">with</span>
	  <span class="hl kwd">None</span> <span class="hl opt">-&gt; ()</span>
	| <span class="hl kwd">Some</span> ix <span class="hl opt">-&gt;</span>
	    <span class="hl kwa">let</span> s <span class="hl opt">=</span> <span class="hl kwc">String</span><span class="hl opt">.</span>create <span class="hl num">1</span> <span class="hl kwa">in</span>
	    ignore <span class="hl opt">(</span><span class="hl kwc">Unix</span><span class="hl opt">.</span>read ix s <span class="hl num">0 1</span><span class="hl opt">)</span>
    <span class="hl kwa">end</span><span class="hl opt">;</span>
    <span class="hl kwa">let</span> len <span class="hl opt">=</span> buffer_len <span class="hl opt">- !</span>buffer_pos <span class="hl kwa">in</span>
      <span class="hl kwa">if</span> len <span class="hl opt">&gt;</span> <span class="hl num">0</span> <span class="hl kwa">then begin</span>
	<span class="hl kwc">Fasta</span><span class="hl opt">.</span>clear <span class="hl opt">();</span>
	<span class="hl kwc">Fasta</span><span class="hl opt">.</span>print buffer <span class="hl opt">!</span>buffer_pos len<span class="hl opt">;</span>
	<span class="hl kwc">Fasta</span><span class="hl opt">.</span>flush <span class="hl opt">();</span>
	buffer_pos <span class="hl opt">:=</span> buffer_len<span class="hl opt">;</span>
      <span class="hl kwa">end</span>

    <span class="hl kwa">let</span> maxlen <span class="hl opt">=</span> <span class="hl num">10_000_000</span>
    <span class="hl kwa">let</span> inbuf <span class="hl opt">=</span> <span class="hl kwc">String</span><span class="hl opt">.</span>create maxlen

<span class="hl kwa">let rec</span> iter1 begin_pos <span class="hl opt">()</span> pos <span class="hl opt">=</span>
  <span class="hl kwa">let</span> to_read <span class="hl opt">=</span> maxlen <span class="hl opt">-</span> pos <span class="hl kwa">in</span>
    <span class="hl kwa">if</span> to_read <span class="hl opt">&lt;</span> <span class="hl num">32_000</span> <span class="hl kwa">then begin</span>
      <span class="hl kwa">let</span> len <span class="hl opt">=</span> pos <span class="hl opt">-</span> begin_pos <span class="hl kwa">in</span>
	<span class="hl kwc">String</span><span class="hl opt">.</span>blit inbuf begin_pos inbuf <span class="hl num">0</span> len<span class="hl opt">;</span>
	iter1 <span class="hl num">0</span> <span class="hl opt">()</span> len
    <span class="hl kwa">end else</span>
      <span class="hl kwa">let</span> nread <span class="hl opt">=</span> <span class="hl kwc">Unix</span><span class="hl opt">.</span>read <span class="hl kwc">Unix</span><span class="hl opt">.</span>stdin inbuf pos to_read <span class="hl kwa">in</span>
	<span class="hl kwa">if</span> nread <span class="hl opt">=</span> <span class="hl num">0</span> <span class="hl kwa">then</span> raise <span class="hl kwd">End_of_file</span><span class="hl opt">;</span>
	<span class="hl kwa">let</span> end_pos <span class="hl opt">=</span> pos <span class="hl opt">+</span> nread <span class="hl kwa">in</span>
	  iter2 begin_pos pos end_pos

<span class="hl kwa">and</span> iter2 begin_pos pos end_pos <span class="hl opt">=</span>
  <span class="hl kwa">if</span> pos <span class="hl opt">=</span> end_pos <span class="hl kwa">then</span>
    iter1 begin_pos <span class="hl opt">()</span> end_pos
  <span class="hl kwa">else</span>
    <span class="hl kwa">match</span> inbuf<span class="hl opt">.[</span>pos<span class="hl opt">]</span> <span class="hl kwa">with</span>
	<span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span> <span class="hl opt">-&gt;</span>
	  iter2 <span class="hl opt">(</span>pos<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">) (</span>pos<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span> end_pos
      | <span class="hl str">'&gt;'</span> <span class="hl opt">-&gt;</span>
	  iter4 begin_pos <span class="hl opt">(</span>pos<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span> end_pos
      | c <span class="hl opt">-&gt;</span>
	  <span class="hl kwa">let</span> c <span class="hl opt">=</span> t<span class="hl opt">.(</span><span class="hl kwc">Char</span><span class="hl opt">.</span>code c<span class="hl opt">)</span> <span class="hl kwa">in</span>
	    decr buffer_pos<span class="hl opt">;</span>
	    buffer<span class="hl opt">.[!</span>buffer_pos<span class="hl opt">] &lt;-</span> c<span class="hl opt">;</span>
	    iter2 begin_pos <span class="hl opt">(</span>pos<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span> end_pos

<span class="hl kwa">and</span> iter3 begin_pos <span class="hl opt">()</span> pos <span class="hl opt">=</span>
  <span class="hl kwa">let</span> to_read <span class="hl opt">=</span> maxlen <span class="hl opt">-</span> pos <span class="hl kwa">in</span>
    <span class="hl kwa">if</span> to_read <span class="hl opt">&lt;</span> <span class="hl num">32000</span> <span class="hl kwa">then begin</span>
      <span class="hl kwa">let</span> len <span class="hl opt">=</span> pos <span class="hl opt">-</span> begin_pos <span class="hl kwa">in</span>
	<span class="hl kwc">String</span><span class="hl opt">.</span>blit inbuf begin_pos inbuf <span class="hl num">0</span> len<span class="hl opt">;</span>
	iter3 <span class="hl num">0</span> <span class="hl opt">()</span> len
    <span class="hl kwa">end else</span>
      <span class="hl kwa">let</span> nread <span class="hl opt">=</span> <span class="hl kwc">Unix</span><span class="hl opt">.</span>read <span class="hl kwc">Unix</span><span class="hl opt">.</span>stdin inbuf pos to_read <span class="hl kwa">in</span>
	<span class="hl kwa">if</span> nread <span class="hl opt">=</span> <span class="hl num">0</span> <span class="hl kwa">then</span> raise <span class="hl kwd">End_of_file</span><span class="hl opt">;</span>
	<span class="hl kwa">let</span> end_pos <span class="hl opt">=</span> pos <span class="hl opt">+</span> nread <span class="hl kwa">in</span>
	  iter4 begin_pos pos end_pos

<span class="hl kwa">and</span> iter4 begin_pos pos end_pos <span class="hl opt">=</span>
  <span class="hl kwa">if</span> pos <span class="hl opt">=</span> end_pos <span class="hl kwa">then</span>
    iter3 begin_pos <span class="hl opt">()</span> end_pos
  <span class="hl kwa">else</span>
    <span class="hl kwa">match</span> inbuf<span class="hl opt">.[</span>pos<span class="hl opt">]</span> <span class="hl kwa">with</span>
	<span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span> | <span class="hl str">'</span><span class="hl esc">\r</span><span class="hl str">'</span> <span class="hl opt">-&gt;</span>
	  <span class="hl kwa">if</span> pos <span class="hl opt">&gt;</span> begin_pos <span class="hl kwa">then begin</span>
	    <span class="hl kwa">if</span> <span class="hl opt">!</span>buffer_pos <span class="hl opt">&lt;</span> buffer_len <span class="hl kwa">then begin</span>
	      <span class="hl kwa">let</span> <span class="hl opt">(</span>ix<span class="hl opt">,</span> ox<span class="hl opt">) =</span> <span class="hl kwc">Unix</span><span class="hl opt">.</span>pipe <span class="hl opt">()</span> <span class="hl kwa">in</span>
		<span class="hl kwa">match</span> <span class="hl kwc">Unix</span><span class="hl opt">.</span>fork <span class="hl opt">()</span> <span class="hl kwa">with</span>
		  | <span class="hl opt">-</span><span class="hl num">1</span> <span class="hl opt">-&gt;</span> <span class="hl kwa">assert false</span>
		  | <span class="hl num">0</span> <span class="hl opt">-&gt;</span>
		      reverse <span class="hl opt">();</span>
		      output stdout inbuf begin_pos <span class="hl opt">(</span>pos <span class="hl opt">-</span> begin_pos<span class="hl opt">);</span>
		      output_char stdout <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">;</span>
		      ignore <span class="hl opt">(</span><span class="hl kwc">Unix</span><span class="hl opt">.</span>write ox <span class="hl str">&quot;X&quot;</span> <span class="hl num">0 1</span><span class="hl opt">);</span>
		      <span class="hl kwc">Unix</span><span class="hl opt">.</span>close ox<span class="hl opt">;</span>
		      exit <span class="hl num">0</span><span class="hl opt">;</span>
		  | _ <span class="hl opt">-&gt;</span>
		      wait_for <span class="hl opt">:=</span> <span class="hl kwd">Some</span> ix<span class="hl opt">;</span>
		      buffer_pos <span class="hl opt">:=</span> buffer_len<span class="hl opt">;</span>
	    <span class="hl kwa">end else begin</span>
	      output stdout inbuf begin_pos <span class="hl opt">(</span>pos <span class="hl opt">-</span> begin_pos<span class="hl opt">);</span>
	      output_char stdout <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl opt">;</span>
	      flush stdout<span class="hl opt">;</span>
	    <span class="hl kwa">end</span>
	  <span class="hl kwa">end</span><span class="hl opt">;</span>
	  iter2 <span class="hl opt">(</span>pos<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">) (</span>pos<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span> end_pos
      | _ <span class="hl opt">-&gt;</span>
	  iter4 begin_pos <span class="hl opt">(</span>pos<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span> end_pos

<span class="hl kwa">let</span> read <span class="hl opt">() =</span>
    iter1 <span class="hl num">0</span> <span class="hl opt">()</span> <span class="hl num">0</span>

<span class="hl kwa">let</span> main <span class="hl opt">() =</span>
  enter <span class="hl str">&quot;main64&quot;</span> <span class="hl opt">[];</span>
  <span class="hl kwa">try</span>
    read <span class="hl opt">()</span>
  <span class="hl kwa">with</span> <span class="hl kwd">End_of_file</span> <span class="hl opt">-&gt;</span> reverse <span class="hl opt">()</span>
    | e <span class="hl opt">-&gt;</span>
	<span class="hl kwc">Printf</span><span class="hl opt">.</span>fprintf stderr <span class="hl str">&quot;exception %s</span><span class="hl esc">\n</span><span class="hl str">%!&quot;</span> <span class="hl opt">(</span><span class="hl kwc">Printexc</span><span class="hl opt">.</span>to_string e<span class="hl opt">);</span>
	exit <span class="hl num">2</span>

<span class="hl kwa">end</span>

<span class="hl kwa">let</span> _ <span class="hl opt">=</span>
  <span class="hl kwa">if</span> arch64 <span class="hl kwa">then</span>
    <span class="hl kwc">IMPLEMENTATION64</span><span class="hl opt">.</span>main <span class="hl opt">()</span>
  <span class="hl kwa">else</span>
    <span class="hl kwc">IMPLEMENTATION32</span><span class="hl opt">.</span>main <span class="hl opt">()</span>
