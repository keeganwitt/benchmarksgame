<span class="hl com">/*</span>
<span class="hl com"> * The Computer Language Benchmarks Game</span>
<span class="hl com"> * http://shootout.alioth.debian.org/</span>
<span class="hl com"> * contributed by Anthony Donnefort</span>
<span class="hl com"> * redone by Enotus 2010-11-20</span>
<span class="hl com"> */</span>

<span class="hl kwa">import</span> java<span class="hl sym">.</span>io<span class="hl sym">.*;</span>

<span class="hl kwa">public final class</span> revcomp <span class="hl sym">{</span>

    <span class="hl kwa">static final</span> <span class="hl kwb">byte</span><span class="hl sym">[]</span> map<span class="hl sym">=</span><span class="hl kwa">new</span> <span class="hl kwb">byte</span><span class="hl sym">[</span><span class="hl num">128</span><span class="hl sym">];</span>
        <span class="hl kwa">static</span><span class="hl sym">{</span>
        <span class="hl kwc">String</span><span class="hl sym">[]</span> mm<span class="hl sym">={</span><span class="hl str">&quot;ACBDGHK</span><span class="hl esc">\n</span><span class="hl str">MNSRUTWVYacbdghkmnsrutwvy&quot;</span><span class="hl sym">,</span><span class="hl str">&quot;TGVHCDM</span><span class="hl esc">\n</span><span class="hl str">KNSYAAWBRTGVHCDMKNSYAAWBR&quot;</span><span class="hl sym">};</span>
        <span class="hl kwa">for</span><span class="hl sym">(</span><span class="hl kwb">int</span> i<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>i<span class="hl sym">&lt;</span>mm<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">].</span><span class="hl kwd">length</span><span class="hl sym">();</span>i<span class="hl sym">++)</span> map<span class="hl sym">[</span>mm<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">].</span><span class="hl kwd">charAt</span><span class="hl sym">(</span>i<span class="hl sym">)]=(</span><span class="hl kwb">byte</span><span class="hl sym">)</span>mm<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">].</span><span class="hl kwd">charAt</span><span class="hl sym">(</span>i<span class="hl sym">);</span>
    <span class="hl sym">}</span> 

    <span class="hl kwa">static</span> <span class="hl kwb">void</span> <span class="hl kwd">reverse</span><span class="hl sym">(</span><span class="hl kwb">byte</span><span class="hl sym">[]</span> buf<span class="hl sym">,</span><span class="hl kwb">int</span> begin<span class="hl sym">,</span><span class="hl kwb">int</span> end<span class="hl sym">){</span>
        <span class="hl kwa">while</span><span class="hl sym">(</span>true<span class="hl sym">){</span>
            <span class="hl kwb">byte</span> bb<span class="hl sym">=</span>buf<span class="hl sym">[</span>begin<span class="hl sym">];</span><span class="hl kwa">if</span><span class="hl sym">(</span>bb<span class="hl sym">==</span><span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl sym">)</span> bb<span class="hl sym">=</span>buf<span class="hl sym">[++</span>begin<span class="hl sym">];</span>
            <span class="hl kwb">byte</span> be<span class="hl sym">=</span>buf<span class="hl sym">[</span>end<span class="hl sym">];</span><span class="hl kwa">if</span><span class="hl sym">(</span>be<span class="hl sym">==</span><span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl sym">)</span> be<span class="hl sym">=</span>buf<span class="hl sym">[--</span>end<span class="hl sym">];</span>
            <span class="hl kwa">if</span><span class="hl sym">(</span>begin<span class="hl sym">&gt;</span>end<span class="hl sym">)</span> <span class="hl kwa">break</span><span class="hl sym">;</span>
            buf<span class="hl sym">[</span>begin<span class="hl sym">++]=</span>map<span class="hl sym">[</span>be<span class="hl sym">];</span>
            buf<span class="hl sym">[</span>end<span class="hl sym">--]=</span>map<span class="hl sym">[</span>bb<span class="hl sym">];</span>
        <span class="hl sym">}</span>
    <span class="hl sym">}</span>
      
    <span class="hl kwa">public static</span> <span class="hl kwb">void</span> <span class="hl kwd">main</span><span class="hl sym">(</span><span class="hl kwc">String</span><span class="hl sym">[]</span> args<span class="hl sym">)</span> <span class="hl kwa">throws</span> <span class="hl kwc">IOException</span><span class="hl sym">{</span>
        <span class="hl kwa">final</span> <span class="hl kwb">byte</span><span class="hl sym">[]</span> buf<span class="hl sym">=</span><span class="hl kwa">new</span> <span class="hl kwb">byte</span><span class="hl sym">[</span><span class="hl kwc">System</span><span class="hl sym">.</span><span class="hl kwa">in</span><span class="hl sym">.</span><span class="hl kwd">available</span><span class="hl sym">()];</span>
        <span class="hl kwc">System</span><span class="hl sym">.</span><span class="hl kwa">in</span><span class="hl sym">.</span><span class="hl kwd">read</span><span class="hl sym">(</span>buf<span class="hl sym">);</span>

        <span class="hl kwa">for</span><span class="hl sym">(</span><span class="hl kwb">int</span> i<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>i<span class="hl sym">&lt;</span>buf<span class="hl sym">.</span>length<span class="hl sym">;){</span>
            <span class="hl kwa">while</span><span class="hl sym">(</span>buf<span class="hl sym">[</span>i<span class="hl sym">++]!=</span><span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl sym">);</span>
            <span class="hl kwb">int</span> data<span class="hl sym">=</span>i<span class="hl sym">;</span> <span class="hl kwa">while</span><span class="hl sym">(</span>i<span class="hl sym">&lt;</span>buf<span class="hl sym">.</span>length <span class="hl sym">&amp;&amp;</span> buf<span class="hl sym">[</span>i<span class="hl sym">++]!=</span><span class="hl str">'&gt;'</span><span class="hl sym">);</span>
            <span class="hl kwd">reverse</span><span class="hl sym">(</span>buf<span class="hl sym">,</span>data<span class="hl sym">,</span>i<span class="hl sym">-</span><span class="hl num">2</span><span class="hl sym">);</span>
        <span class="hl sym">}</span>

        <span class="hl kwc">System</span><span class="hl sym">.</span>out<span class="hl sym">.</span><span class="hl kwd">write</span><span class="hl sym">(</span>buf<span class="hl sym">);</span>
    <span class="hl sym">}</span>
<span class="hl sym">}</span>
