<span class="hl slc">! The Computer Language Benchmarks Game</span>
<span class="hl slc">! http://benchmarksgame.alioth.debian.org/</span>
<span class="hl slc">!</span>
<span class="hl slc">! contributed by Steve Decker</span>
<span class="hl slc">! compilation:</span>
<span class="hl slc">!    g95 -O3 -funroll-loops -fomit-frame-pointer pidigits.f90</span>
<span class="hl slc">!    ifort -O -ip pidigits.f90</span>

<span class="hl kwa">module</span> big_int_mod
  <span class="hl kwa">implicit none</span>
  <span class="hl kwa">save</span>
  
  <span class="hl kwa">integer</span><span class="hl opt">,</span> <span class="hl kwa">parameter</span><span class="hl opt">,</span> private <span class="hl opt">::</span> Pwr <span class="hl opt">=</span> <span class="hl num">15</span><span class="hl opt">,</span> Base <span class="hl opt">=</span> <span class="hl num">2</span><span class="hl opt">**</span>Pwr<span class="hl opt">,</span> maxDigs <span class="hl opt">=</span> <span class="hl num">2558</span>

  <span class="hl kwa">type</span> big_int
     private
     <span class="hl kwa">integer</span> <span class="hl opt">::</span> sigDigs
     <span class="hl kwa">logical</span> <span class="hl opt">::</span> sign
     <span class="hl kwa">integer</span><span class="hl opt">,</span> <span class="hl kwa">dimension</span><span class="hl opt">(</span>maxDigs<span class="hl opt">) ::</span> digits
  <span class="hl kwa">end type</span> big_int

  <span class="hl kwa">interface</span> <span class="hl kwd">assignment</span> <span class="hl opt">(=)</span>
     <span class="hl kwa">module</span> procedure int_to_big_int
  <span class="hl kwa">end interface</span>
  
  <span class="hl kwa">interface</span> <span class="hl kwd">operator</span> <span class="hl opt">(*)</span>
     <span class="hl kwa">module</span> procedure big_int_times_int
  <span class="hl kwa">end interface</span>
  
  <span class="hl kwa">interface</span> <span class="hl kwd">operator</span> <span class="hl opt">(+)</span>
     <span class="hl kwa">module</span> procedure big_int_plus_big_int
  <span class="hl kwa">end interface</span>

  <span class="hl kwa">interface</span> <span class="hl kwd">operator</span> <span class="hl opt">(/)</span>
     <span class="hl kwa">module</span> procedure big_int_div_big_int
  <span class="hl kwa">end interface</span>

<span class="hl kwa">contains</span>
  
  <span class="hl kwa">subroutine</span> <span class="hl kwd">int_to_big_int</span><span class="hl opt">(</span>bi<span class="hl opt">,</span> n<span class="hl opt">)</span>
    <span class="hl kwa">type</span><span class="hl opt">(</span>big_int<span class="hl opt">),</span> <span class="hl kwd">intent</span><span class="hl opt">(</span>inout<span class="hl opt">) ::</span> bi
    <span class="hl kwa">integer</span><span class="hl opt">,</span>       <span class="hl kwd">intent</span><span class="hl opt">(</span>in<span class="hl opt">)    ::</span> n

    <span class="hl kwa">integer</span> <span class="hl opt">::</span> i

    <span class="hl kwa">if</span> <span class="hl opt">(</span>n <span class="hl opt">&gt;</span> <span class="hl num">0</span><span class="hl opt">)</span> <span class="hl kwa">then</span>
       bi <span class="hl opt">=</span> <span class="hl kwd">big_int</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">, .</span>true<span class="hl opt">., (/</span> n<span class="hl opt">, (</span><span class="hl num">0</span><span class="hl opt">,</span> i <span class="hl opt">=</span> <span class="hl num">2</span><span class="hl opt">,</span> maxDigs<span class="hl opt">) /) )</span>
    <span class="hl kwa">else</span>
       bi <span class="hl opt">=</span> <span class="hl kwd">big_int</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">, .</span>true<span class="hl opt">.,</span> <span class="hl num">0</span><span class="hl opt">)</span>
    <span class="hl kwa">end if</span>
  <span class="hl kwa">end subroutine</span> int_to_big_int
  
  <span class="hl kwa">function</span> <span class="hl kwd">big_int_times_int</span><span class="hl opt">(</span>bi<span class="hl opt">,</span> n<span class="hl opt">)</span> <span class="hl kwd">result</span><span class="hl opt">(</span>c<span class="hl opt">)</span>
    <span class="hl kwa">type</span><span class="hl opt">(</span>big_int<span class="hl opt">),</span> <span class="hl kwd">intent</span><span class="hl opt">(</span>in<span class="hl opt">) ::</span> bi
    <span class="hl kwa">integer</span><span class="hl opt">,</span>       <span class="hl kwd">intent</span><span class="hl opt">(</span>in<span class="hl opt">) ::</span> n
    <span class="hl kwa">type</span><span class="hl opt">(</span>big_int<span class="hl opt">) ::</span> c

    <span class="hl kwa">integer</span> <span class="hl opt">::</span> m<span class="hl opt">,</span> i<span class="hl opt">,</span> curDig<span class="hl opt">,</span> k<span class="hl opt">,</span> j<span class="hl opt">,</span> carry
    
    c <span class="hl opt">=</span> <span class="hl kwd">big_int</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">, .</span>true<span class="hl opt">.,</span> <span class="hl num">0</span><span class="hl opt">)</span>
    <span class="hl kwa">if</span> <span class="hl opt">(</span>n <span class="hl opt">==</span> <span class="hl num">0</span> <span class="hl opt">.</span>or<span class="hl opt">.</span> bi<span class="hl opt">%</span>sigDigs <span class="hl opt">==</span> <span class="hl num">0</span><span class="hl opt">)</span> <span class="hl kwa">return</span>
    c<span class="hl opt">%</span>sign <span class="hl opt">=</span> n <span class="hl opt">&gt;=</span> <span class="hl num">0</span> <span class="hl opt">.</span>eqv<span class="hl opt">.</span> bi<span class="hl opt">%</span>sign
    m <span class="hl opt">=</span> <span class="hl kwd">abs</span><span class="hl opt">(</span>n<span class="hl opt">)</span>

    <span class="hl kwa">do</span> i <span class="hl opt">=</span> <span class="hl num">1</span><span class="hl opt">,</span> maxDigs
       curDig <span class="hl opt">=</span> <span class="hl kwd">mod</span><span class="hl opt">(</span>m<span class="hl opt">,</span>Base<span class="hl opt">)</span>
       k <span class="hl opt">=</span> <span class="hl num">1</span>
       carry <span class="hl opt">=</span> <span class="hl num">0</span>
       <span class="hl kwa">do</span> j <span class="hl opt">=</span> i<span class="hl opt">,</span> i <span class="hl opt">+</span> bi<span class="hl opt">%</span>sigDigs <span class="hl opt">+</span> <span class="hl num">1</span>
          c<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>j<span class="hl opt">) =</span> c<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>j<span class="hl opt">) +</span> curDig <span class="hl opt">*</span> bi<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>k<span class="hl opt">) +</span> carry
          carry <span class="hl opt">=</span> <span class="hl kwd">ibits</span><span class="hl opt">(</span>c<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>j<span class="hl opt">),</span>Pwr<span class="hl opt">,</span>Pwr<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span>
          c<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>j<span class="hl opt">) =</span> <span class="hl kwd">mod</span><span class="hl opt">(</span>c<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>j<span class="hl opt">),</span>Base<span class="hl opt">)</span>
          k <span class="hl opt">=</span> k <span class="hl opt">+</span> <span class="hl num">1</span>
       <span class="hl kwa">end do</span>
       m <span class="hl opt">=</span> <span class="hl kwd">ibits</span><span class="hl opt">(</span>m<span class="hl opt">,</span>Pwr<span class="hl opt">,</span>Pwr<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span>
       <span class="hl kwa">if</span> <span class="hl opt">(</span>m <span class="hl opt">==</span> <span class="hl num">0</span><span class="hl opt">)</span> exit
    <span class="hl kwa">end do</span>
    <span class="hl kwa">do</span> j <span class="hl opt">=</span> i <span class="hl opt">+</span> bi<span class="hl opt">%</span>sigDigs<span class="hl opt">,</span> <span class="hl num">1</span><span class="hl opt">, -</span><span class="hl num">1</span>
       c<span class="hl opt">%</span>sigDigs <span class="hl opt">=</span> j
       <span class="hl kwa">if</span> <span class="hl opt">(</span>c<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>j<span class="hl opt">) /=</span> <span class="hl num">0</span><span class="hl opt">)</span> exit
    <span class="hl kwa">end do</span>
  <span class="hl kwa">end function</span> big_int_times_int

  <span class="hl kwa">function</span> <span class="hl kwd">big_int_plus_big_int</span><span class="hl opt">(</span>bi1<span class="hl opt">,</span> bi2<span class="hl opt">)</span> <span class="hl kwd">result</span><span class="hl opt">(</span>c<span class="hl opt">)</span>
    <span class="hl kwa">type</span><span class="hl opt">(</span>big_int<span class="hl opt">),</span> target<span class="hl opt">,</span> <span class="hl kwd">intent</span><span class="hl opt">(</span>in<span class="hl opt">) ::</span> bi1<span class="hl opt">,</span> bi2
    <span class="hl kwa">type</span><span class="hl opt">(</span>big_int<span class="hl opt">) ::</span> c
    
    <span class="hl kwa">integer</span> <span class="hl opt">::</span> i<span class="hl opt">,</span> carry<span class="hl opt">,</span> n
    <span class="hl kwa">type</span><span class="hl opt">(</span>big_int<span class="hl opt">),</span> <span class="hl kwa">pointer</span> <span class="hl opt">::</span> a<span class="hl opt">,</span> b

    c <span class="hl opt">=</span> <span class="hl kwd">big_int</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">, .</span>true<span class="hl opt">.,</span> <span class="hl num">0</span><span class="hl opt">)</span>

    <span class="hl kwa">if</span> <span class="hl opt">(</span>bi1<span class="hl opt">%</span>sigDigs <span class="hl opt">==</span> <span class="hl num">0</span><span class="hl opt">)</span> <span class="hl kwa">then</span>
       c <span class="hl opt">=</span> bi2
       <span class="hl kwa">return</span>
    <span class="hl kwa">else if</span> <span class="hl opt">(</span>bi2<span class="hl opt">%</span>sigDigs <span class="hl opt">==</span> <span class="hl num">0</span><span class="hl opt">)</span> <span class="hl kwa">then</span>
       c <span class="hl opt">=</span> bi1
       <span class="hl kwa">return</span>
    <span class="hl kwa">end if</span>

    <span class="hl kwa">if</span> <span class="hl opt">(</span>bi1<span class="hl opt">%</span>sign <span class="hl opt">.</span>eqv<span class="hl opt">.</span> bi2<span class="hl opt">%</span>sign<span class="hl opt">)</span> <span class="hl kwa">then</span>
       c<span class="hl opt">%</span>sign <span class="hl opt">=</span> bi1<span class="hl opt">%</span>sign
       carry <span class="hl opt">=</span> <span class="hl num">0</span>
       n <span class="hl opt">=</span> <span class="hl kwd">max</span><span class="hl opt">(</span>bi1<span class="hl opt">%</span>sigDigs<span class="hl opt">,</span> bi2<span class="hl opt">%</span>sigDigs<span class="hl opt">) +</span> <span class="hl num">1</span>
       <span class="hl kwa">do</span> i <span class="hl opt">=</span> <span class="hl num">1</span><span class="hl opt">,</span> n
          c<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>i<span class="hl opt">) =</span> bi1<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>i<span class="hl opt">) +</span> bi2<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>i<span class="hl opt">) +</span> carry
          carry <span class="hl opt">=</span> <span class="hl kwd">ibits</span><span class="hl opt">(</span>c<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>i<span class="hl opt">),</span>Pwr<span class="hl opt">,</span>Pwr<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span>
          c<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>i<span class="hl opt">) =</span> <span class="hl kwd">mod</span><span class="hl opt">(</span>c<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>i<span class="hl opt">),</span>Base<span class="hl opt">)</span>
       <span class="hl kwa">end do</span>
    <span class="hl kwa">else</span>
       <span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwd">greater_in_mag</span><span class="hl opt">(</span>bi1<span class="hl opt">,</span> bi2<span class="hl opt">))</span> <span class="hl kwa">then</span>
          a <span class="hl opt">=&gt;</span> bi1
          b <span class="hl opt">=&gt;</span> bi2
       <span class="hl kwa">else if</span> <span class="hl opt">(</span><span class="hl kwd">greater_in_mag</span><span class="hl opt">(</span>bi2<span class="hl opt">,</span> bi1<span class="hl opt">))</span> <span class="hl kwa">then</span>
          a <span class="hl opt">=&gt;</span> bi2
          b <span class="hl opt">=&gt;</span> bi1
       <span class="hl kwa">else</span>
          <span class="hl kwa">return</span>
       <span class="hl kwa">end if</span>

       n <span class="hl opt">=</span> <span class="hl kwd">max</span><span class="hl opt">(</span>a<span class="hl opt">%</span>sigDigs<span class="hl opt">,</span> b<span class="hl opt">%</span>sigDigs<span class="hl opt">)</span>
       c<span class="hl opt">%</span>sign <span class="hl opt">=</span> a<span class="hl opt">%</span>sign
       <span class="hl kwa">do</span> i <span class="hl opt">=</span> <span class="hl num">1</span><span class="hl opt">,</span> n
          <span class="hl kwa">if</span> <span class="hl opt">(</span>a<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>i<span class="hl opt">) &lt;</span> b<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>i<span class="hl opt">))</span> <span class="hl kwa">then</span>
             a<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>i<span class="hl opt">) =</span> a<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>i<span class="hl opt">) +</span> Base
             a<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>i<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">) =</span> a<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>i<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">) -</span> <span class="hl num">1</span>
          <span class="hl kwa">end if</span>
          c<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>i<span class="hl opt">) =</span> a<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>i<span class="hl opt">) -</span> b<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>i<span class="hl opt">)</span>
       <span class="hl kwa">end do</span>
    <span class="hl kwa">end if</span>

    <span class="hl kwa">do</span> i <span class="hl opt">=</span> n<span class="hl opt">,</span> <span class="hl num">1</span><span class="hl opt">, -</span><span class="hl num">1</span>
       c<span class="hl opt">%</span>sigDigs <span class="hl opt">=</span> i
       <span class="hl kwa">if</span> <span class="hl opt">(</span>c<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>i<span class="hl opt">) /=</span> <span class="hl num">0</span><span class="hl opt">)</span> exit
    <span class="hl kwa">end do</span>
  <span class="hl kwa">end function</span> big_int_plus_big_int

  <span class="hl kwa">function</span> <span class="hl kwd">big_int_div_big_int</span><span class="hl opt">(</span>a<span class="hl opt">,</span> b<span class="hl opt">)</span> <span class="hl kwd">result</span><span class="hl opt">(</span>c<span class="hl opt">)</span>
    <span class="hl kwa">type</span><span class="hl opt">(</span>big_int<span class="hl opt">),</span> <span class="hl kwd">intent</span><span class="hl opt">(</span>in<span class="hl opt">) ::</span> a<span class="hl opt">,</span> b
    <span class="hl kwa">integer</span>                   <span class="hl opt">::</span> c

    <span class="hl kwa">integer</span> <span class="hl opt">::</span> k<span class="hl opt">,</span> carry<span class="hl opt">,</span> n<span class="hl opt">,</span> j
    <span class="hl kwa">type</span><span class="hl opt">(</span>big_int<span class="hl opt">) ::</span> accumulator

    c <span class="hl opt">=</span> <span class="hl num">0</span>
    <span class="hl kwa">if</span> <span class="hl opt">(</span>a<span class="hl opt">%</span>sigDigs <span class="hl opt">==</span> <span class="hl num">0</span><span class="hl opt">)</span> <span class="hl kwa">return</span>

    accumulator <span class="hl opt">=</span> <span class="hl kwd">big_int</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">, .</span>true<span class="hl opt">.,</span> <span class="hl num">0</span><span class="hl opt">)</span>
    <span class="hl kwa">do</span> k <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">,</span> Base<span class="hl opt">-</span><span class="hl num">1</span>
       carry <span class="hl opt">=</span> <span class="hl num">0</span>
       n <span class="hl opt">=</span> <span class="hl kwd">max</span><span class="hl opt">(</span>accumulator<span class="hl opt">%</span>sigDigs<span class="hl opt">,</span> b<span class="hl opt">%</span>sigDigs<span class="hl opt">) +</span> <span class="hl num">1</span>
       <span class="hl kwa">do</span> j <span class="hl opt">=</span> <span class="hl num">1</span><span class="hl opt">,</span> n
          accumulator<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>j<span class="hl opt">) =  &amp;</span>
               accumulator<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>j<span class="hl opt">) +</span> b<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>j<span class="hl opt">) +</span> carry
          carry <span class="hl opt">=</span> <span class="hl kwd">ibits</span><span class="hl opt">(</span>accumulator<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>j<span class="hl opt">),</span>Pwr<span class="hl opt">,</span>Pwr<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)</span>
          accumulator<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>j<span class="hl opt">) =</span> <span class="hl kwd">mod</span><span class="hl opt">(</span>accumulator<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>j<span class="hl opt">),</span>Base<span class="hl opt">)</span>
       <span class="hl kwa">end do</span>
       <span class="hl kwa">do</span> j <span class="hl opt">=</span> n<span class="hl opt">,</span> <span class="hl num">1</span><span class="hl opt">, -</span><span class="hl num">1</span>
          accumulator<span class="hl opt">%</span>sigDigs <span class="hl opt">=</span> j
          <span class="hl kwa">if</span> <span class="hl opt">(</span>accumulator<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>j<span class="hl opt">) /=</span> <span class="hl num">0</span><span class="hl opt">)</span> exit
       <span class="hl kwa">end do</span>
       <span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwd">greater_in_mag</span><span class="hl opt">(</span>accumulator<span class="hl opt">,</span> a<span class="hl opt">))</span> <span class="hl kwa">then</span>
          c <span class="hl opt">=</span> k
          exit
       <span class="hl kwa">end if</span>
    <span class="hl kwa">end do</span>
  <span class="hl kwa">end function</span> big_int_div_big_int
  
  <span class="hl kwa">logical function</span> <span class="hl kwd">greater_in_mag</span><span class="hl opt">(</span>a<span class="hl opt">,</span> b<span class="hl opt">)</span>
    <span class="hl kwa">type</span><span class="hl opt">(</span>big_int<span class="hl opt">),</span> <span class="hl kwd">intent</span><span class="hl opt">(</span>in<span class="hl opt">) ::</span> a<span class="hl opt">,</span> b

    <span class="hl kwa">integer</span> <span class="hl opt">::</span> i

    greater_in_mag <span class="hl opt">= .</span>false<span class="hl opt">.</span>
    <span class="hl kwa">do</span> i <span class="hl opt">=</span> <span class="hl kwd">max</span><span class="hl opt">(</span>a<span class="hl opt">%</span>sigDigs<span class="hl opt">,</span> b<span class="hl opt">%</span>sigDigs<span class="hl opt">),</span> <span class="hl num">1</span><span class="hl opt">, -</span><span class="hl num">1</span>
       <span class="hl kwa">if</span> <span class="hl opt">(</span>a<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>i<span class="hl opt">) &gt;</span> b<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>i<span class="hl opt">))</span> <span class="hl kwa">then</span>
          greater_in_mag <span class="hl opt">= .</span>true<span class="hl opt">.</span>
          exit
       <span class="hl kwa">else if</span> <span class="hl opt">(</span>a<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>i<span class="hl opt">) &lt;</span> b<span class="hl opt">%</span><span class="hl kwd">digits</span><span class="hl opt">(</span>i<span class="hl opt">))</span> <span class="hl kwa">then</span>
          exit
       <span class="hl kwa">end if</span>
    <span class="hl kwa">end do</span>
  <span class="hl kwa">end function</span> greater_in_mag
<span class="hl kwa">end module</span> big_int_mod

<span class="hl kwa">module</span> pi_mod
  <span class="hl kwa">use</span> big_int_mod
  <span class="hl kwa">implicit none</span>

<span class="hl kwa">contains</span>

  <span class="hl kwa">function</span> <span class="hl kwd">lfts</span><span class="hl opt">(</span>k<span class="hl opt">)</span>
    <span class="hl kwa">integer</span><span class="hl opt">,</span> <span class="hl kwd">intent</span><span class="hl opt">(</span>in<span class="hl opt">)     ::</span> k
    <span class="hl kwa">integer</span><span class="hl opt">,</span> <span class="hl kwa">dimension</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">) ::</span> lfts

    lfts <span class="hl opt">=</span> <span class="hl kwd">reshape</span><span class="hl opt">( (/</span> k<span class="hl opt">,</span> <span class="hl num">0</span><span class="hl opt">,</span> <span class="hl num">4</span><span class="hl opt">*</span>k <span class="hl opt">+</span> <span class="hl num">2</span><span class="hl opt">,</span> <span class="hl num">2</span><span class="hl opt">*</span>k <span class="hl opt">+</span> <span class="hl num">1</span> <span class="hl opt">/), (/</span> <span class="hl num">2</span><span class="hl opt">,</span> <span class="hl num">2</span> <span class="hl opt">/) )</span>
  <span class="hl kwa">end function</span> lfts

  <span class="hl kwa">function</span> <span class="hl kwd">comp1</span><span class="hl opt">(</span>a<span class="hl opt">,</span> b<span class="hl opt">)</span>
    <span class="hl kwa">integer</span><span class="hl opt">,</span>       <span class="hl kwa">dimension</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">),</span> <span class="hl kwd">intent</span><span class="hl opt">(</span>in<span class="hl opt">) ::</span> a
    <span class="hl kwa">type</span><span class="hl opt">(</span>big_int<span class="hl opt">),</span> <span class="hl kwa">dimension</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">),</span> <span class="hl kwd">intent</span><span class="hl opt">(</span>in<span class="hl opt">) ::</span> b
    <span class="hl kwa">type</span><span class="hl opt">(</span>big_int<span class="hl opt">),</span> <span class="hl kwa">dimension</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">) ::</span> comp1

    <span class="hl kwd">comp1</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">) =</span> <span class="hl kwd">b</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">)*</span><span class="hl kwd">a</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">) +</span> <span class="hl kwd">b</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">)*</span><span class="hl kwd">a</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">)</span>
    <span class="hl kwd">comp1</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">) =</span> <span class="hl kwd">b</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">)*</span><span class="hl kwd">a</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">) +</span> <span class="hl kwd">b</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">)*</span><span class="hl kwd">a</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">)</span>
    <span class="hl kwd">comp1</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">) =</span> <span class="hl kwd">b</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">)*</span><span class="hl kwd">a</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">) +</span> <span class="hl kwd">b</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">)*</span><span class="hl kwd">a</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">)</span>
    <span class="hl kwd">comp1</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">) =</span> <span class="hl kwd">b</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">)*</span><span class="hl kwd">a</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">) +</span> <span class="hl kwd">b</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">)*</span><span class="hl kwd">a</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">)</span>
  <span class="hl kwa">end function</span> comp1

  <span class="hl kwa">function</span> <span class="hl kwd">comp2</span><span class="hl opt">(</span>a<span class="hl opt">,</span> b<span class="hl opt">)</span>
    <span class="hl kwa">type</span><span class="hl opt">(</span>big_int<span class="hl opt">),</span> <span class="hl kwa">dimension</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">),</span> <span class="hl kwd">intent</span><span class="hl opt">(</span>in<span class="hl opt">) ::</span> a
    <span class="hl kwa">integer</span><span class="hl opt">,</span>       <span class="hl kwa">dimension</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">),</span> <span class="hl kwd">intent</span><span class="hl opt">(</span>in<span class="hl opt">) ::</span> b
    <span class="hl kwa">type</span><span class="hl opt">(</span>big_int<span class="hl opt">),</span> <span class="hl kwa">dimension</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">) ::</span> comp2
    
    <span class="hl kwd">comp2</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">) =</span> <span class="hl kwd">a</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">)*</span><span class="hl kwd">b</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">) +</span> <span class="hl kwd">a</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">)*</span><span class="hl kwd">b</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">)</span>
    <span class="hl kwd">comp2</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">) =</span> <span class="hl kwd">a</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">)*</span><span class="hl kwd">b</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">) +</span> <span class="hl kwd">a</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">)*</span><span class="hl kwd">b</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">)</span>
    <span class="hl kwd">comp2</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">) =</span> <span class="hl kwd">a</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">)*</span><span class="hl kwd">b</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">) +</span> <span class="hl kwd">a</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">)*</span><span class="hl kwd">b</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">)</span>
    <span class="hl kwd">comp2</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">) =</span> <span class="hl kwd">a</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">)*</span><span class="hl kwd">b</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">) +</span> <span class="hl kwd">a</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">)*</span><span class="hl kwd">b</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">)</span>
  <span class="hl kwa">end function</span> comp2
  
  <span class="hl kwa">function</span> <span class="hl kwd">prod</span><span class="hl opt">(</span>z<span class="hl opt">,</span> n<span class="hl opt">)</span>
    <span class="hl kwa">type</span><span class="hl opt">(</span>big_int<span class="hl opt">),</span> <span class="hl kwa">dimension</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">),</span> <span class="hl kwd">intent</span><span class="hl opt">(</span>in<span class="hl opt">) ::</span> z
    <span class="hl kwa">integer</span><span class="hl opt">,</span>                       <span class="hl kwd">intent</span><span class="hl opt">(</span>in<span class="hl opt">) ::</span> n
    <span class="hl kwa">type</span><span class="hl opt">(</span>big_int<span class="hl opt">),</span> <span class="hl kwa">dimension</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">) ::</span> prod

    prod <span class="hl opt">=</span> <span class="hl kwd">comp1</span><span class="hl opt">(</span><span class="hl kwd">reshape</span><span class="hl opt">( (/</span> <span class="hl num">10</span><span class="hl opt">,</span> <span class="hl num">0</span><span class="hl opt">, -</span><span class="hl num">10</span><span class="hl opt">*</span>n<span class="hl opt">,</span> <span class="hl num">1</span> <span class="hl opt">/), (/</span> <span class="hl num">2</span><span class="hl opt">,</span> <span class="hl num">2</span> <span class="hl opt">/) ),</span> z<span class="hl opt">)</span>
  <span class="hl kwa">end function</span> prod
  
  <span class="hl kwa">logical function</span> <span class="hl kwd">safe</span><span class="hl opt">(</span>z<span class="hl opt">,</span> n<span class="hl opt">)</span>
    <span class="hl kwa">type</span><span class="hl opt">(</span>big_int<span class="hl opt">),</span> <span class="hl kwa">dimension</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">),</span> <span class="hl kwd">intent</span><span class="hl opt">(</span>in<span class="hl opt">) ::</span> z
    <span class="hl kwa">integer</span><span class="hl opt">,</span>                       <span class="hl kwd">intent</span><span class="hl opt">(</span>in<span class="hl opt">) ::</span> n

    safe <span class="hl opt">=</span> n <span class="hl opt">== (</span><span class="hl kwd">z</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">) *</span> <span class="hl num">4</span> <span class="hl opt">+</span> <span class="hl kwd">z</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">)) / (</span><span class="hl kwd">z</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">) *</span> <span class="hl num">4</span> <span class="hl opt">+</span> <span class="hl kwd">z</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">))</span>
  <span class="hl kwa">end function</span> safe

  <span class="hl kwa">integer function</span> <span class="hl kwd">next</span><span class="hl opt">(</span>z<span class="hl opt">)</span>
    <span class="hl kwa">type</span><span class="hl opt">(</span>big_int<span class="hl opt">),</span> <span class="hl kwa">dimension</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">),</span> <span class="hl kwd">intent</span><span class="hl opt">(</span>in<span class="hl opt">) ::</span> z
    
    next <span class="hl opt">= (</span><span class="hl kwd">z</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">) *</span> <span class="hl num">3</span> <span class="hl opt">+</span> <span class="hl kwd">z</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">)) / (</span><span class="hl kwd">z</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">) *</span> <span class="hl num">3</span> <span class="hl opt">+</span> <span class="hl kwd">z</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">))</span>
  <span class="hl kwa">end function</span> next
<span class="hl kwa">end module</span> pi_mod

<span class="hl kwa">program</span> pidigits
  <span class="hl kwa">use</span> pi_mod
  <span class="hl kwa">implicit none</span>

  <span class="hl kwa">character</span><span class="hl opt">(</span>len<span class="hl opt">=</span><span class="hl num">12</span><span class="hl opt">),</span> <span class="hl kwa">parameter</span>  <span class="hl opt">::</span> proForma <span class="hl opt">=</span> <span class="hl str">&quot;          &quot;</span> <span class="hl opt">//</span> <span class="hl kwd">achar</span><span class="hl opt">(</span><span class="hl num">9</span><span class="hl opt">) //</span> <span class="hl str">&quot;:&quot;</span>
  <span class="hl kwa">type</span><span class="hl opt">(</span>big_int<span class="hl opt">),</span> <span class="hl kwa">dimension</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">) ::</span> z
  <span class="hl kwa">integer</span>           <span class="hl opt">::</span> num<span class="hl opt">,</span> y<span class="hl opt">,</span> i <span class="hl opt">=</span> <span class="hl num">1</span><span class="hl opt">,</span> j <span class="hl opt">=</span> <span class="hl num">1</span><span class="hl opt">,</span> k <span class="hl opt">=</span> <span class="hl num">1</span>
  <span class="hl kwa">character</span><span class="hl opt">(</span>len<span class="hl opt">=</span><span class="hl num">17</span><span class="hl opt">) ::</span> outLine <span class="hl opt">=</span> proForma
  <span class="hl kwa">character</span><span class="hl opt">(</span>len<span class="hl opt">=</span><span class="hl num">4</span><span class="hl opt">)  ::</span> argv

  <span class="hl kwa">call</span> <span class="hl kwd">get_command_argument</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span> argv<span class="hl opt">)</span>
  <span class="hl kwa">read</span><span class="hl opt">(</span>argv<span class="hl opt">, *)</span> num

  <span class="hl kwd">z</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">) =</span> <span class="hl num">1</span><span class="hl opt">;</span> <span class="hl kwd">z</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">1</span><span class="hl opt">) =</span> <span class="hl num">0</span><span class="hl opt">;</span> <span class="hl kwd">z</span><span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">) =</span> <span class="hl num">0</span><span class="hl opt">;</span> <span class="hl kwd">z</span><span class="hl opt">(</span><span class="hl num">2</span><span class="hl opt">,</span><span class="hl num">2</span><span class="hl opt">) =</span> <span class="hl num">1</span>

  <span class="hl kwa">do</span>
     y <span class="hl opt">=</span> <span class="hl kwd">next</span><span class="hl opt">(</span>z<span class="hl opt">)</span>
     <span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwd">safe</span><span class="hl opt">(</span>z<span class="hl opt">,</span> y<span class="hl opt">))</span> <span class="hl kwa">then</span>
        <span class="hl kwa">write</span><span class="hl opt">(</span>unit<span class="hl opt">=</span><span class="hl kwd">outLine</span><span class="hl opt">(</span>k<span class="hl opt">:</span>k<span class="hl opt">),</span> fmt<span class="hl opt">=</span><span class="hl str">&quot;(i1)&quot;</span><span class="hl opt">)</span> y
        <span class="hl kwa">if</span> <span class="hl opt">(</span>k <span class="hl opt">&lt;</span> <span class="hl num">10</span> <span class="hl opt">.</span>and<span class="hl opt">.</span> i <span class="hl opt">&lt;</span> num<span class="hl opt">)</span> <span class="hl kwa">then</span>
           k <span class="hl opt">=</span> k <span class="hl opt">+</span> <span class="hl num">1</span>
        <span class="hl kwa">else</span>
           k <span class="hl opt">=</span> <span class="hl num">1</span>
           <span class="hl kwa">write</span><span class="hl opt">(</span>unit<span class="hl opt">=</span><span class="hl kwd">outLine</span><span class="hl opt">(</span><span class="hl num">13</span><span class="hl opt">:</span><span class="hl num">17</span><span class="hl opt">),</span> fmt<span class="hl opt">=</span><span class="hl str">&quot;(i0)&quot;</span><span class="hl opt">)</span> i
           <span class="hl kwa">write</span><span class="hl opt">(*,</span> <span class="hl str">&quot;(a)&quot;</span><span class="hl opt">)</span> <span class="hl kwd">trim</span><span class="hl opt">(</span>outLine<span class="hl opt">)</span>
           outLine <span class="hl opt">=</span> proForma
        <span class="hl kwa">end if</span>
        <span class="hl kwa">if</span> <span class="hl opt">(</span>i <span class="hl opt">==</span> num<span class="hl opt">)</span> exit
        z <span class="hl opt">=</span> <span class="hl kwd">prod</span><span class="hl opt">(</span>z<span class="hl opt">,</span> y<span class="hl opt">)</span>
        i <span class="hl opt">=</span> i <span class="hl opt">+</span> <span class="hl num">1</span>
     <span class="hl kwa">else</span>
        z <span class="hl opt">=</span> <span class="hl kwd">comp2</span><span class="hl opt">(</span>z<span class="hl opt">,</span> <span class="hl kwd">lfts</span><span class="hl opt">(</span>j<span class="hl opt">))</span>
        j <span class="hl opt">=</span> j <span class="hl opt">+</span> <span class="hl num">1</span>
     <span class="hl kwa">end if</span>
  <span class="hl kwa">end do</span>
<span class="hl kwa">end program</span> pidigits
