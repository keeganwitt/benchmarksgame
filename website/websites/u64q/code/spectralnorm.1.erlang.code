<span class="hl slc">% The Computer Language Benchmarks Game</span>
<span class="hl slc">% http://benchmarksgame.alioth.debian.org/</span>
<span class="hl slc">%   contributed by Isaac Gouy (Erlang novice)</span>

<span class="hl opt">-</span><span class="hl kwd">module</span><span class="hl opt">(</span>spectralnorm<span class="hl opt">).</span>
<span class="hl opt">-</span><span class="hl kwd">export</span><span class="hl opt">([</span>main<span class="hl opt">/</span><span class="hl num">1</span><span class="hl opt">]).</span>

<span class="hl kwd">main</span><span class="hl opt">([</span>Arg<span class="hl opt">]) -&gt;</span>
    N <span class="hl opt">=</span> <span class="hl kwb">list_to_integer</span><span class="hl opt">(</span>Arg<span class="hl opt">),</span>
    <span class="hl opt">{</span>U<span class="hl opt">,</span>V<span class="hl opt">} =</span> <span class="hl kwd">powerMethod</span><span class="hl opt">(</span>N<span class="hl opt">,</span><span class="hl num">10</span><span class="hl opt">,</span> <span class="hl kwd">array</span><span class="hl opt">(</span><span class="hl num">1.0</span><span class="hl opt">,</span>N<span class="hl opt">,[]),</span> <span class="hl kwd">array</span><span class="hl opt">(</span><span class="hl num">0.0</span><span class="hl opt">,</span>N<span class="hl opt">,[]) ),</span>
    <span class="hl kwc">io</span><span class="hl opt">:</span><span class="hl kwd">format</span><span class="hl opt">(</span><span class="hl str">&quot;~.9f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">,[</span> <span class="hl kwd">loop</span><span class="hl opt">(</span>N<span class="hl opt">,</span>U<span class="hl opt">,</span>V<span class="hl opt">,</span><span class="hl num">0.0</span><span class="hl opt">,</span><span class="hl num">0.0</span><span class="hl opt">) ]),</span>
    <span class="hl kwc">erlang</span><span class="hl opt">:</span><span class="hl kwb">halt</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">).</span>

<span class="hl slc">% eigenvalue of V</span>
<span class="hl kwd">loop</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">,</span>_<span class="hl opt">,</span>_<span class="hl opt">,</span>VBV<span class="hl opt">,</span>VV<span class="hl opt">) -&gt;</span> <span class="hl kwb">math</span><span class="hl opt">:</span><span class="hl kwb">sqrt</span><span class="hl opt">(</span>VBV<span class="hl opt">/</span>VV<span class="hl opt">);</span>
<span class="hl kwd">loop</span><span class="hl opt">(</span>I<span class="hl opt">,</span>U<span class="hl opt">,</span>V<span class="hl opt">,</span>VBV<span class="hl opt">,</span>VV<span class="hl opt">) -&gt;</span> 
   VI <span class="hl opt">=</span> <span class="hl kwb">element</span><span class="hl opt">(</span>I<span class="hl opt">,</span>V<span class="hl opt">),</span>
   <span class="hl kwd">loop</span><span class="hl opt">(</span>I<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">,</span>U<span class="hl opt">,</span>V<span class="hl opt">,</span> VBV <span class="hl opt">+</span> <span class="hl kwb">element</span><span class="hl opt">(</span>I<span class="hl opt">,</span>U<span class="hl opt">)*</span>VI<span class="hl opt">,</span> VV <span class="hl opt">+</span> VI<span class="hl opt">*</span>VI<span class="hl opt">).</span>

<span class="hl slc">% 2I steps of the power method</span>
<span class="hl kwd">powerMethod</span><span class="hl opt">(</span>_<span class="hl opt">,</span><span class="hl num">0</span><span class="hl opt">,</span>A<span class="hl opt">,</span>B<span class="hl opt">) -&gt; {</span>A<span class="hl opt">,</span>B<span class="hl opt">};</span>
<span class="hl kwd">powerMethod</span><span class="hl opt">(</span>N<span class="hl opt">,</span>I<span class="hl opt">,</span>A<span class="hl opt">,</span>B<span class="hl opt">) -&gt;</span> 
   V <span class="hl opt">=</span> <span class="hl kwd">atav</span><span class="hl opt">(</span>N<span class="hl opt">,</span>A<span class="hl opt">,</span>B<span class="hl opt">),</span> 
   U <span class="hl opt">=</span> <span class="hl kwd">atav</span><span class="hl opt">(</span>N<span class="hl opt">,</span>V<span class="hl opt">,</span>A<span class="hl opt">),</span>
   <span class="hl kwd">powerMethod</span><span class="hl opt">(</span>N<span class="hl opt">,</span>I<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">,</span>U<span class="hl opt">,</span>V<span class="hl opt">).</span>

<span class="hl slc">% return element i,j of infinite matrix A</span>
<span class="hl kwd">a</span><span class="hl opt">(</span>II<span class="hl opt">,</span>JJ<span class="hl opt">) -&gt;</span>
   I <span class="hl opt">=</span> II<span class="hl opt">-</span><span class="hl num">1.0</span><span class="hl opt">,</span> J <span class="hl opt">=</span> JJ<span class="hl opt">-</span><span class="hl num">1.0</span><span class="hl opt">,</span>
   <span class="hl num">1.0</span><span class="hl opt">/((</span>I<span class="hl opt">+</span>J<span class="hl opt">)*(</span>I<span class="hl opt">+</span>J<span class="hl opt">+</span><span class="hl num">1.0</span><span class="hl opt">)/</span><span class="hl num">2.0</span> <span class="hl opt">+</span>I<span class="hl opt">+</span><span class="hl num">1.0</span><span class="hl opt">).</span>

<span class="hl slc">% multiply vector v by matrix A</span>
<span class="hl kwd">av</span><span class="hl opt">(</span>_<span class="hl opt">,</span><span class="hl num">0</span><span class="hl opt">,</span>_<span class="hl opt">,</span>AV<span class="hl opt">) -&gt;</span> AV<span class="hl opt">;</span>
<span class="hl kwd">av</span><span class="hl opt">(</span>N<span class="hl opt">,</span>I<span class="hl opt">,</span>V<span class="hl opt">,</span>AV<span class="hl opt">) -&gt;</span> 
   <span class="hl kwd">av</span><span class="hl opt">(</span>N<span class="hl opt">,</span>I<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">,</span>V<span class="hl opt">,</span> <span class="hl kwb">setelement</span><span class="hl opt">(</span>I<span class="hl opt">,</span>AV<span class="hl opt">,</span> <span class="hl kwd">avloop</span><span class="hl opt">(</span>N<span class="hl opt">,</span>I<span class="hl opt">,</span>V<span class="hl opt">,</span><span class="hl num">0.0</span><span class="hl opt">) )).</span>

<span class="hl kwd">avloop</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">,</span>_<span class="hl opt">,</span>_<span class="hl opt">,</span>X<span class="hl opt">) -&gt;</span> X<span class="hl opt">;</span>
<span class="hl kwd">avloop</span><span class="hl opt">(</span>J<span class="hl opt">,</span>I<span class="hl opt">,</span>V<span class="hl opt">,</span>X<span class="hl opt">) -&gt;</span> 
   <span class="hl kwd">avloop</span><span class="hl opt">(</span>J<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">,</span>I<span class="hl opt">,</span>V<span class="hl opt">,</span> X <span class="hl opt">+</span> <span class="hl kwd">a</span><span class="hl opt">(</span>I<span class="hl opt">,</span>J<span class="hl opt">)*</span><span class="hl kwb">element</span><span class="hl opt">(</span>J<span class="hl opt">,</span>V<span class="hl opt">) ).</span>

<span class="hl slc">% multiply vector v by matrix A transposed</span>
<span class="hl kwd">atv</span><span class="hl opt">(</span>_<span class="hl opt">,</span><span class="hl num">0</span><span class="hl opt">,</span>_<span class="hl opt">,</span>ATV<span class="hl opt">) -&gt;</span> ATV<span class="hl opt">;</span>
<span class="hl kwd">atv</span><span class="hl opt">(</span>N<span class="hl opt">,</span>I<span class="hl opt">,</span>V<span class="hl opt">,</span>ATV<span class="hl opt">) -&gt;</span> 
   <span class="hl kwd">atv</span><span class="hl opt">(</span>N<span class="hl opt">,</span>I<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">,</span>V<span class="hl opt">,</span> <span class="hl kwb">setelement</span><span class="hl opt">(</span>I<span class="hl opt">,</span>ATV<span class="hl opt">,</span> <span class="hl kwd">atvloop</span><span class="hl opt">(</span>N<span class="hl opt">,</span>I<span class="hl opt">,</span>V<span class="hl opt">,</span><span class="hl num">0.0</span><span class="hl opt">) )).</span>

<span class="hl kwd">atvloop</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">,</span>_<span class="hl opt">,</span>_<span class="hl opt">,</span>X<span class="hl opt">) -&gt;</span> X<span class="hl opt">;</span>
<span class="hl kwd">atvloop</span><span class="hl opt">(</span>J<span class="hl opt">,</span>I<span class="hl opt">,</span>V<span class="hl opt">,</span>X<span class="hl opt">) -&gt;</span> <span class="hl kwd">atvloop</span><span class="hl opt">(</span>J<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">,</span>I<span class="hl opt">,</span>V<span class="hl opt">,</span> X <span class="hl opt">+</span> <span class="hl kwd">a</span><span class="hl opt">(</span>J<span class="hl opt">,</span>I<span class="hl opt">)*</span><span class="hl kwb">element</span><span class="hl opt">(</span>J<span class="hl opt">,</span>V<span class="hl opt">) ).</span>

<span class="hl slc">% multiply vector v by matrix A and then by matrix A transposed</span>
<span class="hl kwd">atav</span><span class="hl opt">(</span>N<span class="hl opt">,</span>V<span class="hl opt">,</span>ATAV<span class="hl opt">) -&gt;</span>
   <span class="hl kwd">atv</span><span class="hl opt">(</span>N<span class="hl opt">,</span>N<span class="hl opt">,</span> <span class="hl kwd">av</span><span class="hl opt">(</span>N<span class="hl opt">,</span>N<span class="hl opt">,</span>V<span class="hl opt">,</span><span class="hl kwd">array</span><span class="hl opt">(</span><span class="hl num">0.0</span><span class="hl opt">,</span>N<span class="hl opt">,[])) ,</span>ATAV<span class="hl opt">).</span>

<span class="hl slc">% initialize a list and convert it to a tuple</span>
<span class="hl kwd">array</span><span class="hl opt">(</span>_<span class="hl opt">,</span><span class="hl num">0</span><span class="hl opt">,</span>L<span class="hl opt">) -&gt;</span> <span class="hl kwb">list_to_tuple</span><span class="hl opt">(</span>L<span class="hl opt">);</span>
<span class="hl kwd">array</span><span class="hl opt">(</span>X<span class="hl opt">,</span>N<span class="hl opt">,</span>L<span class="hl opt">) -&gt;</span> <span class="hl kwd">array</span><span class="hl opt">(</span>X<span class="hl opt">,</span>N<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">,[</span>X|L<span class="hl opt">]).</span>
