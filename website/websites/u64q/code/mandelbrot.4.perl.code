<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://benchmarksgame.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc"># contributed by Rodrigo de Almeida Siqueira</span>
<span class="hl slc"># parallelised by Philip Boulain</span>

<span class="hl kwa">use</span> strict<span class="hl opt">;</span>
<span class="hl kwa">use</span> threads<span class="hl opt">;</span>

<span class="hl kwc">my</span> <span class="hl kwb">$threads</span> <span class="hl opt">=</span> <span class="hl num">6</span><span class="hl opt">;</span> <span class="hl slc"># Workers; ideally slightly overshoots number of processors</span>

<span class="hl kwc">my</span> <span class="hl kwb">$MAXITER</span> <span class="hl opt">=</span> <span class="hl num">50</span><span class="hl opt">;</span>
<span class="hl kwc">my</span> <span class="hl kwb">$LIMIT</span> <span class="hl opt">=</span> <span class="hl num">4</span><span class="hl opt">;</span>
<span class="hl kwc">my</span> <span class="hl kwb">$xmin</span> <span class="hl opt">= -</span><span class="hl num">1.5</span><span class="hl opt">;</span>
<span class="hl kwc">my</span> <span class="hl kwb">$ymin</span> <span class="hl opt">= -</span><span class="hl num">1</span><span class="hl opt">;</span>

<span class="hl kwc">my</span> <span class="hl opt">(</span><span class="hl kwb">$w</span><span class="hl opt">,</span> <span class="hl kwb">$h</span><span class="hl opt">);</span>

<span class="hl kwb">$w</span> <span class="hl opt">=</span> <span class="hl kwb">$h</span> <span class="hl opt">=</span> <span class="hl kwc">shift</span> <span class="hl opt">||</span> <span class="hl num">200</span><span class="hl opt">;</span>
<span class="hl kwc">my</span> <span class="hl kwb">$invN</span> <span class="hl opt">=</span> <span class="hl num">2</span><span class="hl opt">/</span><span class="hl kwb">$w</span><span class="hl opt">;</span>

<span class="hl kwc">print</span> <span class="hl str">&quot;P4</span><span class="hl esc">\n</span><span class="hl str">$w $h</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">;</span> <span class="hl slc"># PBM image header</span>

<span class="hl kwa">sub</span> lines <span class="hl opt">{</span>

  <span class="hl kwc">my</span> <span class="hl kwb">$y1</span> <span class="hl opt">=</span> <span class="hl kwc">shift</span><span class="hl opt">;</span>
  <span class="hl kwc">my</span> <span class="hl kwb">$y2</span> <span class="hl opt">=</span> <span class="hl kwc">shift</span><span class="hl opt">;</span>
  <span class="hl kwc">my</span> <span class="hl kwb">&#64;v</span><span class="hl opt">;</span>

  <span class="hl kwc">my</span> <span class="hl kwb">$checknext</span><span class="hl opt">=</span><span class="hl num">1</span><span class="hl opt">;</span>

  <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$y</span> <span class="hl opt">(</span><span class="hl kwb">$y1</span><span class="hl opt">..</span><span class="hl kwb">$y2</span><span class="hl opt">) {</span>

    <span class="hl kwc">my</span> <span class="hl kwb">$Ci</span> <span class="hl opt">=</span> <span class="hl kwb">$y</span> <span class="hl opt">*</span> <span class="hl kwb">$invN</span> <span class="hl opt">+</span> <span class="hl kwb">$ymin</span><span class="hl opt">;</span>

    X<span class="hl opt">:</span>
    <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$x</span> <span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">..</span><span class="hl kwb">$w</span><span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">) {</span>

      <span class="hl kwc">my</span> <span class="hl opt">(</span><span class="hl kwb">$Zr</span><span class="hl opt">,</span> <span class="hl kwb">$Zi</span><span class="hl opt">,</span> <span class="hl kwb">$Tr</span><span class="hl opt">,</span> <span class="hl kwb">$Ti</span><span class="hl opt">);</span>

      <span class="hl kwc">my</span> <span class="hl kwb">$Cr</span> <span class="hl opt">=</span> <span class="hl kwb">$x</span> <span class="hl opt">*</span> <span class="hl kwb">$invN</span> <span class="hl opt">+</span> <span class="hl kwb">$xmin</span><span class="hl opt">;</span>

      <span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwb">$checknext</span><span class="hl opt">) {</span>

        <span class="hl slc"># Iterate with checking (likely outer pixel)</span>
        <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">..</span><span class="hl kwb">$MAXITER</span><span class="hl opt">) {</span>
          <span class="hl kwb">$Zi</span> <span class="hl opt">=</span> <span class="hl num">2</span> <span class="hl opt">*</span> <span class="hl kwb">$Zr</span> <span class="hl opt">*</span> <span class="hl kwb">$Zi</span> <span class="hl opt">+</span> <span class="hl kwb">$Ci</span><span class="hl opt">;</span>
          <span class="hl kwb">$Zr</span> <span class="hl opt">=</span> <span class="hl kwb">$Tr</span> <span class="hl opt">-</span> <span class="hl kwb">$Ti</span> <span class="hl opt">+</span> <span class="hl kwb">$Cr</span><span class="hl opt">;</span>
          <span class="hl kwb">$Ti</span> <span class="hl opt">=</span> <span class="hl kwb">$Zi</span> <span class="hl opt">*</span> <span class="hl kwb">$Zi</span><span class="hl opt">;</span>
          <span class="hl kwb">$Tr</span> <span class="hl opt">=</span> <span class="hl kwb">$Zr</span> <span class="hl opt">*</span> <span class="hl kwb">$Zr</span><span class="hl opt">;</span>

          <span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwb">$Tr</span> <span class="hl opt">+</span> <span class="hl kwb">$Ti</span> <span class="hl opt">&gt;</span> <span class="hl kwb">$LIMIT</span><span class="hl opt">) {</span>
            <span class="hl kwc">push</span> <span class="hl kwb">&#64;v</span><span class="hl opt">,</span> <span class="hl num">0</span><span class="hl opt">;</span> <span class="hl slc"># White pixel</span>
            <span class="hl kwa">next</span> X<span class="hl opt">;</span>
          <span class="hl opt">}</span>
        <span class="hl opt">}</span>

        <span class="hl kwc">push</span> <span class="hl kwb">&#64;v</span><span class="hl opt">,</span> <span class="hl num">1</span><span class="hl opt">;</span>     <span class="hl slc"># Black pixel</span>
        <span class="hl kwb">$checknext</span> <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span> <span class="hl slc"># Is inner pixel.</span>

      <span class="hl opt">}</span> <span class="hl kwa">else</span> <span class="hl opt">{</span>

        <span class="hl slc"># Iterate without checking (likely inner pixel)</span>

        <span class="hl kwa">for</span> <span class="hl opt">(</span><span class="hl num">1</span><span class="hl opt">..</span><span class="hl kwb">$MAXITER</span><span class="hl opt">) {</span>
          <span class="hl kwb">$Zi</span> <span class="hl opt">=</span> <span class="hl num">2</span> <span class="hl opt">*</span> <span class="hl kwb">$Zr</span> <span class="hl opt">*</span> <span class="hl kwb">$Zi</span> <span class="hl opt">+</span> <span class="hl kwb">$Ci</span><span class="hl opt">;</span>
          <span class="hl kwb">$Zr</span> <span class="hl opt">=</span> <span class="hl kwb">$Tr</span> <span class="hl opt">-</span> <span class="hl kwb">$Ti</span> <span class="hl opt">+</span> <span class="hl kwb">$Cr</span><span class="hl opt">;</span>
          <span class="hl kwb">$Ti</span> <span class="hl opt">=</span> <span class="hl kwb">$Zi</span> <span class="hl opt">*</span> <span class="hl kwb">$Zi</span><span class="hl opt">;</span>
          <span class="hl kwb">$Tr</span> <span class="hl opt">=</span> <span class="hl kwb">$Zr</span> <span class="hl opt">*</span> <span class="hl kwb">$Zr</span><span class="hl opt">;</span>
        <span class="hl opt">}</span>

        <span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwb">$Tr</span><span class="hl opt">+</span><span class="hl kwb">$Ti</span> <span class="hl opt">&lt;=</span> <span class="hl num">4</span><span class="hl opt">) {</span>
          <span class="hl kwc">push</span> <span class="hl kwb">&#64;v</span><span class="hl opt">,</span> <span class="hl num">1</span><span class="hl opt">;</span>
        <span class="hl opt">}</span> <span class="hl kwa">else</span> <span class="hl opt">{</span> <span class="hl slc"># $Tr+$Ti is a large number or overflow ('nan' or 'inf')</span>
          <span class="hl kwc">push</span> <span class="hl kwb">&#64;v</span><span class="hl opt">,</span> <span class="hl num">0</span><span class="hl opt">;</span>
          <span class="hl kwb">$checknext</span> <span class="hl opt">=</span> <span class="hl num">1</span><span class="hl opt">;</span>
        <span class="hl opt">}</span>

      <span class="hl opt">}</span>

    <span class="hl opt">}</span>

  <span class="hl opt">}</span>
  <span class="hl kwa">return</span> <span class="hl kwc">pack</span> <span class="hl str">'B*'</span><span class="hl opt">,</span> <span class="hl kwc">pack</span> <span class="hl str">'C*'</span><span class="hl opt">,</span> <span class="hl kwb">&#64;v</span><span class="hl opt">;</span>

<span class="hl opt">}</span>


<span class="hl kwa">use</span> constant MAXPIXEL <span class="hl opt">=&gt;</span> <span class="hl num">524288</span><span class="hl opt">;</span> <span class="hl slc"># Maximum pixel buffer per thread</span>
<span class="hl kwc">my</span> <span class="hl kwb">$each</span> <span class="hl opt">=</span> <span class="hl kwc">int</span><span class="hl opt">(</span><span class="hl kwb">$h</span> <span class="hl opt">/</span> <span class="hl kwb">$threads</span><span class="hl opt">);</span>
<span class="hl kwb">$each</span> <span class="hl opt">=</span> <span class="hl kwc">int</span><span class="hl opt">(</span>MAXPIXEL <span class="hl opt">/</span> <span class="hl kwb">$w</span><span class="hl opt">)</span> <span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwb">$each</span> <span class="hl opt">*</span> <span class="hl kwb">$w</span><span class="hl opt">) &gt;</span> MAXPIXEL<span class="hl opt">;</span>
<span class="hl kwb">$each</span> <span class="hl opt">=</span> <span class="hl num">1</span> <span class="hl kwa">if</span> <span class="hl kwb">$each</span> <span class="hl opt">&lt;</span> <span class="hl num">1</span><span class="hl opt">;</span>
<span class="hl opt">$|=</span><span class="hl num">1</span><span class="hl opt">;</span>

<span class="hl kwc">my</span> <span class="hl kwb">$y</span> <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
<span class="hl kwc">my</span> <span class="hl kwb">&#64;workers</span><span class="hl opt">;</span>
<span class="hl slc"># Work as long as we have lines to spawn for or threads to collect from</span>
<span class="hl kwa">while</span><span class="hl opt">(</span><span class="hl kwb">&#64;workers</span> <span class="hl kwc">or</span> <span class="hl opt">(</span><span class="hl kwb">$y</span> <span class="hl opt">&lt;</span> <span class="hl kwb">$h</span><span class="hl opt">)) {</span>
  <span class="hl slc"># Create workers up to requirement</span>
  <span class="hl kwa">while</span><span class="hl opt">((</span><span class="hl kwb">&#64;workers</span> <span class="hl opt">&lt;</span> <span class="hl kwb">$threads</span><span class="hl opt">)</span> <span class="hl kwc">and</span> <span class="hl opt">(</span><span class="hl kwb">$y</span> <span class="hl opt">&lt;</span> <span class="hl kwb">$h</span><span class="hl opt">)) {</span>
    <span class="hl kwc">my</span> <span class="hl kwb">$y2</span> <span class="hl opt">=</span> <span class="hl kwb">$y</span> <span class="hl opt">+</span> <span class="hl kwb">$each</span><span class="hl opt">;</span>
    <span class="hl kwb">$y2</span> <span class="hl opt">=</span> <span class="hl kwb">$h</span> <span class="hl kwa">if</span> <span class="hl kwb">$y2</span> <span class="hl opt">&gt;</span> <span class="hl kwb">$h</span><span class="hl opt">;</span>
    <span class="hl kwc">push</span><span class="hl opt">(</span><span class="hl kwb">&#64;workers</span><span class="hl opt">,</span> threads<span class="hl opt">-&gt;</span><span class="hl kwd">create</span><span class="hl opt">(</span><span class="hl str">'lines'</span><span class="hl opt">,</span> <span class="hl kwb">$y</span><span class="hl opt">,</span> <span class="hl kwb">$y2</span><span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">));</span>
    <span class="hl kwb">$y</span> <span class="hl opt">=</span> <span class="hl kwb">$y2</span><span class="hl opt">;</span>
  <span class="hl opt">}</span>
  <span class="hl slc"># Block for result from the leading thread (to keep output in order)</span>
  <span class="hl kwc">my</span> <span class="hl kwb">$next</span> <span class="hl opt">=</span> <span class="hl kwc">shift</span> <span class="hl kwb">&#64;workers</span><span class="hl opt">;</span>
  <span class="hl kwc">print</span> <span class="hl kwb">$next</span><span class="hl opt">-&gt;</span><span class="hl kwc">join</span><span class="hl opt">();</span>
<span class="hl opt">}</span>

