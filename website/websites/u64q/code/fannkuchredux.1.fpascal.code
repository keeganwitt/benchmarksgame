<span class="hl com">(* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"></span>
<span class="hl com">   contributed by Jean de La Taille</span>
<span class="hl com">*)</span>

<span class="hl kwa">program</span> project1<span class="hl opt">;</span>

<span class="hl kwa">uses</span>
  <span class="hl com">{$IFDEF UNIX}</span>
  cthreads<span class="hl opt">,</span>
  <span class="hl com">{$ENDIF}</span>
  SysUtils<span class="hl opt">,</span> DateUtils<span class="hl opt">,</span> Math<span class="hl opt">;</span>

<span class="hl kwa">type</span>
  arrWord <span class="hl opt">=</span> <span class="hl kwa">array</span><span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">.</span><span class="hl num">.12</span><span class="hl opt">]</span> <span class="hl kwa">of</span> <span class="hl kwb">Word</span><span class="hl opt">;</span>
  threadData <span class="hl opt">=</span> <span class="hl kwa">record</span>
    num<span class="hl opt">,</span> n<span class="hl opt">,</span> count<span class="hl opt">,</span> checksum <span class="hl opt">:</span> <span class="hl kwb">longint</span><span class="hl opt">;</span>
    list<span class="hl opt">,</span> counters<span class="hl opt">,</span> limits <span class="hl opt">:</span> arrWord<span class="hl opt">;</span>
  <span class="hl kwa">end</span><span class="hl opt">;</span>

<span class="hl com">(******************************************************************************)</span>

<span class="hl com">(* Thread *)</span>
<span class="hl kwa">function</span> <span class="hl kwd">run</span><span class="hl opt">(</span>p <span class="hl opt">:</span> <span class="hl kwb">pointer</span><span class="hl opt">) :</span> ptrint<span class="hl opt">;</span>
<span class="hl kwa">var</span>
  i<span class="hl opt">,</span> k<span class="hl opt">,</span> l<span class="hl opt">,</span> <span class="hl com">(*n,*)</span> num <span class="hl opt">:</span> <span class="hl kwb">longint</span><span class="hl opt">;</span>
  count<span class="hl opt">,</span> maxCount<span class="hl opt">,</span> checksum <span class="hl opt">:</span> <span class="hl kwb">longint</span><span class="hl opt">;</span>
  f <span class="hl opt">:</span> <span class="hl kwb">boolean</span><span class="hl opt">;</span>
  list<span class="hl opt">,</span> counters<span class="hl opt">,</span> limits <span class="hl opt">:</span> arrWord<span class="hl opt">;</span>

  <span class="hl slc">// Flip function</span>
  <span class="hl kwa">function</span> flip <span class="hl opt">:</span> <span class="hl kwb">longint</span><span class="hl opt">;</span> <span class="hl kwa">inline</span><span class="hl opt">;</span>
  <span class="hl kwa">var</span>
    count<span class="hl opt">,</span> f<span class="hl opt">,</span> i<span class="hl opt">,</span> j<span class="hl opt">,</span> k<span class="hl opt">,</span> tmp <span class="hl opt">:</span> <span class="hl kwb">longint</span><span class="hl opt">;</span>
    tmpList <span class="hl opt">:</span> arrWord<span class="hl opt">;</span>
  <span class="hl kwa">begin</span>
    tmpList <span class="hl opt">:=</span> list<span class="hl opt">;</span>
    count <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span>
    <span class="hl slc">// While the head list is not 1, do lot of reverse</span>
    f <span class="hl opt">:=</span> tmpList<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">];</span>
    <span class="hl kwc">while</span> <span class="hl opt">(</span>f <span class="hl opt">&lt;&gt;</span> <span class="hl num">1</span><span class="hl opt">)</span> <span class="hl kwc">do</span>
    <span class="hl kwa">begin</span>
      <span class="hl slc">// Reverse</span>
      j <span class="hl opt">:=</span> f <span class="hl opt">&gt;&gt;</span> <span class="hl num">1</span><span class="hl opt">;</span>
      k <span class="hl opt">:=</span> f <span class="hl opt">-</span> <span class="hl num">1</span><span class="hl opt">;</span>
      <span class="hl kwc">for</span> i <span class="hl opt">:=</span> <span class="hl num">0</span> <span class="hl kwc">to</span> j <span class="hl opt">-</span> <span class="hl num">1</span> <span class="hl kwc">do</span>
      <span class="hl kwa">begin</span>
        tmp <span class="hl opt">:=</span> tmpList<span class="hl opt">[</span>i<span class="hl opt">];</span>
        tmpList<span class="hl opt">[</span>i<span class="hl opt">] :=</span> tmpList<span class="hl opt">[</span>k<span class="hl opt">];</span>
        tmpList<span class="hl opt">[</span>k<span class="hl opt">] :=</span> tmp<span class="hl opt">;</span>
        <span class="hl kwd">Dec</span><span class="hl opt">(</span>k<span class="hl opt">);</span>
      <span class="hl kwa">end</span><span class="hl opt">;</span>
      f <span class="hl opt">:=</span> tmpList<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">];</span>
      <span class="hl slc">// End of reverse</span>
      <span class="hl kwd">Inc</span><span class="hl opt">(</span>count<span class="hl opt">);</span>
    <span class="hl kwa">end</span><span class="hl opt">;</span>
    flip <span class="hl opt">:=</span> count<span class="hl opt">;</span>
  <span class="hl kwa">end</span><span class="hl opt">;</span>
  <span class="hl slc">// Swap function</span>
  <span class="hl kwa">procedure</span> <span class="hl kwd">swap</span><span class="hl opt">(</span><span class="hl kwa">var</span> a<span class="hl opt">,</span> b <span class="hl opt">:</span> <span class="hl kwb">word</span><span class="hl opt">);</span> <span class="hl kwa">inline</span><span class="hl opt">;</span>
  <span class="hl kwa">begin</span>
    l <span class="hl opt">:=</span> a<span class="hl opt">;</span>
    a <span class="hl opt">:=</span> b<span class="hl opt">;</span>
    b <span class="hl opt">:=</span> l<span class="hl opt">;</span>
  <span class="hl kwa">end</span><span class="hl opt">;</span>
  <span class="hl slc">// Roll3 function</span>
  <span class="hl kwa">procedure</span> <span class="hl kwd">roll3</span><span class="hl opt">(</span><span class="hl kwa">var</span> a<span class="hl opt">,</span> b<span class="hl opt">,</span> c <span class="hl opt">:</span> <span class="hl kwb">word</span><span class="hl opt">);</span> <span class="hl kwa">inline</span><span class="hl opt">;</span>
  <span class="hl kwa">begin</span>
    l <span class="hl opt">:=</span> a<span class="hl opt">;</span>
    a <span class="hl opt">:=</span> b<span class="hl opt">;</span>
    b <span class="hl opt">:=</span> c<span class="hl opt">;</span>
    c <span class="hl opt">:=</span> l<span class="hl opt">;</span>
  <span class="hl kwa">end</span><span class="hl opt">;</span>
  <span class="hl slc">// Roll function</span>
  <span class="hl kwa">procedure</span> <span class="hl kwd">roll</span><span class="hl opt">(</span>k <span class="hl opt">:</span> <span class="hl kwb">longint</span><span class="hl opt">);</span> <span class="hl kwa">inline</span><span class="hl opt">;</span>
  <span class="hl kwa">var</span>
    j <span class="hl opt">:</span> <span class="hl kwb">longint</span><span class="hl opt">;</span>
  <span class="hl kwa">begin</span>
    l <span class="hl opt">:=</span> list<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">];</span>
    <span class="hl kwc">for</span> j <span class="hl opt">:=</span> <span class="hl num">0</span> <span class="hl kwc">to</span> k <span class="hl kwc">do</span>
      list<span class="hl opt">[</span>j<span class="hl opt">] :=</span> list<span class="hl opt">[</span>j <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">];</span>
    list<span class="hl opt">[</span>j<span class="hl opt">] :=</span> l<span class="hl opt">;</span>
  <span class="hl kwa">end</span><span class="hl opt">;</span>

<span class="hl kwa">begin</span>
  <span class="hl slc">/// n := threadData(p^).n;</span>
  num <span class="hl opt">:=</span> <span class="hl kwd">threadData</span><span class="hl opt">(</span>p<span class="hl opt">^).</span>num<span class="hl opt">;</span>
  limits <span class="hl opt">:=</span> <span class="hl kwd">threadData</span><span class="hl opt">(</span>p<span class="hl opt">^).</span>limits<span class="hl opt">;</span>
  counters <span class="hl opt">:=</span> <span class="hl kwd">threadData</span><span class="hl opt">(</span>p<span class="hl opt">^).</span>counters<span class="hl opt">;</span>
  list <span class="hl opt">:=</span> <span class="hl kwd">threadData</span><span class="hl opt">(</span>p<span class="hl opt">^).</span>list<span class="hl opt">;</span>
  <span class="hl slc">/// WriteLn(n, ' ', num, ' ', list[0]);</span>
  <span class="hl slc">// Main loop</span>
  f <span class="hl opt">:=</span> <span class="hl kwb">false</span><span class="hl opt">;</span>
  maxCount <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span>
  checksum <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span>
  <span class="hl kwc">for</span> i <span class="hl opt">:=</span> <span class="hl num">1</span> <span class="hl kwc">to</span> num <span class="hl kwc">do</span>
  <span class="hl kwa">begin</span>
    count <span class="hl opt">:=</span> flip<span class="hl opt">;</span>
    <span class="hl slc">// Check if the number of reverse is the max</span>
    <span class="hl kwc">if</span> <span class="hl opt">(</span>count <span class="hl opt">&gt;</span> maxCount<span class="hl opt">)</span> <span class="hl kwc">then</span>
      maxCount <span class="hl opt">:=</span> count<span class="hl opt">;</span>
    <span class="hl slc">// Compute checksum</span>
    checksum <span class="hl opt">:=</span> count <span class="hl opt">-</span> checksum<span class="hl opt">;</span>
    <span class="hl slc">// Swap</span>
    <span class="hl kwd">swap</span><span class="hl opt">(</span>list<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">],</span> list<span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">]);</span>
    <span class="hl slc">// If needed, roll 3</span>
    <span class="hl kwc">if</span> <span class="hl opt">(</span>f<span class="hl opt">)</span> <span class="hl kwc">then</span>
    <span class="hl kwa">begin</span>
      <span class="hl slc">// Roll 3</span>
      <span class="hl kwd">roll3</span><span class="hl opt">(</span>list<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">],</span> list<span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">],</span> list<span class="hl opt">[</span><span class="hl num">2</span><span class="hl opt">]);</span>
      k <span class="hl opt">:=</span> <span class="hl num">3</span><span class="hl opt">;</span>
      <span class="hl kwd">Dec</span><span class="hl opt">(</span>counters<span class="hl opt">[</span><span class="hl num">3</span><span class="hl opt">]);</span>
      <span class="hl slc">// If needed, roll next</span>
      <span class="hl kwc">while</span> <span class="hl opt">((</span>counters<span class="hl opt">[</span>k<span class="hl opt">] =</span> <span class="hl num">0</span><span class="hl opt">))</span> <span class="hl kwc">do</span>
      <span class="hl kwa">begin</span>
        counters<span class="hl opt">[</span>k<span class="hl opt">] :=</span> limits<span class="hl opt">[</span>k<span class="hl opt">];</span>
        <span class="hl kwd">roll</span><span class="hl opt">(</span>k<span class="hl opt">);</span>
        <span class="hl kwd">Inc</span><span class="hl opt">(</span>k<span class="hl opt">);</span>
        <span class="hl kwd">Dec</span><span class="hl opt">(</span>counters<span class="hl opt">[</span>k<span class="hl opt">]);</span>
      <span class="hl kwa">end</span><span class="hl opt">;</span>
    <span class="hl kwa">end</span><span class="hl opt">;</span>
    f <span class="hl opt">:=</span> <span class="hl kwa">not</span> f<span class="hl opt">;</span>
  <span class="hl kwa">end</span><span class="hl opt">;</span>
  <span class="hl kwd">threadData</span><span class="hl opt">(</span>p<span class="hl opt">^).</span>checksum <span class="hl opt">:=</span> checksum<span class="hl opt">;</span>
  <span class="hl kwd">threadData</span><span class="hl opt">(</span>p<span class="hl opt">^).</span>count <span class="hl opt">:=</span> maxCount<span class="hl opt">;</span>
  run <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span>
<span class="hl kwa">end</span><span class="hl opt">;</span>

<span class="hl com">(* Main routine, to launch threads *)</span>
<span class="hl kwa">procedure</span> <span class="hl kwd">launch</span><span class="hl opt">(</span>n <span class="hl opt">:</span> <span class="hl kwb">longint</span><span class="hl opt">);</span>
<span class="hl kwa">var</span>
  <span class="hl slc">//start, finish : TDateTime;</span>
  list<span class="hl opt">,</span> counters<span class="hl opt">,</span> limits <span class="hl opt">:</span> arrWord<span class="hl opt">;</span>
  i<span class="hl opt">,</span> l<span class="hl opt">,</span> num<span class="hl opt">,</span> count<span class="hl opt">,</span> checksum <span class="hl opt">:</span> <span class="hl kwb">longint</span><span class="hl opt">;</span>
  tt <span class="hl opt">:</span> <span class="hl kwa">array of</span> TThreadID<span class="hl opt">;</span>
  td <span class="hl opt">:</span> <span class="hl kwa">array of</span> threadData<span class="hl opt">;</span>

  <span class="hl slc">// Roll function</span>
  <span class="hl kwa">procedure</span> <span class="hl kwd">roll</span><span class="hl opt">(</span>k <span class="hl opt">:</span> <span class="hl kwb">longint</span><span class="hl opt">);</span> <span class="hl kwa">inline</span><span class="hl opt">;</span>
  <span class="hl kwa">var</span>
    j <span class="hl opt">:</span> <span class="hl kwb">longint</span><span class="hl opt">;</span>
  <span class="hl kwa">begin</span>
    l <span class="hl opt">:=</span> list<span class="hl opt">[</span><span class="hl num">0</span><span class="hl opt">];</span>
    <span class="hl kwc">for</span> j <span class="hl opt">:=</span> <span class="hl num">0</span> <span class="hl kwc">to</span> k <span class="hl kwc">do</span>
      list<span class="hl opt">[</span>j<span class="hl opt">] :=</span> list<span class="hl opt">[</span>j <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">];</span>
    list<span class="hl opt">[</span>j<span class="hl opt">] :=</span> l<span class="hl opt">;</span>
  <span class="hl kwa">end</span><span class="hl opt">;</span>

<span class="hl kwa">begin</span>
  <span class="hl slc">/// start := now;</span>
  <span class="hl kwd">SetLength</span><span class="hl opt">(</span>tt<span class="hl opt">,</span> n<span class="hl opt">);</span>
  <span class="hl kwd">SetLength</span><span class="hl opt">(</span>td<span class="hl opt">,</span> n<span class="hl opt">);</span>
  <span class="hl slc">// Inits the arrays</span>
  num <span class="hl opt">:=</span> <span class="hl num">1</span><span class="hl opt">;</span>
  <span class="hl kwc">for</span> i <span class="hl opt">:=</span> <span class="hl num">0</span> <span class="hl kwc">to</span> n <span class="hl opt">-</span> <span class="hl num">1</span> <span class="hl kwc">do</span>
  <span class="hl kwa">begin</span>
    limits<span class="hl opt">[</span>i<span class="hl opt">] :=</span> i<span class="hl opt">;</span>
    counters<span class="hl opt">[</span>i<span class="hl opt">] :=</span> i<span class="hl opt">;</span>
    list<span class="hl opt">[</span>i<span class="hl opt">] :=</span> i <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">;</span>
    num <span class="hl opt">:=</span> num <span class="hl opt">* (</span>i <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">);</span>
  <span class="hl kwa">end</span><span class="hl opt">;</span>
  num <span class="hl opt">:=</span> num <span class="hl kwa">div</span> n<span class="hl opt">;</span>
  <span class="hl slc">// Launch threads</span>
  <span class="hl kwc">for</span> i <span class="hl opt">:=</span> <span class="hl num">0</span> <span class="hl kwc">to</span> n <span class="hl opt">-</span> <span class="hl num">1</span> <span class="hl kwc">do</span>
  <span class="hl kwa">begin</span>
    td<span class="hl opt">[</span>i<span class="hl opt">].</span>n <span class="hl opt">:=</span> n<span class="hl opt">;</span>
    td<span class="hl opt">[</span>i<span class="hl opt">].</span>num <span class="hl opt">:=</span> num<span class="hl opt">;</span>
    td<span class="hl opt">[</span>i<span class="hl opt">].</span>list <span class="hl opt">:=</span> list<span class="hl opt">;</span>
    td<span class="hl opt">[</span>i<span class="hl opt">].</span>counters <span class="hl opt">:=</span> counters<span class="hl opt">;</span>
    td<span class="hl opt">[</span>i<span class="hl opt">].</span>limits <span class="hl opt">:=</span> limits<span class="hl opt">;</span>
    tt<span class="hl opt">[</span>i<span class="hl opt">] :=</span> <span class="hl kwd">BeginThread</span><span class="hl opt">(&#64;</span>run<span class="hl opt">, &#64;</span>td<span class="hl opt">[</span>i<span class="hl opt">]);</span>
    <span class="hl kwd">roll</span><span class="hl opt">(</span>n <span class="hl opt">-</span> <span class="hl num">1</span><span class="hl opt">);</span>
  <span class="hl kwa">end</span><span class="hl opt">;</span>
  <span class="hl slc">// Wait threads</span>
  checksum <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span>
  count <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span>
  <span class="hl kwc">for</span> i <span class="hl opt">:=</span> <span class="hl num">0</span> <span class="hl kwc">to</span> n <span class="hl opt">-</span> <span class="hl num">1</span> <span class="hl kwc">do</span>
  <span class="hl kwa">begin</span>
    <span class="hl kwd">WaitForThreadTerminate</span><span class="hl opt">(</span>tt<span class="hl opt">[</span>i<span class="hl opt">],</span> <span class="hl num">0</span><span class="hl opt">);</span>
    count <span class="hl opt">:=</span> <span class="hl kwd">max</span><span class="hl opt">(</span>count<span class="hl opt">,</span> td<span class="hl opt">[</span>i<span class="hl opt">].</span>count<span class="hl opt">);</span>
    <span class="hl kwc">if</span> <span class="hl opt">((</span>n <span class="hl kwa">and</span> <span class="hl num">1</span><span class="hl opt">) =</span> <span class="hl num">0</span><span class="hl opt">)</span> <span class="hl kwc">then</span>
      checksum <span class="hl opt">:=</span> td<span class="hl opt">[</span>i<span class="hl opt">].</span>checksum <span class="hl opt">+</span> checksum
    <span class="hl kwc">else</span>
      checksum <span class="hl opt">:=</span> checksum <span class="hl opt">-</span> td<span class="hl opt">[</span>i<span class="hl opt">].</span>checksum<span class="hl opt">;</span>
  <span class="hl kwa">end</span><span class="hl opt">;</span>
  <span class="hl slc">/// finish := now;</span>
  <span class="hl slc">/// WriteLn('Time : ', (MilliSecondsBetween(start, finish) / 1000) : 0 : 4);</span>
  <span class="hl kwd">WriteLn</span><span class="hl opt">(</span><span class="hl kwd">abs</span><span class="hl opt">(</span>checksum<span class="hl opt">));</span>
  <span class="hl kwd">WriteLn</span><span class="hl opt">(</span><span class="hl str">'Pfannkuchen('</span><span class="hl opt">,</span> n<span class="hl opt">,</span> <span class="hl str">') = '</span><span class="hl opt">,</span> count<span class="hl opt">);</span>
<span class="hl kwa">end</span><span class="hl opt">;</span>

<span class="hl com">(* Main program *)</span>
<span class="hl kwa">begin</span>
  <span class="hl kwc">if</span> <span class="hl opt">(</span>argc <span class="hl opt">&gt;</span> <span class="hl num">1</span><span class="hl opt">)</span> <span class="hl kwc">then</span>
    <span class="hl kwd">launch</span><span class="hl opt">(</span><span class="hl kwd">StrToInt</span><span class="hl opt">(</span>argv<span class="hl opt">[</span><span class="hl num">1</span><span class="hl opt">]))</span>
  <span class="hl kwc">else</span>
    <span class="hl kwd">launch</span><span class="hl opt">(</span><span class="hl num">4</span><span class="hl opt">);</span>
<span class="hl kwa">end</span><span class="hl opt">.</span>

