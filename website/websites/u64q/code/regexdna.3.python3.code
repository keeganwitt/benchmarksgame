<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc"># contributed by Dominique Wahli</span>
<span class="hl slc"># 2to3</span>
<span class="hl slc"># mp by Ahmad Syukri</span>

<span class="hl kwa">from</span> sys <span class="hl kwa">import</span> stdin
<span class="hl kwa">from</span> re <span class="hl kwa">import</span> sub<span class="hl sym">,</span> findall
<span class="hl kwa">from</span> multiprocessing <span class="hl kwa">import</span> Pool

<span class="hl kwa">def</span> <span class="hl kwd">init</span><span class="hl sym">(</span>arg<span class="hl sym">):</span>
    <span class="hl kwa">global</span> seq
    seq <span class="hl sym">=</span> arg    

<span class="hl kwa">def</span> <span class="hl kwd">var_find</span><span class="hl sym">(</span>f<span class="hl sym">):</span>
    <span class="hl kwa">return</span> <span class="hl kwb">len</span><span class="hl sym">(</span><span class="hl kwd">findall</span><span class="hl sym">(</span>f<span class="hl sym">,</span> seq<span class="hl sym">))</span>

<span class="hl kwa">def</span> <span class="hl kwd">main</span><span class="hl sym">():</span>
    seq <span class="hl sym">=</span> stdin<span class="hl sym">.</span><span class="hl kwd">read</span><span class="hl sym">()</span>
    ilen <span class="hl sym">=</span> <span class="hl kwb">len</span><span class="hl sym">(</span>seq<span class="hl sym">)</span>

    seq <span class="hl sym">=</span> <span class="hl kwd">sub</span><span class="hl sym">(</span><span class="hl str">'(&gt;.*</span><span class="hl esc">\n</span><span class="hl str">)|(</span><span class="hl esc">\n</span><span class="hl str">)'</span><span class="hl sym">,</span> <span class="hl str">''</span><span class="hl sym">,</span> seq<span class="hl sym">)</span>
    clen <span class="hl sym">=</span> <span class="hl kwb">len</span><span class="hl sym">(</span>seq<span class="hl sym">)</span>

    pool <span class="hl sym">=</span> <span class="hl kwd">Pool</span><span class="hl sym">(</span>initializer <span class="hl sym">=</span> init<span class="hl sym">,</span> initargs <span class="hl sym">= (</span>seq<span class="hl sym">,))</span>

    variants <span class="hl sym">= (</span>
          <span class="hl str">'agggtaaa|tttaccct'</span><span class="hl sym">,</span>
          <span class="hl str">'[cgt]gggtaaa|tttaccc[acg]'</span><span class="hl sym">,</span>
          <span class="hl str">'a[act]ggtaaa|tttacc[agt]t'</span><span class="hl sym">,</span>
          <span class="hl str">'ag[act]gtaaa|tttac[agt]ct'</span><span class="hl sym">,</span>
          <span class="hl str">'agg[act]taaa|ttta[agt]cct'</span><span class="hl sym">,</span>
          <span class="hl str">'aggg[acg]aaa|ttt[cgt]ccct'</span><span class="hl sym">,</span>
          <span class="hl str">'agggt[cgt]aa|tt[acg]accct'</span><span class="hl sym">,</span>
          <span class="hl str">'agggta[cgt]a|t[acg]taccct'</span><span class="hl sym">,</span>
          <span class="hl str">'agggtaa[cgt]|[acg]ttaccct'</span><span class="hl sym">)</span>
    <span class="hl kwa">for</span> f <span class="hl kwa">in</span> <span class="hl kwb">zip</span><span class="hl sym">(</span>variants<span class="hl sym">,</span> pool<span class="hl sym">.</span><span class="hl kwd">imap</span><span class="hl sym">(</span>var_find<span class="hl sym">,</span> variants<span class="hl sym">)):</span>
        <span class="hl kwa">print</span><span class="hl sym">(</span>f<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">],</span> f<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">])</span>

    subst <span class="hl sym">= {</span>
          <span class="hl str">'B'</span> <span class="hl sym">:</span> <span class="hl str">'(c|g|t)'</span><span class="hl sym">,</span> <span class="hl str">'D'</span> <span class="hl sym">:</span> <span class="hl str">'(a|g|t)'</span><span class="hl sym">,</span>   <span class="hl str">'H'</span> <span class="hl sym">:</span> <span class="hl str">'(a|c|t)'</span><span class="hl sym">,</span> <span class="hl str">'K'</span> <span class="hl sym">:</span> <span class="hl str">'(g|t)'</span><span class="hl sym">,</span>
          <span class="hl str">'M'</span> <span class="hl sym">:</span> <span class="hl str">'(a|c)'</span><span class="hl sym">,</span>   <span class="hl str">'N'</span> <span class="hl sym">:</span> <span class="hl str">'(a|c|g|t)'</span><span class="hl sym">,</span> <span class="hl str">'R'</span> <span class="hl sym">:</span> <span class="hl str">'(a|g)'</span><span class="hl sym">,</span>   <span class="hl str">'S'</span> <span class="hl sym">:</span> <span class="hl str">'(c|g)'</span><span class="hl sym">,</span>
          <span class="hl str">'V'</span> <span class="hl sym">:</span> <span class="hl str">'(a|c|g)'</span><span class="hl sym">,</span> <span class="hl str">'W'</span> <span class="hl sym">:</span> <span class="hl str">'(a|t)'</span><span class="hl sym">,</span>     <span class="hl str">'Y'</span> <span class="hl sym">:</span> <span class="hl str">'(c|t)'</span><span class="hl sym">}</span>
    <span class="hl kwa">for</span> f<span class="hl sym">,</span> r <span class="hl kwa">in</span> <span class="hl kwb">list</span><span class="hl sym">(</span>subst<span class="hl sym">.</span><span class="hl kwd">items</span><span class="hl sym">()):</span>
        seq <span class="hl sym">=</span> <span class="hl kwd">sub</span><span class="hl sym">(</span>f<span class="hl sym">,</span> r<span class="hl sym">,</span> seq<span class="hl sym">)</span>

    <span class="hl kwa">print</span><span class="hl sym">()</span>
    <span class="hl kwa">print</span><span class="hl sym">(</span>ilen<span class="hl sym">)</span>
    <span class="hl kwa">print</span><span class="hl sym">(</span>clen<span class="hl sym">)</span>
    <span class="hl kwa">print</span><span class="hl sym">(</span><span class="hl kwb">len</span><span class="hl sym">(</span>seq<span class="hl sym">))</span>

<span class="hl kwa">if</span> __name__<span class="hl sym">==</span><span class="hl str">&quot;__main__&quot;</span><span class="hl sym">:</span>
    <span class="hl kwd">main</span><span class="hl sym">()</span>
