<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com"> * http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"> *</span>
<span class="hl com"> * contributed by Anthony Perez-Sanz.</span>
<span class="hl com"> * based on Java program by Jarkko Miettinen</span>
<span class="hl com"> */</span>

<span class="hl kwa">package</span> main

<span class="hl kwa">import</span> <span class="hl opt">(</span>
   <span class="hl str">&quot;flag&quot;</span>
   <span class="hl str">&quot;fmt&quot;</span>
   <span class="hl str">&quot;strconv&quot;</span>
<span class="hl opt">)</span>

<span class="hl kwa">type</span> Node <span class="hl kwa">struct</span> <span class="hl opt">{</span>
   item        <span class="hl kwb">int</span>
   left<span class="hl opt">,</span> right <span class="hl opt">*</span>Node
<span class="hl opt">}</span>

<span class="hl kwa">const</span> minDepth <span class="hl opt">=</span> <span class="hl num">4</span>

<span class="hl kwa">func</span> <span class="hl kwd">trees</span><span class="hl opt">(</span>maxDepth <span class="hl kwb">int</span><span class="hl opt">) {</span>
   longLastingNode <span class="hl opt">:=</span> <span class="hl kwd">createTree</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">,</span> maxDepth<span class="hl opt">)</span>
   depth <span class="hl opt">:=</span> <span class="hl num">4</span>

   <span class="hl kwa">for</span> depth <span class="hl opt">&lt;=</span> maxDepth <span class="hl opt">{</span>
      iterations <span class="hl opt">:=</span> <span class="hl num">1</span> <span class="hl opt">&lt;&lt;</span> <span class="hl kwb">uint</span><span class="hl opt">(</span>maxDepth<span class="hl opt">-</span>depth<span class="hl opt">+</span>minDepth<span class="hl opt">)</span> <span class="hl slc">// 16 &lt;&lt; (maxDepth - depth)</span>

      <span class="hl kwd">loops</span><span class="hl opt">(</span>iterations<span class="hl opt">,</span> depth<span class="hl opt">)</span>
      depth <span class="hl opt">+=</span> <span class="hl num">2</span>
   <span class="hl opt">}</span>
   fmt<span class="hl opt">.</span><span class="hl kwd">Printf</span><span class="hl opt">(</span><span class="hl str">&quot;long lived tree of depth %d</span><span class="hl esc">\t</span> <span class="hl str">check: %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">,</span> maxDepth<span class="hl opt">,</span>
      <span class="hl kwd">checkTree</span><span class="hl opt">(</span>longLastingNode<span class="hl opt">))</span>
<span class="hl opt">}</span>

<span class="hl kwa">func</span> <span class="hl kwd">loops</span><span class="hl opt">(</span>iterations<span class="hl opt">,</span> depth <span class="hl kwb">int</span><span class="hl opt">) {</span>
   check <span class="hl opt">:=</span> <span class="hl num">0</span>
   item <span class="hl opt">:=</span> <span class="hl num">0</span>
   <span class="hl kwa">for</span> item <span class="hl opt">&lt;</span> iterations <span class="hl opt">{</span>
      check <span class="hl opt">+=</span> <span class="hl kwd">checkTree</span><span class="hl opt">(</span><span class="hl kwd">createTree</span><span class="hl opt">(</span>item<span class="hl opt">,</span> depth<span class="hl opt">)) +</span>
         <span class="hl kwd">checkTree</span><span class="hl opt">(</span><span class="hl kwd">createTree</span><span class="hl opt">(-</span>item<span class="hl opt">,</span> depth<span class="hl opt">))</span>
      item<span class="hl opt">++</span>
   <span class="hl opt">}</span>
   fmt<span class="hl opt">.</span><span class="hl kwd">Printf</span><span class="hl opt">(</span><span class="hl str">&quot;%d</span><span class="hl esc">\t</span> <span class="hl str">trees of depth %d</span><span class="hl esc">\t</span> <span class="hl str">check: %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">,</span>
      iterations<span class="hl opt">&lt;&lt;</span><span class="hl num">1</span><span class="hl opt">,</span> depth<span class="hl opt">,</span> check<span class="hl opt">)</span>
<span class="hl opt">}</span>

<span class="hl kwa">func</span> <span class="hl kwd">checkTree</span><span class="hl opt">(</span>n <span class="hl opt">*</span>Node<span class="hl opt">)</span> <span class="hl kwb">int</span> <span class="hl opt">{</span>
   <span class="hl kwa">if</span> n<span class="hl opt">.</span>left <span class="hl opt">==</span> <span class="hl kwb">nil</span> <span class="hl opt">{</span>
      <span class="hl kwa">return</span> n<span class="hl opt">.</span>item
   <span class="hl opt">}</span>
   <span class="hl kwa">return</span> <span class="hl kwd">checkTree</span><span class="hl opt">(</span>n<span class="hl opt">.</span>left<span class="hl opt">) -</span> <span class="hl kwd">checkTree</span><span class="hl opt">(</span>n<span class="hl opt">.</span>right<span class="hl opt">) +</span> n<span class="hl opt">.</span>item
<span class="hl opt">}</span>

<span class="hl kwa">func</span> <span class="hl kwd">createTree</span><span class="hl opt">(</span>item<span class="hl opt">,</span> depth <span class="hl kwb">int</span><span class="hl opt">) *</span>Node <span class="hl opt">{</span>
   node <span class="hl opt">:= &amp;</span>Node<span class="hl opt">{</span>item<span class="hl opt">:</span> item<span class="hl opt">}</span>
   <span class="hl kwa">if</span> depth <span class="hl opt">&gt;</span> <span class="hl num">0</span> <span class="hl opt">{</span>
      item <span class="hl opt">+=</span> item
      depth<span class="hl opt">--</span>
      node<span class="hl opt">.</span>left <span class="hl opt">=</span> <span class="hl kwd">createTree</span><span class="hl opt">(</span>item<span class="hl opt">-</span><span class="hl num">1</span><span class="hl opt">,</span> depth<span class="hl opt">)</span>
      node<span class="hl opt">.</span>right <span class="hl opt">=</span> <span class="hl kwd">createTree</span><span class="hl opt">(</span>item<span class="hl opt">,</span> depth<span class="hl opt">)</span>
   <span class="hl opt">}</span>
   <span class="hl kwa">return</span> node
<span class="hl opt">}</span>

<span class="hl kwa">func</span> <span class="hl kwd">main</span><span class="hl opt">() {</span>
   n <span class="hl opt">:=</span> <span class="hl num">0</span>
   flag<span class="hl opt">.</span><span class="hl kwd">Parse</span><span class="hl opt">()</span>
   <span class="hl kwa">if</span> flag<span class="hl opt">.</span><span class="hl kwd">NArg</span><span class="hl opt">() &gt;</span> <span class="hl num">0</span> <span class="hl opt">{</span>
      n<span class="hl opt">,</span> _ <span class="hl opt">=</span> strconv<span class="hl opt">.</span><span class="hl kwd">Atoi</span><span class="hl opt">(</span>flag<span class="hl opt">.</span><span class="hl kwd">Arg</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">))</span>
   <span class="hl opt">}</span>

   maxDepth <span class="hl opt">:=</span> n
   <span class="hl kwa">if</span> minDepth<span class="hl opt">+</span><span class="hl num">2</span> <span class="hl opt">&gt;</span> n <span class="hl opt">{</span>
      maxDepth <span class="hl opt">=</span> minDepth <span class="hl opt">+</span> <span class="hl num">2</span>
   <span class="hl opt">}</span>

   <span class="hl opt">{</span>
      stretchDepth <span class="hl opt">:=</span> maxDepth <span class="hl opt">+</span> <span class="hl num">1</span>
      check <span class="hl opt">:=</span> <span class="hl kwd">checkTree</span><span class="hl opt">(</span><span class="hl kwd">createTree</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">,</span> stretchDepth<span class="hl opt">))</span>
      fmt<span class="hl opt">.</span><span class="hl kwd">Printf</span><span class="hl opt">(</span><span class="hl str">&quot;stretch tree of depth %d</span><span class="hl esc">\t</span> <span class="hl str">check: %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">,</span> stretchDepth<span class="hl opt">,</span> check<span class="hl opt">)</span>
   <span class="hl opt">}</span>
   <span class="hl kwd">trees</span><span class="hl opt">(</span>maxDepth<span class="hl opt">)</span>
<span class="hl opt">}</span>
